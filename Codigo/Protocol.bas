Attribute VB_Name = "Protocol"

Option Explicit

''
'When we have a list of strings, we use this to separate them and prevent
'having too many string lengths in the queue. Yes, each string is NULL-terminated :P
Private Const SEPARATOR             As String * 1 = vbNullChar

''
'The last existing client packet id.
Private Const LAST_CLIENT_PACKET_ID As Byte = 255

''
'Auxiliar ByteQueue used as buffer to generate messages not intended to be sent right away.
'Specially usefull to create a message once and send it over to several clients.
Private auxiliarBuffer              As New clsByteQueue

Private Enum ServerPacketID

    logged                  ' LOGGED  0
    RemoveDialogs           ' QTDL
    RemoveCharDialog        ' QDL
    NavigateToggle          ' NAVEG
    EquiteToggle
    Disconnect              ' FINOK
    CommerceEnd             ' FINCOMOK
    BankEnd                 ' FINBANOK
    CommerceInit            ' INITCOM
    BankInit                ' INITBANCO
    UserCommerceInit        ' INITCOMUSU   10
    UserCommerceEnd         ' FINCOMUSUOK
    ShowBlacksmithForm      ' SFH
    ShowCarpenterForm       ' SFC
    NPCKillUser             ' 6
    BlockedWithShieldUser   ' 7
    BlockedWithShieldOther  ' 8
    CharSwing               ' U1
    SafeModeOn              ' SEGON
    SafeModeOff             ' SEGOFF 20
    PartySafeOn
    PartySafeOff
    CantUseWhileMeditating  ' M!
    UpdateSta               ' ASS
    UpdateMana              ' ASM
    UpdateHP                ' ASH
    UpdateGold              ' ASG
    UpdateExp               ' ASE 30
    changeMap               ' CM
    PosUpdate               ' PU
    NPCHitUser              ' N2
    UserHitNPC              ' U2
    UserAttackedSwing       ' U3
    UserHittedByUser        ' N4
    UserHittedUser          ' N5
    ChatOverHead            ' ||
    ConsoleMsg              ' || - Beware!! its the same as above, but it was properly splitted
    GuildChat               ' |+   40
    ShowMessageBox          ' !!
    MostrarCuenta
    UserIndexInServer       ' IU
    UserCharIndexInServer   ' IP
    CharacterCreate         ' CC
    CharacterRemove         ' BP
    CharacterMove           ' MP, +, * and _ '
    ForceCharMove
    CharacterChange         ' CP
    ObjectCreate            ' HO
    fxpiso
    ObjectDelete            ' BO  50
    BlockPosition           ' BQ
    PlayMIDI                ' TM
    PlayWave                ' TW
    guildList               ' GL
    AreaChanged             ' CA
    PauseToggle             ' BKW
    RainToggle              ' LLU
    CreateFX                ' CFX
    UpdateUserStats         ' EST
    WorkRequestTarget       ' T01 60
    ChangeInventorySlot     ' CSI
    InventoryUnlockSlots
    ChangeBankSlot          ' SBO
    ChangeSpellSlot         ' SHS
    Atributes               ' ATR
    BlacksmithWeapons       ' LAH
    BlacksmithArmors        ' LAR
    CarpenterObjects        ' OBR
    RestOK                  ' DOK
    ErrorMsg                ' ERR
    Blind                   ' CEGU 70
    Dumb                    ' DUMB
    ShowSignal              ' MCAR
    ChangeNPCInventorySlot  ' NPCI
    UpdateHungerAndThirst   ' EHYS
    MiniStats               ' MEST
    LevelUp                 ' SUNI
    AddForumMsg             ' FMSG
    ShowForumForm           ' MFOR
    SetInvisible            ' NOVER 80
    DiceRoll                ' DADOS
    MeditateToggle          ' MEDOK
    BlindNoMore             ' NSEGUE
    DumbNoMore              ' NESTUP
    SendSkills              ' SKILLS
    TrainerCreatureList     ' LSTCRI
    guildNews               ' GUILDNE
    OfferDetails            ' PEACEDE & ALLIEDE
    AlianceProposalsList    ' ALLIEPR
    PeaceProposalsList      ' PEACEPR 90
    CharacterInfo           ' CHRINFO
    GuildLeaderInfo         ' LEADERI
    GuildDetails            ' CLANDET
    ShowGuildFundationForm  ' SHOWFUN
    ParalizeOK              ' PARADOK
    ShowUserRequest         ' PETICIO
    ChangeUserTradeSlot     ' COMUSUINV
    SendNight               ' NOC
    Pong
    UpdateTagAndStatus
    FYA
    CerrarleCliente
    Contadores
    
    'GM messages
    SpawnList               ' SPL
    ShowSOSForm             ' MSOS
    ShowMOTDEditionForm     ' ZMOTD
    ShowGMPanelForm         ' ABPANEL
    UserNameList            ' LISTUSU
    PersonajesDeCuenta
    UserOnline '110
    ParticleFX
    ParticleFXToFloor
    ParticleFXWithDestino
    ParticleFXWithDestinoXY
    Hora
    light
    AuraToChar
    SpeedToChar
    LightToFloor
    NieveToggle
    NieblaToggle
    Goliath
    TextOverChar
    TextOverTile
    TextCharDrop
    FlashScreen
    AlquimistaObj
    ShowAlquimiaForm
    Familiar
    SastreObj
    ShowSastreForm ' 126
    VelocidadToggle
    MacroTrabajoToggle
    RefreshAllInventorySlot
    BindKeys
    ShowFrmLogear
    ShowFrmMapa
    InmovilizadoOK
    BarFx
    SetEscribiendo
    Logros
    TrofeoToggleOn
    TrofeoToggleOff
    LocaleMsg
    ListaCorreo
    ShowPregunta
    DatosGrupo
    ubicacion
    CorreoPicOn
    DonadorObj
    ArmaMov
    EscudoMov
    ActShop
    ViajarForm
    Oxigeno
    NadarToggle
    ShowFundarClanForm
    CharUpdateHP
    Ranking
    PosLLamadaDeClan
    QuestDetails
    QuestListSend
    NpcQuestListSend
    UpdateNPCSimbolo
    ClanSeguro
    Intervals
    UpdateUserKey
    UpdateRM
    UpdateDM
    RequestProcesses
    RequestScreenShot
    ShowProcesses
    ShowScreenShot
    ScreenShotData
    Tolerancia0
    Redundancia
    SeguroResu
    Stopped
    InvasionInfo
End Enum

Private Enum ClientPacketID

    LoginExistingChar       'OLOGIN
    LoginNewChar            'NLOGIN
    ThrowDice
    Talk                    ';
    Yell                    '-
    Whisper                 '\
    Walk                    'M
    RequestPositionUpdate   'RPU
    Attack                  'AT
    PickUp                  'AG
    SafeToggle              '/SEG & SEG  (SEG's behaviour has to be coded in the client)
    PartySafeToggle
    RequestGuildLeaderInfo  'GLINFO
    RequestAtributes        'ATR
    RequestSkills           'ESKI
    RequestMiniStats        'FEST
    CommerceEnd             'FINCOM
    UserCommerceEnd         'FINCOMUSU
    BankEnd                 'FINBAN
    UserCommerceOk          'COMUSUOK
    UserCommerceReject      'COMUSUNO
    Drop                    'TI
    CastSpell               'LH
    LeftClick               'LC
    DoubleClick             'RC
    Work                    'UK
    UseSpellMacro           'UMH
    UseItem                 'USA
    CraftBlacksmith         'CNS
    CraftCarpenter          'CNC
    WorkLeftClick           'WLC
    CreateNewGuild          'CIG
    SpellInfo               'INFS
    EquipItem               'EQUI
    ChangeHeading           'CHEA
    ModifySkills            'SKSE
    Train                   'ENTR
    CommerceBuy             'COMP
    BankExtractItem         'RETI
    CommerceSell            'VEND
    BankDeposit             'DEPO
    ForumPost               'DEMSG
    MoveSpell               'DESPHE
    ClanCodexUpdate         'DESCOD
    UserCommerceOffer       'OFRECER
    GuildAcceptPeace        'ACEPPEAT
    GuildRejectAlliance     'RECPALIA
    GuildRejectPeace        'RECPPEAT
    GuildAcceptAlliance     'ACEPALIA
    GuildOfferPeace         'PEACEOFF
    GuildOfferAlliance      'ALLIEOFF
    GuildAllianceDetails    'ALLIEDET
    GuildPeaceDetails       'PEACEDET
    GuildRequestJoinerInfo  'ENVCOMEN
    GuildAlliancePropList   'ENVALPRO
    GuildPeacePropList      'ENVPROPP
    GuildDeclareWar         'DECGUERR
    GuildNewWebsite         'NEWWEBSI
    GuildAcceptNewMember    'ACEPTARI
    GuildRejectNewMember    'RECHAZAR
    GuildKickMember         'ECHARCLA
    GuildUpdateNews         'ACTGNEWS
    GuildMemberInfo         '1HRINFO<
    GuildOpenElections      'ABREELEC
    GuildRequestMembership  'SOLICITUD
    GuildRequestDetails     'CLANDETAILS
    Online                  '/ONLINE
    Quit                    '/SALIR
    GuildLeave              '/SALIRCLAN
    RequestAccountState     '/BALANCE
    PetStand                '/QUIETO
    PetFollow               '/ACOMPAÑAR
    PetLeave                '/LIBERAR
    GrupoMsg                '/GrupoMsg
    TrainList               '/ENTRENAR
    Rest                    '/DESCANSAR
    Meditate                '/MEDITAR
    Resucitate              '/RESUCITAR
    Heal                    '/CURAR
    Help                    '/AYUDA
    RequestStats            '/EST
    CommerceStart           '/COMERCIAR
    BankStart               '/BOVEDA
    Enlist                  '/ENLISTAR
    Information             '/INFORMACION
    Reward                  '/RECOMPENSA
    RequestMOTD             '/MOTD
    UpTime                  '/UPTIME
    Inquiry                 '/ENCUESTA ( with no params )
    GuildMessage            '/CMSG
    CentinelReport          '/CENTINELA
    GuildOnline             '/ONLINECLAN
    CouncilMessage          '/BMSG
    RoleMasterRequest       '/ROL
    GMRequest               '/GM
    ChangeDescription       '/DESC
    GuildVote               '/VOTO
    punishments             '/PENAS
    ChangePassword          '/Contraseña
    Gamble                  '/APOSTAR
    InquiryVote             '/ENCUESTA ( with parameters )
    LeaveFaction            '/RETIRAR ( with no arguments )
    BankExtractGold         '/RETIRAR ( with arguments )
    BankDepositGold         '/DEPOSITAR
    Denounce                '/DENUNCIAR
    Ping                    '/PING
    
    'GM messages
    GMMessage               '/GMSG
    showName                '/SHOWNAME
    OnlineRoyalArmy         '/ONLINEREAL
    OnlineChaosLegion       '/ONLINECAOS
    GoNearby                '/IRCERCA
    comment                 '/REM
    serverTime              '/HORA
    Where                   '/DONDE
    CreaturesInMap          '/NENE
    WarpMeToTarget          '/TELEPLOC
    WarpChar                '/TELEP
    Silence                 '/SILENCIAR
    SOSShowList             '/SHOW SOS
    SOSRemove               'SOSDONE
    GoToChar                '/IRA
    invisible               '/INVISIBLE
    GMPanel                 '/PANELGM
    RequestUserList         'LISTUSU
    Working                 '/TRABAJANDO
    Hiding                  '/OCULTANDO
    Jail                    '/CARCEL
    KillNPC                 '/RMATA
    WarnUser                '/ADVERTENCIA
    EditChar                '/MOD
    RequestCharInfo         '/INFO
    RequestCharStats        '/STAT
    RequestCharGold         '/BAL
    RequestCharInventory    '/INV
    RequestCharBank         '/BOV
    RequestCharSkills       '/SKILLS
    ReviveChar              '/REVIVIR
    OnlineGM                '/ONLINEGM
    OnlineMap               '/ONLINEMAP
    Forgive                 '/PERDON
    Kick                    '/ECHAR
    Execute                 '/EJECUTAR
    BanChar                 '/BAN
    UnbanChar               '/UNBAN
    NPCFollow               '/SEGUIR
    SummonChar              '/SUM
    SpawnListRequest        '/CC
    SpawnCreature           'SPA
    ResetNPCInventory       '/RESETINV
    CleanWorld              '/LIMPIAR
    ServerMessage           '/RMSG
    NickToIP                '/NICK2IP
    IPToNick                '/IP2NICK
    GuildOnlineMembers      '/ONCLAN
    TeleportCreate          '/CT
    TeleportDestroy         '/DT
    RainToggle              '/LLUVIA
    SetCharDescription      '/SETDESC
    ForceMIDIToMap          '/FORCEMIDIMAP
    ForceWAVEToMap          '/FORCEWAVMAP
    RoyalArmyMessage        '/REALMSG
    ChaosLegionMessage      '/CAOSMSG
    CitizenMessage          '/CIUMSG
    CriminalMessage         '/CRIMSG
    TalkAsNPC               '/TALKAS
    DestroyAllItemsInArea   '/MASSDEST
    AcceptRoyalCouncilMember '/ACEPTCONSE
    AcceptChaosCouncilMember '/ACEPTCONSECAOS
    ItemsInTheFloor         '/PISO
    MakeDumb                '/ESTUPIDO
    MakeDumbNoMore          '/NOESTUPIDO
    DumpIPTables            '/DUMPSECURITY
    CouncilKick             '/KICKCONSE
    SetTrigger              '/TRIGGER
    AskTrigger              '/TRIGGER with no args
    BannedIPList            '/BANIPLIST
    BannedIPReload          '/BANIPRELOAD
    GuildMemberList         '/MIEMBROSCLAN
    GuildBan                '/BANCLAN
    banip                   '/BANIP
    UnbanIP                 '/UNBANIP
    CreateItem              '/CI
    DestroyItems            '/DEST
    ChaosLegionKick         '/NOCAOS
    RoyalArmyKick           '/NOREAL
    ForceMIDIAll            '/FORCEMIDI
    ForceWAVEAll            '/FORCEWAV
    RemovePunishment        '/BORRARPENA
    TileBlockedToggle       '/BLOQ
    KillNPCNoRespawn        '/MATA
    KillAllNearbyNPCs       '/MASSKILL
    LastIP                  '/LASTIP
    ChangeMOTD              '/MOTDCAMBIA
    SetMOTD                 'ZMOTD
    SystemMessage           '/SMSG
    CreateNPC               '/ACC
    CreateNPCWithRespawn    '/RACC
    ImperialArmour          '/AI1 - 4
    ChaosArmour             '/AC1 - 4
    NavigateToggle          '/NAVE
    ServerOpenToUsersToggle '/HABILITAR
    Participar           '/APAGAR
    TurnCriminal            '/CONDEN
    ResetFactions           '/RAJAR
    RemoveCharFromGuild     '/RAJARCLAN
    RequestCharMail         '/LASTEMAIL
    AlterPassword           '/APASS
    AlterMail               '/AEMAIL
    AlterName               '/ANAME
    DoBackUp                '/DOBACKUP
    ShowGuildMessages       '/SHOWCMSG
    SaveMap                 '/GUARDAMAPA
    ChangeMapInfoPK         '/MODMAPINFO PK
    ChangeMapInfoBackup     '/MODMAPINFO BACKUP
    ChangeMapInfoRestricted '/MODMAPINFO RESTRINGIR
    ChangeMapInfoNoMagic    '/MODMAPINFO MAGIASINEFECTO
    ChangeMapInfoNoInvi     '/MODMAPINFO INVISINEFECTO
    ChangeMapInfoNoResu     '/MODMAPINFO RESUSINEFECTO
    ChangeMapInfoLand       '/MODMAPINFO TERRENO
    ChangeMapInfoZone       '/MODMAPINFO ZONA
    SaveChars               '/GRABAR
    CleanSOS                '/BORRAR SOS
    ShowServerForm          '/SHOW INT
    night                   '/NOCHE
    KickAllChars            '/ECHARTODOSPJS
    RequestTCPStats         '/TCPESSTATS
    ReloadNPCs              '/RELOADNPCS
    ReloadServerIni         '/RELOADSINI
    ReloadSpells            '/RELOADHECHIZOS
    ReloadObjects           '/RELOADOBJ
    Restart                 '/REINICIAR
    ResetAutoUpdate         '/AUTOUPDATE
    ChatColor               '/CHATCOLOR
    Ignored                 '/IGNORADO
    CheckSlot               '/SLOT
    'Nuevas Ladder
    GlobalMessage           '/CONSOLA
    GlobalOnOff
    SilenciarUser           '/SILENCIAR
    CrearNuevaCuenta
    ValidarCuenta
    IngresarConCuenta
    RevalidarCuenta
    BorrarPJ
    RecuperandoContraseña
    BorrandoCuenta
    NewPacketID
    Desbuggear
    DarLlaveAUsuario
    SacarLlave
    VerLlaves
    UseKey
    Day
    SetTime
    DonateGold              '/DONAR
    Promedio                '/PROMEDIO
    GiveItem                '/DAR
End Enum

Private Enum NewPacksID
    OfertaInicial
    OfertaDeSubasta
    QuestionGM
    CuentaRegresiva
    PossUser
    Duel
    AcceptDuel
    CancelDuel
    QuitDuel
    NieveToggle
    NieblaToggle
    TransFerGold
    Moveitem
    Genio
    Casarse
    CraftAlquimista
    RequestFamiliar
    FlagTrabajar
    CraftSastre
    MensajeUser
    TraerBoveda
    CompletarAccion
    Escribiendo
    TraerRecompensas
    ReclamarRecompensa
    Correo
    SendCorreo
    RetirarItemCorreo
    BorrarCorreo
    InvitarGrupo
    ResponderPregunta
    RequestGrupo
    AbandonarGrupo
    HecharDeGrupo
    MacroPossent
    SubastaInfo
    BanCuenta
    unBanCuenta
    BanSerial
    unBanSerial
    CerrarCliente
    EventoInfo
    CrearEvento
    BanTemporal
    Traershop
    ComprarItem
    ScrollInfo
    CancelarExit
    EnviarCodigo
    CrearTorneo
    ComenzarTorneo
    CancelarTorneo
    BusquedaTesoro
    CompletarViaje
    BovedaMoveItem
    QuieroFundarClan
    LlamadadeClan
    MarcaDeClanPack
    MarcaDeGMPack
    TraerRanking
    Pareja
    Quest
    QuestAccept
    QuestListRequest
    QuestDetailsRequest
    QuestAbandon
    SeguroClan
    CreatePretorianClan     '/CREARPRETORIANOS
    RemovePretorianClan     '/ELIMINARPRETORIANOS
    Home                    '/HOGAR
    Consulta                '/CONSULTA
    RequestScreenShot       '/SS
    RequestProcesses        '/VERPROCESOS
    SendScreenShot
    SendProcesses
    Tolerancia0             '/T0
    GetMapInfo              '/MAPINFO
    FinEvento
    SeguroResu
    CuentaExtractItem
    CuentaDeposit
    CreateEvent
End Enum

Public Enum eEditOptions

    eo_Gold = 1
    eo_Experience
    eo_Body
    eo_Head
    eo_CiticensKilled
    eo_CriminalsKilled
    eo_Level
    eo_Class
    eo_Skills
    eo_SkillPointsLeft
    eo_Sex
    eo_Raza
    eo_Arma
    eo_Escudo
    eo_Casco
    eo_Particula
    eo_Vida
    eo_Mana
    eo_Energia
    eo_MinHP
    eo_MinMP
    eo_Hit
    eo_MinHit
    eo_MaxHit
    eo_Desc
    eo_Intervalo
    eo_Hogar

End Enum

Public Enum FontTypeNames

    FONTTYPE_TALK
    FONTTYPE_FIGHT
    FONTTYPE_WARNING
    FONTTYPE_INFO
    FONTTYPE_INFOBOLD
    FONTTYPE_EJECUCION
    FONTTYPE_PARTY
    FONTTYPE_VENENO
    FONTTYPE_GUILD
    FONTTYPE_SERVER
    FONTTYPE_GUILDMSG
    FONTTYPE_CONSEJO
    FONTTYPE_CONSEJOCAOS
    FONTTYPE_CONSEJOVesA
    FONTTYPE_CONSEJOCAOSVesA
    FONTTYPE_CENTINELA
    FONTTYPE_GMMSG
    FONTTYPE_GM
    FONTTYPE_DIOS
    FONTTYPE_CITIZEN
    FONTTYPE_CRIMINAL
    FONTTYPE_EXP
    FONTTYPE_SUBASTA
    FONTTYPE_GLOBAL
    FONTTYPE_MP
    FONTTYPE_ROSA
    FONTTYPE_VIOLETA
    FONTTYPE_INFOIAO
    
    FONTTYPE_New_Amarillo_Oscuro
    FONTTYPE_New_Verde_Oscuro
    FONTTYPE_New_Naranja
    FONTTYPE_New_Celeste
    FONTTYPE_New_Amarillo_Verdoso
    FONTTYPE_New_Gris
    FONTTYPE_New_Blanco
    FONTTYPE_New_Rojo_Salmon
    FONTTYPE_New_DONADOR
    FONTTYPE_New_GRUPO
    FONTTYPE_New_Eventos
    
    FONTTYPE_PROMEDIO_IGUAL
    FONTTYPE_PROMEDIO_MENOR
    FONTTYPE_PROMEDIO_MAYOR
    
End Enum


Public Type PersonajeCuenta

    nombre As String
    nivel As Byte
    Mapa As Integer
    cuerpo As Integer
    Cabeza As Integer
    Status As Byte
    clase As Byte
    Arma As Integer
    Escudo As Integer
    Casco As Integer
    ClanIndex As Integer

End Type

''
' Handles incoming data.
'
' @param    UserIndex The index of the user sending the message.

Public Function HandleIncomingData(ByVal UserIndex As Integer) As Boolean
        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 01/09/07
        '
        '***************************************************

        On Error Resume Next

        ' Dim packetID As Byte
    
        '  PaquetesCount = PaquetesCount + 1
        ' frmMain.paquetesRecibidos = PaquetesCount
    
        ' packetID = UserList(UserIndex).incomingData.PeekByte()
    
        Dim packetId As Long
100     packetId = CLng(UserList(UserIndex).incomingData.PeekByte())

        'frmMain.listaDePaquetes.AddItem "Paq:" & PaquetesCount & ": " & packetID
    
        ' Debug.Print "Llego paquete ní" & packetID & " pesa: " & UserList(UserIndex).incomingData.length & "Bytes"
    
        'Does the packet requires a logged user??
102     If Not (packetId = ClientPacketID.LoginExistingChar Or packetId = ClientPacketID.LoginNewChar Or packetId = ClientPacketID.CrearNuevaCuenta Or packetId = ClientPacketID.IngresarConCuenta Or packetId = ClientPacketID.RevalidarCuenta Or packetId = ClientPacketID.BorrarPJ Or packetId = ClientPacketID.RecuperandoContraseña Or packetId = ClientPacketID.BorrandoCuenta Or packetId = ClientPacketID.ValidarCuenta Or packetId = ClientPacketID.ThrowDice) Then
        
            'Is the user actually logged?
104         If Not UserList(UserIndex).flags.UserLogged Then
106             Call CloseSocket(UserIndex)
                Exit Function
        
                'He is logged. Reset idle counter if id is valid.
108         ElseIf packetId <= LAST_CLIENT_PACKET_ID Then
110             UserList(UserIndex).Counters.IdleCount = 0

            End If

        Else
    
112         UserList(UserIndex).Counters.IdleCount = 0
        
            ' Envió el primer paquete
114         UserList(UserIndex).flags.FirstPacket = True
            
            #If AntiExternos = 1 Then
                UserList(UserIndex).Redundance = RandomNumber(2, 255)
                Call WriteRedundancia(UserIndex)
            #End If

        End If
    
116     Select Case packetId
        
            Case ClientPacketID.Walk                    'M
118             Call HandleWalk(UserIndex)
    
120         Case ClientPacketID.Talk                    ';
122             Call HandleTalk(UserIndex)
        
124         Case ClientPacketID.Yell                    '-
126             Call HandleYell(UserIndex)
        
128         Case ClientPacketID.Whisper                 '\
130             Call HandleWhisper(UserIndex)
    
132         Case ClientPacketID.LoginExistingChar       'OLOGIN
134             Call HandleLoginExistingChar(UserIndex)
            
136         Case ClientPacketID.CrearNuevaCuenta
138             Call HandleCrearCuenta(UserIndex)
        
140         Case ClientPacketID.IngresarConCuenta
142             Call HandleIngresarConCuenta(UserIndex)
            
144         Case ClientPacketID.ValidarCuenta
146             Call HandleValidarCuenta(UserIndex)
            
148         Case ClientPacketID.RevalidarCuenta
150             Call HandleReValidarCuenta(UserIndex)
            
152         Case ClientPacketID.BorrarPJ
154             Call HandleBorrarPJ(UserIndex)
            
156         Case ClientPacketID.RecuperandoContraseña
158             Call HandleRecuperandoContraseña(UserIndex)
        
160         Case ClientPacketID.BorrandoCuenta
162             Call HandleBorrandoCuenta(UserIndex)
        
164         Case ClientPacketID.LoginNewChar            'NLOGIN
166             Call HandleLoginNewChar(UserIndex)
            
168         Case ClientPacketID.ThrowDice
170             Call HandleThrowDice(UserIndex)
        
172         Case ClientPacketID.RequestPositionUpdate   'RPU
174             Call HandleRequestPositionUpdate(UserIndex)
        
176         Case ClientPacketID.Attack                  'AT
178             Call HandleAttack(UserIndex)
        
180         Case ClientPacketID.PickUp                  'AG
182             Call HandlePickUp(UserIndex)
        
184         Case ClientPacketID.SafeToggle              '/SEG & SEG  (SEG's behaviour has to be coded in the client)
186             Call HandleSafeToggle(UserIndex)
        
188         Case ClientPacketID.PartySafeToggle
190             Call HandlePartyToggle(UserIndex)
        
192         Case ClientPacketID.RequestGuildLeaderInfo  'GLINFO
194             Call HandleRequestGuildLeaderInfo(UserIndex)
        
196         Case ClientPacketID.RequestAtributes        'ATR
198             Call HandleRequestAtributes(UserIndex)
           
200         Case ClientPacketID.RequestSkills           'ESKI
202             Call HandleRequestSkills(UserIndex)
        
204         Case ClientPacketID.RequestMiniStats        'FEST
206             Call HandleRequestMiniStats(UserIndex)
        
208         Case ClientPacketID.CommerceEnd             'FINCOM
210             Call HandleCommerceEnd(UserIndex)
        
212         Case ClientPacketID.UserCommerceEnd         'FINCOMUSU
214             Call HandleUserCommerceEnd(UserIndex)
        
216         Case ClientPacketID.BankEnd                 'FINBAN
218             Call HandleBankEnd(UserIndex)
        
220         Case ClientPacketID.UserCommerceOk          'COMUSUOK
222             Call HandleUserCommerceOk(UserIndex)
        
224         Case ClientPacketID.UserCommerceReject      'COMUSUNO
226             Call HandleUserCommerceReject(UserIndex)
        
228         Case ClientPacketID.Drop                    'TI
230             Call HandleDrop(UserIndex)
        
232         Case ClientPacketID.CastSpell               'LH
234             Call HandleCastSpell(UserIndex)
        
236         Case ClientPacketID.LeftClick               'LC
238             Call HandleLeftClick(UserIndex)
        
240         Case ClientPacketID.DoubleClick             'RC
242             Call HandleDoubleClick(UserIndex)
        
244         Case ClientPacketID.Work                    'UK
246             Call HandleWork(UserIndex)
        
248         Case ClientPacketID.UseSpellMacro           'UMH
250             Call HandleUseSpellMacro(UserIndex)
        
252         Case ClientPacketID.UseItem                 'USA
254             Call HandleUseItem(UserIndex)
        
256         Case ClientPacketID.CraftBlacksmith         'CNS
258             Call HandleCraftBlacksmith(UserIndex)
        
260         Case ClientPacketID.CraftCarpenter          'CNC
262             Call HandleCraftCarpenter(UserIndex)
        
264         Case ClientPacketID.WorkLeftClick           'WLC
266             Call HandleWorkLeftClick(UserIndex)
        
268         Case ClientPacketID.CreateNewGuild          'CIG
270             Call HandleCreateNewGuild(UserIndex)
        
272         Case ClientPacketID.SpellInfo               'INFS
274             Call HandleSpellInfo(UserIndex)
        
276         Case ClientPacketID.EquipItem               'EQUI
278             Call HandleEquipItem(UserIndex)
        
280         Case ClientPacketID.ChangeHeading           'CHEA
282             Call HandleChangeHeading(UserIndex)
        
284         Case ClientPacketID.ModifySkills            'SKSE
286             Call HandleModifySkills(UserIndex)
        
288         Case ClientPacketID.Train                   'ENTR
290             Call HandleTrain(UserIndex)
        
292         Case ClientPacketID.CommerceBuy             'COMP
294             Call HandleCommerceBuy(UserIndex)
        
296         Case ClientPacketID.BankExtractItem         'RETI
298             Call HandleBankExtractItem(UserIndex)
        
300         Case ClientPacketID.CommerceSell            'VEND
302             Call HandleCommerceSell(UserIndex)
        
304         Case ClientPacketID.BankDeposit             'DEPO
306             Call HandleBankDeposit(UserIndex)
        
308         Case ClientPacketID.ForumPost               'DEMSG
310             Call HandleForumPost(UserIndex)
        
312         Case ClientPacketID.MoveSpell               'DESPHE
314             Call HandleMoveSpell(UserIndex)
        
316         Case ClientPacketID.ClanCodexUpdate         'DESCOD
318             Call HandleClanCodexUpdate(UserIndex)
        
320         Case ClientPacketID.UserCommerceOffer       'OFRECER
322             Call HandleUserCommerceOffer(UserIndex)
        
324         Case ClientPacketID.GuildAcceptPeace        'ACEPPEAT
326             Call HandleGuildAcceptPeace(UserIndex)
        
328         Case ClientPacketID.GuildRejectAlliance     'RECPALIA
330             Call HandleGuildRejectAlliance(UserIndex)
        
332         Case ClientPacketID.GuildRejectPeace        'RECPPEAT
334             Call HandleGuildRejectPeace(UserIndex)
        
336         Case ClientPacketID.GuildAcceptAlliance     'ACEPALIA
338             Call HandleGuildAcceptAlliance(UserIndex)
        
340         Case ClientPacketID.GuildOfferPeace         'PEACEOFF
342             Call HandleGuildOfferPeace(UserIndex)
        
344         Case ClientPacketID.GuildOfferAlliance      'ALLIEOFF
346             Call HandleGuildOfferAlliance(UserIndex)
        
348         Case ClientPacketID.GuildAllianceDetails    'ALLIEDET
350             Call HandleGuildAllianceDetails(UserIndex)
        
352         Case ClientPacketID.GuildPeaceDetails       'PEACEDET
354             Call HandleGuildPeaceDetails(UserIndex)
        
356         Case ClientPacketID.GuildRequestJoinerInfo  'ENVCOMEN
358             Call HandleGuildRequestJoinerInfo(UserIndex)
        
360         Case ClientPacketID.GuildAlliancePropList   'ENVALPRO
362             Call HandleGuildAlliancePropList(UserIndex)
        
364         Case ClientPacketID.GuildPeacePropList      'ENVPROPP
366             Call HandleGuildPeacePropList(UserIndex)
        
368         Case ClientPacketID.GuildDeclareWar         'DECGUERR
370             Call HandleGuildDeclareWar(UserIndex)
        
372         Case ClientPacketID.GuildNewWebsite         'NEWWEBSI
374             Call HandleGuildNewWebsite(UserIndex)
        
376         Case ClientPacketID.GuildAcceptNewMember    'ACEPTARI
378             Call HandleGuildAcceptNewMember(UserIndex)
        
380         Case ClientPacketID.GuildRejectNewMember    'RECHAZAR
382             Call HandleGuildRejectNewMember(UserIndex)
        
384         Case ClientPacketID.GuildKickMember         'ECHARCLA
386             Call HandleGuildKickMember(UserIndex)
        
388         Case ClientPacketID.GuildUpdateNews         'ACTGNEWS
390             Call HandleGuildUpdateNews(UserIndex)
        
392         Case ClientPacketID.GuildMemberInfo         '1HRINFO<
394             Call HandleGuildMemberInfo(UserIndex)
        
396         Case ClientPacketID.GuildOpenElections      'ABREELEC
398             Call HandleGuildOpenElections(UserIndex)
        
400         Case ClientPacketID.GuildRequestMembership  'SOLICITUD
402             Call HandleGuildRequestMembership(UserIndex)
        
404         Case ClientPacketID.GuildRequestDetails     'CLANDETAILS
406             Call HandleGuildRequestDetails(UserIndex)
                  
408         Case ClientPacketID.Online                  '/ONLINE
410             Call HandleOnline(UserIndex)
        
412         Case ClientPacketID.Quit                    '/SALIR
414             Call HandleQuit(UserIndex)
        
416         Case ClientPacketID.GuildLeave              '/SALIRCLAN
418             Call HandleGuildLeave(UserIndex)
        
420         Case ClientPacketID.RequestAccountState     '/BALANCE
422             Call HandleRequestAccountState(UserIndex)
        
424         Case ClientPacketID.PetStand                '/QUIETO
426             Call HandlePetStand(UserIndex)
        
428         Case ClientPacketID.PetFollow               '/ACOMPAÑAR
430             Call HandlePetFollow(UserIndex)
            
432         Case ClientPacketID.PetLeave                '/LIBERAR
434             Call HandlePetLeave(UserIndex)
        
436         Case ClientPacketID.GrupoMsg
438             Call HandleGrupoMsg(UserIndex)
        
440         Case ClientPacketID.TrainList               '/ENTRENAR
442             Call HandleTrainList(UserIndex)
        
444         Case ClientPacketID.Rest                    '/DESCANSAR
446             Call HandleRest(UserIndex)
        
448         Case ClientPacketID.Meditate                '/MEDITAR
450             Call HandleMeditate(UserIndex)
        
452         Case ClientPacketID.Resucitate              '/RESUCITAR
454             Call HandleResucitate(UserIndex)
        
456         Case ClientPacketID.Heal                    '/CURAR
458             Call HandleHeal(UserIndex)
        
460         Case ClientPacketID.Help                    '/AYUDA
462             Call HandleHelp(UserIndex)
        
464         Case ClientPacketID.RequestStats            '/EST
466             Call HandleRequestStats(UserIndex)
        
468         Case ClientPacketID.CommerceStart           '/COMERCIAR
470             Call HandleCommerceStart(UserIndex)
        
472         Case ClientPacketID.BankStart               '/BOVEDA
474             Call HandleBankStart(UserIndex)
        
476         Case ClientPacketID.Enlist                  '/ENLISTAR
478             Call HandleEnlist(UserIndex)
        
480         Case ClientPacketID.Information             '/INFORMACION
482             Call HandleInformation(UserIndex)
        
484         Case ClientPacketID.Reward                  '/RECOMPENSA
486             Call HandleReward(UserIndex)
        
488         Case ClientPacketID.RequestMOTD             '/MOTD
490             Call HandleRequestMOTD(UserIndex)
        
492         Case ClientPacketID.UpTime                  '/UPTIME
494             Call HandleUpTime(UserIndex)
                
496         Case ClientPacketID.Inquiry                 '/ENCUESTA ( with no params )
498             Call HandleInquiry(UserIndex)
        
500         Case ClientPacketID.GuildMessage            '/CMSG
502             Call HandleGuildMessage(UserIndex)
        
504         Case ClientPacketID.CentinelReport          '/CENTINELA
506             Call HandleCentinelReport(UserIndex)
        
508         Case ClientPacketID.GuildOnline             '/ONLINECLAN
510             Call HandleGuildOnline(UserIndex)
        
512         Case ClientPacketID.CouncilMessage          '/BMSG
514             Call HandleCouncilMessage(UserIndex)
        
516         Case ClientPacketID.RoleMasterRequest       '/ROL
518             Call HandleRoleMasterRequest(UserIndex)
        
520         Case ClientPacketID.GMRequest               '/GM
522             Call HandleGMRequest(UserIndex)

524         Case ClientPacketID.ChangeDescription       '/DESC
526             Call HandleChangeDescription(UserIndex)
        
528         Case ClientPacketID.GuildVote               '/VOTO
530             Call HandleGuildVote(UserIndex)
        
532         Case ClientPacketID.punishments             '/PENAS
534             Call HandlePunishments(UserIndex)
        
536         Case ClientPacketID.ChangePassword          '/Contraseña
538             Call HandleChangePassword(UserIndex)
        
540         Case ClientPacketID.Gamble                  '/APOSTAR
542             Call HandleGamble(UserIndex)
        
544         Case ClientPacketID.InquiryVote             '/ENCUESTA ( with parameters )
546             Call HandleInquiryVote(UserIndex)
        
548         Case ClientPacketID.LeaveFaction            '/RETIRAR ( with no arguments )
550             Call HandleLeaveFaction(UserIndex)
        
552         Case ClientPacketID.BankExtractGold         '/RETIRAR ( with arguments )
554             Call HandleBankExtractGold(UserIndex)
        
556         Case ClientPacketID.BankDepositGold         '/DEPOSITAR
558             Call HandleBankDepositGold(UserIndex)
        
560         Case ClientPacketID.Denounce                '/DENUNCIAR
562             Call HandleDenounce(UserIndex)
        
564         Case ClientPacketID.GuildMemberList         '/MIEMBROSCLAN
566             Call HandleGuildMemberList(UserIndex)
        
568         Case ClientPacketID.Ping                    '/PING
570             Call HandlePing(UserIndex)
        
                'GM messages
572         Case ClientPacketID.GMMessage               '/GMSG
574             Call HandleGMMessage(UserIndex)
        
576         Case ClientPacketID.showName                '/SHOWNAME
578             Call HandleShowName(UserIndex)
        
580         Case ClientPacketID.OnlineRoyalArmy         '/ONLINEREAL
582             Call HandleOnlineRoyalArmy(UserIndex)
        
584         Case ClientPacketID.OnlineChaosLegion       '/ONLINECAOS
586             Call HandleOnlineChaosLegion(UserIndex)
        
588         Case ClientPacketID.GoNearby                '/IRCERCA
590             Call HandleGoNearby(UserIndex)
        
592         Case ClientPacketID.comment                 '/REM
594             Call HandleComment(UserIndex)
        
596         Case ClientPacketID.serverTime              '/HORA
598             Call HandleServerTime(UserIndex)
        
600         Case ClientPacketID.Where                   '/DONDE
602             Call HandleWhere(UserIndex)
        
604         Case ClientPacketID.CreaturesInMap          '/NENE
606             Call HandleCreaturesInMap(UserIndex)
        
608         Case ClientPacketID.WarpMeToTarget          '/TELEPLOC
610             Call HandleWarpMeToTarget(UserIndex)
        
612         Case ClientPacketID.WarpChar                '/TELEP
614             Call HandleWarpChar(UserIndex)
        
616         Case ClientPacketID.Silence                 '/SILENCIAR
618             Call HandleSilence(UserIndex)
        
620         Case ClientPacketID.SOSShowList             '/SHOW SOS
622             Call HandleSOSShowList(UserIndex)
        
624         Case ClientPacketID.SOSRemove               'SOSDONE
626             Call HandleSOSRemove(UserIndex)
        
628         Case ClientPacketID.GoToChar                '/IRA
630             Call HandleGoToChar(UserIndex)
            
632         Case ClientPacketID.Desbuggear              '/DESBUGGEAR
634             Call HandleDesbuggear(UserIndex)
            
636         Case ClientPacketID.DarLlaveAUsuario        '/DARLLAVE
638             Call HandleDarLlaveAUsuario(UserIndex)
            
640         Case ClientPacketID.SacarLlave              '/SACARLLAVE
642             Call HandleSacarLlave(UserIndex)
            
644         Case ClientPacketID.VerLlaves               '/VERLLAVES
646             Call HandleVerLlaves(UserIndex)
            
648         Case ClientPacketID.UseKey
650             Call HandleUseKey(UserIndex)
        
652         Case ClientPacketID.invisible               '/INVISIBLE
654             Call HandleInvisible(UserIndex)
        
656         Case ClientPacketID.GMPanel                 '/PANELGM
658             Call HandleGMPanel(UserIndex)
        
660         Case ClientPacketID.RequestUserList         'LISTUSU
662             Call HandleRequestUserList(UserIndex)
        
664         Case ClientPacketID.Working                 '/TRABAJANDO
666             Call HandleWorking(UserIndex)
        
668         Case ClientPacketID.Hiding                  '/OCULTANDO
670             Call HandleHiding(UserIndex)
        
672         Case ClientPacketID.Jail                    '/CARCEL
674             Call HandleJail(UserIndex)
        
676         Case ClientPacketID.KillNPC                 '/RMATA
678             Call HandleKillNPC(UserIndex)
        
680         Case ClientPacketID.WarnUser                '/ADVERTENCIA
682             Call HandleWarnUser(UserIndex)
        
684         Case ClientPacketID.EditChar                '/MOD
686             Call HandleEditChar(UserIndex)
            
688         Case ClientPacketID.RequestCharInfo         '/INFO
690             Call HandleRequestCharInfo(UserIndex)
        
692         Case ClientPacketID.RequestCharStats        '/STAT
694             Call HandleRequestCharStats(UserIndex)
            
696         Case ClientPacketID.RequestCharGold         '/BAL
698             Call HandleRequestCharGold(UserIndex)
            
700         Case ClientPacketID.RequestCharInventory    '/INV
702             Call HandleRequestCharInventory(UserIndex)
            
704         Case ClientPacketID.RequestCharBank         '/BOV
706             Call HandleRequestCharBank(UserIndex)
        
708         Case ClientPacketID.RequestCharSkills       '/SKILLS
710             Call HandleRequestCharSkills(UserIndex)
        
712         Case ClientPacketID.ReviveChar              '/REVIVIR
714             Call HandleReviveChar(UserIndex)
        
716         Case ClientPacketID.OnlineGM                '/ONLINEGM
718             Call HandleOnlineGM(UserIndex)
        
720         Case ClientPacketID.OnlineMap               '/ONLINEMAP
722             Call HandleOnlineMap(UserIndex)
        
724         Case ClientPacketID.Forgive                 '/PERDON
726             Call HandleForgive(UserIndex)
            
728         Case ClientPacketID.Kick                    '/ECHAR
730             Call HandleKick(UserIndex)
            
732         Case ClientPacketID.Execute                 '/EJECUTAR
734             Call HandleExecute(UserIndex)
            
736         Case ClientPacketID.BanChar                 '/BAN
738             Call HandleBanChar(UserIndex)
            
740         Case ClientPacketID.SilenciarUser               '/BAN
742             Call HandleSilenciarUser(UserIndex)
            
744         Case ClientPacketID.UnbanChar               '/UNBAN
746             Call HandleUnbanChar(UserIndex)
            
748         Case ClientPacketID.NPCFollow               '/SEGUIR
750             Call HandleNPCFollow(UserIndex)
            
752         Case ClientPacketID.SummonChar              '/SUM
754             Call HandleSummonChar(UserIndex)
            
756         Case ClientPacketID.SpawnListRequest        '/CC
758             Call HandleSpawnListRequest(UserIndex)
            
760         Case ClientPacketID.SpawnCreature           'SPA
762             Call HandleSpawnCreature(UserIndex)
            
764         Case ClientPacketID.ResetNPCInventory       '/RESETINV
766             Call HandleResetNPCInventory(UserIndex)
            
768         Case ClientPacketID.CleanWorld              '/LIMPIAR
770             Call HandleCleanWorld(UserIndex)
            
772         Case ClientPacketID.ServerMessage           '/RMSG
774             Call HandleServerMessage(UserIndex)
            
776         Case ClientPacketID.NickToIP                '/NICK2IP
778             Call HandleNickToIP(UserIndex)
        
780         Case ClientPacketID.IPToNick                '/IP2NICK
782             Call HandleIPToNick(UserIndex)
            
784         Case ClientPacketID.GuildOnlineMembers      '/ONCLAN
786             Call HandleGuildOnlineMembers(UserIndex)
        
788         Case ClientPacketID.TeleportCreate          '/CT
790             Call HandleTeleportCreate(UserIndex)
            
792         Case ClientPacketID.TeleportDestroy         '/DT
794             Call HandleTeleportDestroy(UserIndex)
            
796         Case ClientPacketID.RainToggle              '/LLUVIA
798             Call HandleRainToggle(UserIndex)
        
800         Case ClientPacketID.SetCharDescription      '/SETDESC
802             Call HandleSetCharDescription(UserIndex)
        
804         Case ClientPacketID.ForceMIDIToMap          '/FORCEMIDIMAP
806             Call HanldeForceMIDIToMap(UserIndex)
            
808         Case ClientPacketID.ForceWAVEToMap          '/FORCEWAVMAP
810             Call HandleForceWAVEToMap(UserIndex)
            
812         Case ClientPacketID.RoyalArmyMessage        '/REALMSG
814             Call HandleRoyalArmyMessage(UserIndex)
                        
816         Case ClientPacketID.ChaosLegionMessage      '/CAOSMSG
818             Call HandleChaosLegionMessage(UserIndex)
            
820         Case ClientPacketID.CitizenMessage          '/CIUMSG
822             Call HandleCitizenMessage(UserIndex)
            
824         Case ClientPacketID.CriminalMessage         '/CRIMSG
826             Call HandleCriminalMessage(UserIndex)
            
828         Case ClientPacketID.TalkAsNPC               '/TALKAS
830             Call HandleTalkAsNPC(UserIndex)
        
832         Case ClientPacketID.DestroyAllItemsInArea   '/MASSDEST
834             Call HandleDestroyAllItemsInArea(UserIndex)
            
836         Case ClientPacketID.AcceptRoyalCouncilMember '/ACEPTCONSE
838             Call HandleAcceptRoyalCouncilMember(UserIndex)
            
840         Case ClientPacketID.AcceptChaosCouncilMember '/ACEPTCONSECAOS
842             Call HandleAcceptChaosCouncilMember(UserIndex)
            
844         Case ClientPacketID.ItemsInTheFloor         '/PISO
846             Call HandleItemsInTheFloor(UserIndex)
            
848         Case ClientPacketID.MakeDumb                '/ESTUPIDO
850             Call HandleMakeDumb(UserIndex)
            
852         Case ClientPacketID.MakeDumbNoMore          '/NOESTUPIDO
854             Call HandleMakeDumbNoMore(UserIndex)
            
856         Case ClientPacketID.DumpIPTables            '/DUMPSECURITY"
858             Call HandleDumpIPTables(UserIndex)
            
860         Case ClientPacketID.CouncilKick             '/KICKCONSE
862             Call HandleCouncilKick(UserIndex)
        
864         Case ClientPacketID.SetTrigger              '/TRIGGER
866             Call HandleSetTrigger(UserIndex)
        
868         Case ClientPacketID.AskTrigger               '/TRIGGER
870             Call HandleAskTrigger(UserIndex)
            
872         Case ClientPacketID.BannedIPList            '/BANIPLIST
874             Call HandleBannedIPList(UserIndex)
        
876         Case ClientPacketID.BannedIPReload          '/BANIPRELOAD
878             Call HandleBannedIPReload(UserIndex)
        
880         Case ClientPacketID.GuildBan                '/BANCLAN
882             Call HandleGuildBan(UserIndex)
        
884         Case ClientPacketID.banip                   '/BANIP
886             Call HandleBanIP(UserIndex)
        
888         Case ClientPacketID.UnbanIP                 '/UNBANIP
890             Call HandleUnbanIP(UserIndex)
        
892         Case ClientPacketID.CreateItem              '/CI
894             Call HandleCreateItem(UserIndex)
        
896         Case ClientPacketID.DestroyItems            '/DEST
898             Call HandleDestroyItems(UserIndex)
        
900         Case ClientPacketID.ChaosLegionKick         '/NOCAOS
902             Call HandleChaosLegionKick(UserIndex)
        
904         Case ClientPacketID.RoyalArmyKick           '/NOREAL
906             Call HandleRoyalArmyKick(UserIndex)
        
908         Case ClientPacketID.ForceMIDIAll            '/FORCEMIDI
910             Call HandleForceMIDIAll(UserIndex)
        
912         Case ClientPacketID.ForceWAVEAll            '/FORCEWAV
914             Call HandleForceWAVEAll(UserIndex)
        
916         Case ClientPacketID.RemovePunishment        '/BORRARPENA
918             Call HandleRemovePunishment(UserIndex)
        
920         Case ClientPacketID.TileBlockedToggle       '/BLOQ
922             Call HandleTileBlockedToggle(UserIndex)
        
924         Case ClientPacketID.KillNPCNoRespawn        '/MATA
926             Call HandleKillNPCNoRespawn(UserIndex)
        
928         Case ClientPacketID.KillAllNearbyNPCs       '/MASSKILL
930             Call HandleKillAllNearbyNPCs(UserIndex)
        
932         Case ClientPacketID.LastIP                  '/LASTIP
934             Call HandleLastIP(UserIndex)
        
936         Case ClientPacketID.ChangeMOTD              '/MOTDCAMBIA
938             Call HandleChangeMOTD(UserIndex)
        
940         Case ClientPacketID.SetMOTD                 'ZMOTD
942             Call HandleSetMOTD(UserIndex)
        
944         Case ClientPacketID.SystemMessage           '/SMSG
946             Call HandleSystemMessage(UserIndex)
        
948         Case ClientPacketID.CreateNPC               '/ACC
950             Call HandleCreateNPC(UserIndex)
        
952         Case ClientPacketID.CreateNPCWithRespawn    '/RACC
954             Call HandleCreateNPCWithRespawn(UserIndex)
        
956         Case ClientPacketID.ImperialArmour          '/AI1 - 4
958             Call HandleImperialArmour(UserIndex)
        
960         Case ClientPacketID.ChaosArmour             '/AC1 - 4
962             Call HandleChaosArmour(UserIndex)
        
964         Case ClientPacketID.NavigateToggle          '/NAVE
966             Call HandleNavigateToggle(UserIndex)
        
968         Case ClientPacketID.ServerOpenToUsersToggle '/HABILITAR
970             Call HandleServerOpenToUsersToggle(UserIndex)
        
972         Case ClientPacketID.Participar           '/APAGAR
974             Call HandleParticipar(UserIndex)
        
976         Case ClientPacketID.TurnCriminal            '/CONDEN
978             Call HandleTurnCriminal(UserIndex)
        
980         Case ClientPacketID.ResetFactions           '/RAJAR
982             Call HandleResetFactions(UserIndex)
        
984         Case ClientPacketID.RemoveCharFromGuild     '/RAJARCLAN
986             Call HandleRemoveCharFromGuild(UserIndex)
        
988         Case ClientPacketID.RequestCharMail         '/LASTEMAIL
990             Call HandleRequestCharMail(UserIndex)
        
992         Case ClientPacketID.AlterPassword           '/APASS
994             Call HandleAlterPassword(UserIndex)
        
996         Case ClientPacketID.AlterMail               '/AEMAIL
998             Call HandleAlterMail(UserIndex)
        
1000         Case ClientPacketID.AlterName               '/ANAME
1002             Call HandleAlterName(UserIndex)
        
1004         Case ClientPacketID.DoBackUp                '/DOBACKUP
1006             Call HandleDoBackUp(UserIndex)
        
1008         Case ClientPacketID.ShowGuildMessages       '/SHOWCMSG
1010             Call HandleShowGuildMessages(UserIndex)
        
1012         Case ClientPacketID.SaveMap                 '/GUARDAMAPA
1014             Call HandleSaveMap(UserIndex)
        
1016         Case ClientPacketID.ChangeMapInfoPK         '/MODMAPINFO PK
1018             Call HandleChangeMapInfoPK(UserIndex)
        
1020         Case ClientPacketID.ChangeMapInfoBackup     '/MODMAPINFO BACKUP
1022             Call HandleChangeMapInfoBackup(UserIndex)
    
1024         Case ClientPacketID.ChangeMapInfoRestricted '/MODMAPINFO RESTRINGIR
1026             Call HandleChangeMapInfoRestricted(UserIndex)
            
1028         Case ClientPacketID.ChangeMapInfoNoMagic    '/MODMAPINFO MAGIASINEFECTO
1030             Call HandleChangeMapInfoNoMagic(UserIndex)
            
1032         Case ClientPacketID.ChangeMapInfoNoInvi     '/MODMAPINFO INVISINEFECTO
1034             Call HandleChangeMapInfoNoInvi(UserIndex)
            
1036         Case ClientPacketID.ChangeMapInfoNoResu     '/MODMAPINFO RESUSINEFECTO
1038             Call HandleChangeMapInfoNoResu(UserIndex)
            
1040         Case ClientPacketID.ChangeMapInfoLand       '/MODMAPINFO TERRENO
1042             Call HandleChangeMapInfoLand(UserIndex)
            
1044         Case ClientPacketID.ChangeMapInfoZone       '/MODMAPINFO ZONA
1046             Call HandleChangeMapInfoZone(UserIndex)
        
1048         Case ClientPacketID.SaveChars               '/GRABAR
1050             Call HandleSaveChars(UserIndex)
        
1052         Case ClientPacketID.CleanSOS                '/BORRAR SOS
1054             Call HandleCleanSOS(UserIndex)
        
1056         Case ClientPacketID.ShowServerForm          '/SHOW INT
1058             Call HandleShowServerForm(UserIndex)
            
1060         Case ClientPacketID.night                   '/NOCHE
1062             Call HandleNight(UserIndex)

1064         Case ClientPacketID.Day                     '/DIA
1066             Call HandleDay(UserIndex)

1068         Case ClientPacketID.SetTime                 '/HORA X
1070             Call HandleSetTime(UserIndex)

1072         Case ClientPacketID.DonateGold              '/DONAR
1074             Call HandleDonateGold(UserIndex)
                
1076         Case ClientPacketID.Promedio                '/PROMEDIO
1078             Call HandlePromedio(UserIndex)
                
1080         Case ClientPacketID.GiveItem                '/DAR
1082             Call HandleGiveItem(UserIndex)

1084         Case ClientPacketID.KickAllChars            '/ECHARTODOSPJS
1086             Call HandleKickAllChars(UserIndex)
        
1088         Case ClientPacketID.RequestTCPStats         '/TCPESSTATS
1090             Call HandleRequestTCPStats(UserIndex)
        
1092         Case ClientPacketID.ReloadNPCs              '/RELOADNPCS
1094             Call HandleReloadNPCs(UserIndex)
        
1096         Case ClientPacketID.ReloadServerIni         '/RELOADSINI
1098             Call HandleReloadServerIni(UserIndex)
        
1100         Case ClientPacketID.ReloadSpells            '/RELOADHECHIZOS
1102             Call HandleReloadSpells(UserIndex)
        
1104         Case ClientPacketID.ReloadObjects           '/RELOADOBJ
1106             Call HandleReloadObjects(UserIndex)
        
1108         Case ClientPacketID.Restart                 '/REINICIAR
1110             Call HandleRestart(UserIndex)
        
1112         Case ClientPacketID.ResetAutoUpdate         '/AUTOUPDATE
1114             Call HandleResetAutoUpdate(UserIndex)
        
1116         Case ClientPacketID.ChatColor               '/CHATCOLOR
1118             Call HandleChatColor(UserIndex)
        
1120         Case ClientPacketID.Ignored                 '/IGNORADO
1122             Call HandleIgnored(UserIndex)
        
1124         Case ClientPacketID.CheckSlot               '/SLOT
1126             Call HandleCheckSlot(UserIndex)
            
                   'Nuevo Ladder
            
1128         Case ClientPacketID.GlobalMessage           '/CONSOLA
1130             Call HandleGlobalMessage(UserIndex)
        
1132         Case ClientPacketID.GlobalOnOff             '/GLOBAL
1134             Call HandleGlobalOnOff(UserIndex)
        
1136         Case ClientPacketID.NewPacketID    'Los Nuevos Packs ID
1138             Call HandleIncomingDataNewPacks(UserIndex)

1140         Case Else
                   'ERROR : Abort!
1142             Call CloseSocket(UserIndex)
                  Exit Function
           End Select

           'Done with this packet, move on to next one or send everything if no more packets found
1144     If UserList(UserIndex).incomingData.Length > 0 And Err.Number = 0 Then
1146         HandleIncomingData = True
  
1148     ElseIf Err.Number <> 0 And Not Err.Number = UserList(UserIndex).incomingData.NotEnoughDataErrCode Then
               'An error ocurred, log it and kick player.
1150         Call RegistrarError(Err.Number, Err.Description & vbNewLine & "PackedId: " & packetId & vbNewLine & _
                 IIf(UserList(UserIndex).flags.UserLogged, "UserName: " & UserList(UserIndex).name, "UserIndex: " & UserIndex), _
                 "Protocol.HandleIncomingData", Erl)
        
1152         Call CloseSocket(UserIndex)
  
1154         HandleIncomingData = False
           Else
1156         HandleIncomingData = False
           End If

End Function

Public Sub HandleIncomingDataNewPacks(ByVal UserIndex As Integer)

        '***************************************************
        'Los nuevos Pack ID
        'Creado por Ladder con gran ayuda de Maraxus
        '04.12.08
        '***************************************************
        Dim packetId As Integer
    
100     packetId = UserList(UserIndex).incomingData.PeekInteger() \ &H100
    
102     Select Case packetId

            Case NewPacksID.OfertaInicial
104             Call HandleOfertaInicial(UserIndex)
    
106         Case NewPacksID.OfertaDeSubasta
108             Call HandleOfertaDeSubasta(UserIndex)
        
110         Case NewPacksID.CuentaRegresiva
112             Call HandleCuentaRegresiva(UserIndex)

114         Case NewPacksID.QuestionGM
116             Call HandleQuestionGM(UserIndex)

118         Case NewPacksID.PossUser
120             Call HandlePossUser(UserIndex)

122         Case NewPacksID.Duel
                Call HandleDuel(UserIndex)
                
            Case NewPacksID.AcceptDuel
                Call HandleAcceptDuel(UserIndex)
                
            Case NewPacksID.CancelDuel
                Call HandleCancelDuel(UserIndex)
                
            Case NewPacksID.QuitDuel
                Call HandleQuitDuel(UserIndex)

126         Case NewPacksID.NieveToggle
128             Call HandleNieveToggle(UserIndex)

130         Case NewPacksID.NieblaToggle
132             Call HandleNieblaToggle(UserIndex)

134         Case NewPacksID.TransFerGold
136             Call HandleTransFerGold(UserIndex)

138         Case NewPacksID.Moveitem
140             Call HandleMoveItem(UserIndex)

142         Case NewPacksID.LlamadadeClan
144             Call HandleLlamadadeClan(UserIndex)

146         Case NewPacksID.QuieroFundarClan
148             Call HandleQuieroFundarClan(UserIndex)

150         Case NewPacksID.BovedaMoveItem
152             Call HandleBovedaMoveItem(UserIndex)

154         Case NewPacksID.Genio
156             Call HandleGenio(UserIndex)

158         Case NewPacksID.Casarse
160             Call HandleCasamiento(UserIndex)

162         Case NewPacksID.EnviarCodigo
164             Call HandleEnviarCodigo(UserIndex)

166         Case NewPacksID.CrearTorneo
168             Call HandleCrearTorneo(UserIndex)
            
170         Case NewPacksID.ComenzarTorneo
172             Call HandleComenzarTorneo(UserIndex)
            
174         Case NewPacksID.CancelarTorneo
176             Call HandleCancelarTorneo(UserIndex)

178         Case NewPacksID.BusquedaTesoro
180             Call HandleBusquedaTesoro(UserIndex)

182         Case NewPacksID.CraftAlquimista
184             Call HandleCraftAlquimia(UserIndex)

190         Case NewPacksID.RequestFamiliar
192             Call HandleRequestFamiliar(UserIndex)

194         Case NewPacksID.FlagTrabajar
196             Call HandleFlagTrabajar(UserIndex)

198         Case NewPacksID.CraftSastre
200             Call HandleCraftSastre(UserIndex)

202         Case NewPacksID.MensajeUser
204             Call HandleMensajeUser(UserIndex)

206         Case NewPacksID.TraerBoveda
208             Call HandleTraerBoveda(UserIndex)

210         Case NewPacksID.CompletarAccion
212             Call HandleCompletarAccion(UserIndex)

214         Case NewPacksID.Escribiendo
216             Call HandleEscribiendo(UserIndex)

218         Case NewPacksID.TraerRecompensas
220             Call HandleTraerRecompensas(UserIndex)

222         Case NewPacksID.ReclamarRecompensa
224             Call HandleReclamarRecompensa(UserIndex)

226         Case NewPacksID.Correo
228             Call HandleCorreo(UserIndex)

230         Case NewPacksID.SendCorreo ' ok
232             Call HandleSendCorreo(UserIndex)

234         Case NewPacksID.RetirarItemCorreo ' ok
236             Call HandleRetirarItemCorreo(UserIndex)

238         Case NewPacksID.BorrarCorreo
240             Call HandleBorrarCorreo(UserIndex) 'ok

242         Case NewPacksID.InvitarGrupo
244             Call HandleInvitarGrupo(UserIndex) 'ok

246         Case NewPacksID.MarcaDeClanPack
248             Call HandleMarcaDeClan(UserIndex)

250         Case NewPacksID.MarcaDeGMPack
252             Call HandleMarcaDeGM(UserIndex)

254         Case NewPacksID.ResponderPregunta 'ok
256             Call HandleResponderPregunta(UserIndex)

258         Case NewPacksID.RequestGrupo
260             Call HandleRequestGrupo(UserIndex) 'ok

262         Case NewPacksID.AbandonarGrupo
264             Call HandleAbandonarGrupo(UserIndex) ' ok

266         Case NewPacksID.HecharDeGrupo
268             Call HandleHecharDeGrupo(UserIndex) 'ok

270         Case NewPacksID.MacroPossent
272             Call HandleMacroPos(UserIndex)

274         Case NewPacksID.SubastaInfo
276             Call HandleSubastaInfo(UserIndex)

278         Case NewPacksID.EventoInfo
280             Call HandleEventoInfo(UserIndex)

282         Case NewPacksID.CrearEvento
284             Call HandleCrearEvento(UserIndex)

286         Case NewPacksID.BanCuenta
288             Call HandleBanCuenta(UserIndex)
            
290         Case NewPacksID.unBanCuenta
292             Call HandleUnBanCuenta(UserIndex)
            
294         Case NewPacksID.BanSerial
296             Call HandleBanSerial(UserIndex)
        
298         Case NewPacksID.unBanSerial
300             Call HandleUnBanSerial(UserIndex)
            
302         Case NewPacksID.CerrarCliente
304             Call HandleCerrarCliente(UserIndex)
            
306         Case NewPacksID.BanTemporal
308             Call HandleBanTemporal(UserIndex)

310         Case NewPacksID.Traershop
312             Call HandleTraerShop(UserIndex)

314         Case NewPacksID.TraerRanking
316             Call HandleTraerRanking(UserIndex)

318         Case NewPacksID.Pareja
320             Call UserList(UserIndex).incomingData.ReadInteger ' Desactivado. Nada para hacer
            
322         Case NewPacksID.ComprarItem
324             Call HandleComprarItem(UserIndex)
            
326         Case NewPacksID.CompletarViaje
328             Call HandleCompletarViaje(UserIndex)
            
330         Case NewPacksID.ScrollInfo
332             Call HandleScrollInfo(UserIndex)

334         Case NewPacksID.CancelarExit
336             Call HandleCancelarExit(UserIndex)
            
338         Case NewPacksID.Quest
340             Call HandleQuest(UserIndex)
            
342         Case NewPacksID.QuestAccept
344             Call HandleQuestAccept(UserIndex)
        
346         Case NewPacksID.QuestListRequest
348             Call HandleQuestListRequest(UserIndex)
        
350         Case NewPacksID.QuestDetailsRequest
352             Call HandleQuestDetailsRequest(UserIndex)
        
354         Case NewPacksID.QuestAbandon
356             Call HandleQuestAbandon(UserIndex)
            
358         Case NewPacksID.SeguroClan
360             Call HandleSeguroClan(UserIndex)
            
362         Case NewPacksID.CreatePretorianClan     '/CREARPRETORIANOS
364             Call HandleCreatePretorianClan(UserIndex)
         
366         Case NewPacksID.RemovePretorianClan     '/ELIMINARPRETORIANOS
368             Call HandleDeletePretorianClan(UserIndex)

370         Case NewPacksID.Home
372             Call HandleHome(UserIndex)
            
374         Case NewPacksID.Consulta
376             Call HandleConsulta(UserIndex)
                
378         Case NewPacksID.RequestScreenShot       '/SS
380             Call HandleRequestScreenShot(UserIndex)
                
382         Case NewPacksID.RequestProcesses        '/VERPROCESOS
383             Call HandleRequestProcesses(UserIndex)
                
384         Case NewPacksID.Tolerancia0             '/T0
385             Call HandleTolerancia0(UserIndex)

            Case NewPacksID.GetMapInfo
                Call HandleGetMapInfo(UserIndex)
                
            Case NewPacksID.FinEvento
                Call HandleFinEvento(UserIndex)
                
386         Case NewPacksID.SendScreenShot
388             Call HandleScreenShot(UserIndex)
                
390         Case NewPacksID.SendProcesses
392             Call HandleProcesses(UserIndex)

            Case NewPacksID.SeguroResu
                Call HandleSeguroResu(UserIndex)

            Case NewPacksID.CuentaExtractItem
                Call HandleCuentaExtractItem(UserIndex)
                
            Case NewPacksID.CuentaDeposit
                Call HandleCuentaDeposit(UserIndex)
                
            Case NewPacksID.CreateEvent
                Call HandleCreateEvent(UserIndex)
            
394         Case Else
                'ERROR : Abort!
396             Call CloseSocket(UserIndex)
                Exit Sub
            
        End Select
    
398     If UserList(UserIndex).incomingData.Length > 0 And Err.Number = 0 Then
400         Err.Clear
402         Call HandleIncomingData(UserIndex)
    
404     ElseIf Err.Number <> 0 And Not Err.Number = UserList(UserIndex).incomingData.NotEnoughDataErrCode Then
            'An error ocurred, log it and kick player.
406         Call LogError("Error: " & Err.Number & " [" & Err.Description & "] - Linea: " & Erl & _
                          " Source: " & Err.Source & vbTab & _
                          " HelpFile: " & Err.HelpFile & vbTab & _
                          " HelpContext: " & Err.HelpContext & vbTab & _
                          " LastDllError: " & Err.LastDllError & vbTab & _
                          " - UserIndex: " & UserIndex & " - producido al manejar el paquete: " & CStr(packetId))
                          
408         Call CloseSocket(UserIndex)
    
        End If
        
End Sub

''
' Handles the "LoginExistingChar" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleLoginExistingChar(ByVal UserIndex As Integer)

    '***************************************************
    'Author: Juan Martín Sotuyo Dodero (Maraxus)
    ''Last Modification: 01/12/08 Ladder
    '***************************************************
    If UserList(UserIndex).incomingData.Length < 18 Then
        Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
        Exit Sub

    End If
    
    On Error GoTo ErrHandler

    'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
    Dim Buffer As New clsByteQueue

    Call Buffer.CopyBuffer(UserList(UserIndex).incomingData)
    
    'Remove packet ID
    Call Buffer.ReadByte

    Dim UserName    As String
    Dim CuentaEmail As String
    Dim Password    As String
    Dim Version     As String
    Dim MacAddress  As String
    Dim HDserial    As Long
    Dim MD5         As String

    CuentaEmail = Buffer.ReadASCIIString()
    Password = Buffer.ReadASCIIString()
    Version = CStr(Buffer.ReadByte()) & "." & CStr(Buffer.ReadByte()) & "." & CStr(Buffer.ReadByte())
    UserName = Buffer.ReadASCIIString()
    MacAddress = Buffer.ReadASCIIString()
    HDserial = Buffer.ReadLong()
    MD5 = Buffer.ReadASCIIString()
    
    'If we got here then packet is complete, copy data back to original queue
    Call UserList(UserIndex).incomingData.CopyBuffer(Buffer)
    
    If Not VersionOK(Version) Then
        Call WriteShowMessageBox(UserIndex, "Esta versión del juego es obsoleta, la versión correcta es la " & ULTIMAVERSION & ". Ejecute el launcher por favor.")
        Call CloseSocket(UserIndex)
        Exit Sub

    End If
        
    If EsGmChar(UserName) Then
            
        If AdministratorAccounts(UCase$(CuentaEmail)) <> UCase$(UserName) Then
            Call WriteShowMessageBox(UserIndex, "¡ESTE PERSONAJE NO TE PERTENECE!")
            Call SaveBanCuentaDatabase(UserList(UserIndex).AccountId, "Intento de hackeo de personajes ajenos", "El Servidor")
            Call CloseSocket(UserIndex)
            Exit Sub
        End If
            
    End If
  
    If Not EntrarCuenta(UserIndex, CuentaEmail, Password, MacAddress, HDserial, MD5) Then
        Call CloseSocket(UserIndex)
        Exit Sub
    End If

    If Not AsciiValidos(UserName) Then
        Call WriteShowMessageBox(UserIndex, "Nombre invalido.")
        Call CloseSocket(UserIndex)
        Exit Sub
    End If
    
    If Not PersonajeExiste(UserName) Then
        Call WriteShowMessageBox(UserIndex, "El personaje no existe.")
        Call CloseSocket(UserIndex)
        Exit Sub

    End If
    
    If Not PersonajePerteneceID(UserName, UserList(UserIndex).AccountId) Then
        'Call WriteShowMessageBox(UserIndex, "¡ESTE PERSONAJE NO TE PERTENECE!")
        Call LogHackAttemp("Alguien ha tratado de ingresar con el PJ '" & UserName & "' desde una cuenta ajena ID: " & UserList(UserIndex).AccountId & " desde la IP: " & UserList(UserIndex).ip)
        Call SaveBanCuentaDatabase(UserList(UserIndex).AccountId, "Intento de hackeo de personajes ajenos", "El Servidor")
        Call CloseSocket(UserIndex)
        Exit Sub
            
    End If
    
    If BANCheck(UserName) Then

        Dim LoopC As Integer
        
        For LoopC = 1 To Baneos.Count

            If Baneos(LoopC).name = UCase$(UserName) Then
                Call WriteShowMessageBox(UserIndex, "Se te ha prohibido la entrada a Argentum20 hasta el día " & Format(Baneos(LoopC).FechaLiberacion, "dddddd") & " a las " & Format(Baneos(LoopC).FechaLiberacion, "hh:mm am/pm") & " debido a " & Baneos(LoopC).Causa & " Esta decisión fue tomada por " & Baneos(LoopC).Baneador & ".")
                Call CloseSocket(UserIndex)
                Exit Sub

            End If

        Next LoopC
        
        Dim BanNick     As String
        Dim BaneoMotivo As String

        BanNick = GetVar(CharPath & UserName & ".chr", "BAN", "BannedBy")
        BaneoMotivo = GetVar(CharPath & UserName & ".chr", "BAN", "BanMotivo")

        If LenB(BanNick) = 0 Then BanNick = "*Error en la base de datos*"
        If LenB(BaneoMotivo) = 0 Then BaneoMotivo = "*No se registra el motivo del baneo.*"
        
        Call WriteShowMessageBox(UserIndex, "Se te ha prohibido la entrada al juego debido a " & BaneoMotivo & ". Esta decisión fue tomada por " & BanNick & ".")
        
        Call CloseSocket(UserIndex)
        Exit Sub

    End If
        
    Call ConnectUser(UserIndex, UserName, CuentaEmail)

    Exit Sub
    
ErrHandler:

    Dim Error As Long

    Error = Err.Number

    On Error GoTo 0
    
    'Destroy auxiliar buffer
    Set Buffer = Nothing
    
    If Error <> 0 Then Err.raise Error

End Sub

'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleLoginNewChar(ByVal UserIndex As Integer)
        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************

100     If UserList(UserIndex).incomingData.Length < 24 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

        'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
        Dim Buffer As New clsByteQueue

104     Call Buffer.CopyBuffer(UserList(UserIndex).incomingData)
    
        'Remove packet ID
106     Call Buffer.ReadByte

        Dim UserName As String
        Dim race     As eRaza
        Dim gender   As eGenero
        Dim Hogar   As eCiudad
        Dim Class As eClass
        Dim Head        As Integer
        Dim CuentaEmail As String
        Dim Password    As String
        Dim MacAddress  As String
        Dim HDserial    As Long
        Dim MD5         As String
        Dim Version     As String
    
108     If PuedeCrearPersonajes = 0 Then
110         Call WriteShowMessageBox(UserIndex, "La creacion de personajes en este servidor se ha deshabilitado.")
112         Call CloseSocket(UserIndex)
            Exit Sub
        End If

114     If aClon.MaxPersonajes(UserList(UserIndex).ip) Then
116         Call WriteShowMessageBox(UserIndex, "Has creado demasiados personajes.")
118         Call CloseSocket(UserIndex)
            Exit Sub
        End If
    
120     If ObtenerCantidadDePersonajesByUserIndex(UserIndex) >= MAX_PERSONAJES Then
122         Call CloseSocket(UserIndex)
            Exit Sub
        End If
    
124     CuentaEmail = Buffer.ReadASCIIString()
126     Password = Buffer.ReadASCIIString()
128     Version = CStr(Buffer.ReadByte()) & "." & CStr(Buffer.ReadByte()) & "." & CStr(Buffer.ReadByte())
130     UserName = Buffer.ReadASCIIString()
132     race = Buffer.ReadByte()
134     gender = Buffer.ReadByte()
136     Class = Buffer.ReadByte()
138     Head = Buffer.ReadInteger()
140     Hogar = Buffer.ReadByte()
142     MacAddress = Buffer.ReadASCIIString()
144     HDserial = Buffer.ReadLong()
145     MD5 = Buffer.ReadASCIIString()
    
146     If Not VersionOK(Version) Then
148         Call WriteShowMessageBox(UserIndex, "Esta versión del juego es obsoleta, la versión correcta es la " & ULTIMAVERSION & ". Ejecute el launcher por favor.")
150         Call CloseSocket(UserIndex)
            Exit Sub
        End If
        
152     If EsGmChar(UserName) Then
            
154         If AdministratorAccounts(UCase$(CuentaEmail)) <> UCase$(UserName) Then
156             Call WriteShowMessageBox(UserIndex, "El nombre de usuario ingresado está siendo ocupado por un miembro del Staff.")
158             Call CloseSocket(UserIndex)
                Exit Sub
            End If
            
        End If
        
160     If Not EntrarCuenta(UserIndex, CuentaEmail, Password, MacAddress, HDserial, MD5) Then
162         Call CloseSocket(UserIndex)
            Exit Sub
        End If
            
164     If GetPersonajesCountByIDDatabase(UserList(UserIndex).AccountId) >= MAX_PERSONAJES Then
166         Call CloseSocket(UserIndex)
            Exit Sub
        End If

168     If Not ConnectNewUser(UserIndex, UserName, race, gender, Class, Head, CuentaEmail, Hogar) Then
170         Call CloseSocket(UserIndex)
            Exit Sub
        End If

        'If we got here then packet is complete, copy data back to original queue
172     Call UserList(UserIndex).incomingData.CopyBuffer(Buffer)
    
ErrHandler:

        Dim Error As Long

174     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
176     Set Buffer = Nothing
    
178     If Error <> 0 Then Err.raise Error

End Sub

Private Sub HandleThrowDice(ByVal UserIndex As Integer)
        'Remove packet ID
        
        On Error GoTo HandleThrowDice_Err
        
100     Call UserList(UserIndex).incomingData.ReadByte
    
102     With UserList(UserIndex).Stats
104         .UserAtributos(eAtributos.Fuerza) = RandomNumber(DiceMinimum, DiceMaximum)
106         .UserAtributos(eAtributos.Agilidad) = RandomNumber(DiceMinimum, DiceMaximum)
108         .UserAtributos(eAtributos.Inteligencia) = RandomNumber(DiceMinimum, DiceMaximum)
110         .UserAtributos(eAtributos.Carisma) = RandomNumber(DiceMinimum, DiceMaximum)
112         .UserAtributos(eAtributos.Constitucion) = RandomNumber(DiceMinimum, DiceMaximum)

        End With
    
114     Call WriteDiceRoll(UserIndex)

        
        Exit Sub

HandleThrowDice_Err:
116     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleThrowDice", Erl)
118     Resume Next
        
End Sub

''
' Handles the "Talk" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleTalk(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '13/01/2010: ZaMa - Now hidden on boat pirats recover the proper boat body.
        '***************************************************
    
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)
    
            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue
106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
110         Dim chat As String: chat = Buffer.ReadASCIIString()
        
            'If we got here then packet is complete, copy data back to original queue
112         Call .incomingData.CopyBuffer(Buffer)
        
            '[Consejeros & GMs]
114         If .flags.Privilegios And (PlayerType.Consejero Or PlayerType.SemiDios) Then
116             Call LogGM(.name, "Dijo: " & chat)
            End If
        
            'I see you....
118         If .flags.Oculto > 0 And .flags.AdminInvisible = 0 Then
120             .flags.Oculto = 0
122             .Counters.TiempoOculto = 0
            
124             If .flags.Navegando = 1 Then

126                 If .clase = eClass.Pirat Then
                        ' Pierde la apariencia de fragata fantasmal
                        Call EquiparBarco(UserIndex)

136                     Call WriteConsoleMsg(UserIndex, "Has recuperado tu apariencia normal!", FontTypeNames.FONTTYPE_INFO)
138                     Call ChangeUserChar(UserIndex, .Char.Body, .Char.Head, .Char.Heading, NingunArma, NingunEscudo, NingunCasco)

                    End If

                Else

140                 If .flags.invisible = 0 Then
142                     Call SendData(SendTarget.ToPCArea, UserIndex, PrepareMessageSetInvisible(.Char.CharIndex, False))
                        'Call WriteConsoleMsg(UserIndex, "¡Has vuelto a ser visible!", FontTypeNames.FONTTYPE_INFO)
144                     Call WriteLocaleMsg(UserIndex, "307", FontTypeNames.FONTTYPE_INFO)
    
                    End If

                End If

            End If
       
146         If .flags.Silenciado = 1 Then
                'Call WriteConsoleMsg(UserIndex, "Los administradores te han impedido hablar durante los proximos " & .flags.MinutosRestantes & " minutos debido a tu comportamiento.", FontTypeNames.FONTTYPE_VENENO)
148             Call WriteLocaleMsg(UserIndex, "110", FontTypeNames.FONTTYPE_INFO, .flags.MinutosRestantes)
            Else

150             If LenB(chat) <> 0 Then
                    'Analize chat...
152                 Call Statistics.ParseChat(chat)

                    ' WyroX: Foto-denuncias - Push message
                    Dim i As Integer
                    For i = 1 To UBound(.flags.ChatHistory) - 1
                        .flags.ChatHistory(i) = .flags.ChatHistory(i + 1)
                    Next
                    .flags.ChatHistory(UBound(.flags.ChatHistory)) = chat
                
154                 If .flags.Muerto = 1 Then
156                     Call SendData(SendTarget.ToPCArea, UserIndex, PrepareMessageChatOverHead(chat, .Char.CharIndex, CHAT_COLOR_DEAD_CHAR, UserList(UserIndex).name))
                    Else
158                     Call SendData(SendTarget.ToPCArea, UserIndex, PrepareMessageChatOverHead(chat, .Char.CharIndex, .flags.ChatColor, UserList(UserIndex).name))

                    End If

                End If

            End If

        End With
    
ErrHandler:

        Dim Error As Long

160     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
162     Set Buffer = Nothing
    
164     If Error <> 0 Then Err.raise Error

End Sub

''
' Handles the "Yell" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleYell(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub
        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)
    
            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            Dim chat As String
        
110         chat = Buffer.ReadASCIIString()
        
112         If UserList(UserIndex).flags.Muerto = 1 Then
114             Call WriteLocaleMsg(UserIndex, "77", FontTypeNames.FONTTYPE_INFO)
                ' Call WriteConsoleMsg(UserIndex, "¡¡Estás muerto!! Los muertos no pueden comunicarse con el mundo de los vivos.", FontTypeNames.FONTTYPE_INFO)
            Else

                '[Consejeros & GMs]
116             If .flags.Privilegios And (PlayerType.Consejero Or PlayerType.SemiDios) Then
118                 Call LogGM(.name, "Grito: " & chat)

                End If
            
                'I see you....
120             If .flags.Oculto > 0 And .flags.AdminInvisible = 0 Then
122                 .flags.Oculto = 0
124                 .Counters.TiempoOculto = 0
                
126                 If .flags.Navegando = 1 Then
                    
                        'TODO: Revisar con WyroX
128                     If .clase = eClass.Pirat Then
                            ' Pierde la apariencia de fragata fantasmal
130                         .Char.Body = ObjData(.Invent.BarcoObjIndex).Ropaje
    
132                         .Char.ShieldAnim = NingunEscudo
134                         .Char.WeaponAnim = NingunArma
136                         .Char.CascoAnim = NingunCasco
    
138                         Call WriteConsoleMsg(UserIndex, "Has recuperado tu apariencia normal!", FontTypeNames.FONTTYPE_INFO)
140                         Call ChangeUserChar(UserIndex, .Char.Body, .Char.Head, .Char.Heading, NingunArma, NingunEscudo, NingunCasco)
    
                        End If
    
                    Else
    
142                     If .flags.invisible = 0 Then
144                         Call SendData(SendTarget.ToPCArea, UserIndex, PrepareMessageSetInvisible(.Char.CharIndex, False))
146                         Call WriteConsoleMsg(UserIndex, "¡Has vuelto a ser visible!", FontTypeNames.FONTTYPE_INFO)
    
                        End If
    
                    End If

                End If
            
148             If .flags.Silenciado = 1 Then
150                 Call WriteLocaleMsg(UserIndex, "110", FontTypeNames.FONTTYPE_VENENO, .flags.MinutosRestantes)
        
                    'Call WriteConsoleMsg(UserIndex, "Los administradores te han impedido hablar durante los proximos " & .flags.MinutosRestantes & " minutos debido a tu comportamiento.", FontTypeNames.FONTTYPE_VENENO)
                Else

152                 If LenB(chat) <> 0 Then
                        'Analize chat...
154                     Call Statistics.ParseChat(chat)

                        ' WyroX: Foto-denuncias - Push message
                        Dim i As Integer
                        For i = 1 To UBound(.flags.ChatHistory) - 1
                            .flags.ChatHistory(i) = .flags.ChatHistory(i + 1)
                        Next
                        .flags.ChatHistory(UBound(.flags.ChatHistory)) = chat

156                     Call SendData(SendTarget.ToPCArea, UserIndex, PrepareMessageChatOverHead(chat, .Char.CharIndex, vbRed, UserList(UserIndex).name))
               
                    End If

                End If

            End If
        
            'If we got here then packet is complete, copy data back to original queue
158         Call .incomingData.CopyBuffer(Buffer)

        End With
    
ErrHandler:

        Dim Error As Long

160     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
162     Set Buffer = Nothing
    
164     If Error <> 0 Then Err.raise Error

End Sub

''
' Handles the "Whisper" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleWhisper(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 6 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue
106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            Dim chat            As String
            Dim targetCharIndex As String
            Dim targetUserIndex As Integer

110         targetCharIndex = Buffer.ReadASCIIString()
112         chat = Buffer.ReadASCIIString()
            
114         Call .incomingData.CopyBuffer(Buffer)
            
116         targetUserIndex = NameIndex(targetCharIndex)

118         If targetUserIndex <= 0 Then 'existe el usuario destino?
120             Call WriteConsoleMsg(UserIndex, "Usuario offline o inexistente.", FontTypeNames.FONTTYPE_INFO)

            Else
        
122             If Not EsGM(UserIndex) And EsGM(targetUserIndex) Then
124                 Call WriteConsoleMsg(UserIndex, "No podes hablar por privado con Game Masters.", FontTypeNames.FONTTYPE_WARNING)

                Else

126                 If EstaPCarea(UserIndex, targetUserIndex) Then

128                     If LenB(chat) <> 0 Then
                            'Analize chat...
130                         Call Statistics.ParseChat(chat)

                            ' WyroX: Foto-denuncias - Push message
                            Dim i As Integer
                            For i = 1 To UBound(.flags.ChatHistory) - 1
                                .flags.ChatHistory(i) = .flags.ChatHistory(i + 1)
                            Next
                            .flags.ChatHistory(UBound(.flags.ChatHistory)) = chat
            
132                         Call SendData(SendTarget.ToSuperioresArea, UserIndex, PrepareMessageChatOverHead(chat, .Char.CharIndex, RGB(157, 226, 20)))
                        
134                         Call WriteChatOverHead(UserIndex, chat, .Char.CharIndex, RGB(157, 226, 20))
136                         Call WriteChatOverHead(targetUserIndex, chat, .Char.CharIndex, RGB(157, 226, 20))
                            'Call WriteConsoleMsg(UserIndex, "[" & .Name & "] " & chat, FontTypeNames.FONTTYPE_MP)
                            'Call WriteConsoleMsg(targetUserIndex, "[" & .Name & "] " & chat, FontTypeNames.FONTTYPE_MP)
138                         Call WritePlayWave(targetUserIndex, FXSound.MP_SOUND, NO_3D_SOUND, NO_3D_SOUND)
                        

                        End If

                    Else
140                     Call WriteConsoleMsg(UserIndex, "[" & .name & "] " & chat, FontTypeNames.FONTTYPE_MP)
142                     Call WriteConsoleMsg(targetUserIndex, "[" & .name & "] " & chat, FontTypeNames.FONTTYPE_MP)
144                     Call WritePlayWave(targetUserIndex, FXSound.MP_SOUND, NO_3D_SOUND, NO_3D_SOUND)
                    
                    End If

                End If

            End If

        End With
    
ErrHandler:

        Dim Error As Long

146     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
148     Set Buffer = Nothing
    
150     If Error <> 0 Then Err.raise Error

End Sub

''
' Handles the "Walk" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleWalk(ByVal UserIndex As Integer)
        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
        
        On Error GoTo HandleWalk_Err
        

        Dim demora      As Long

        Dim demorafinal As Long

100     demora = GetTickCount()

102     If UserList(UserIndex).incomingData.Length < 2 Then
104         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If

        Dim Heading  As eHeading
    
106     With UserList(UserIndex)
            'Remove packet ID
108         Call .incomingData.ReadByte
        
110         Heading = .incomingData.ReadByte()
        
112         If .flags.Paralizado = 0 And .flags.Inmovilizado = 0 Then

114             If .flags.Meditando Then
                    'Stop meditating, next action will start movement.
116                 .flags.Meditando = False
118                 UserList(UserIndex).Char.FX = 0
120                 Call SendData(SendTarget.ToPCArea, UserIndex, PrepareMessageMeditateToggle(UserList(UserIndex).Char.CharIndex, 0))
                End If
            
                'If IntervaloPermiteCaminar(UserIndex) Then
            
                    'Move user
122                 If MoveUserChar(UserIndex, Heading) Then
                
124                     If UserList(UserIndex).Grupo.EnGrupo = True Then
126                         Call CompartirUbicacion(UserIndex)
                        End If
    
                        'Stop resting if needed
128                     If .flags.Descansar Then
130                         .flags.Descansar = False
                        
132                         Call WriteRestOK(UserIndex)
                            'Call WriteConsoleMsg(UserIndex, "Has dejado de descansar.", FontTypeNames.FONTTYPE_INFO)
134                         Call WriteLocaleMsg(UserIndex, "178", FontTypeNames.FONTTYPE_INFO)
    
                        End If
                        
                        Dim TiempoTotalPasos As Long, TickActual As Long
                        Dim TotalPasos As Long, TiempoMaximoPasos As Long
                        TotalPasos = 10
                        TiempoMaximoPasos = TotalPasos * 200 / .Char.speeding

                        'Prevent SpeedHack
146                     If .flags.TimesWalk >= TotalPasos Then
148                         TickActual = GetTickCount
150                         TiempoTotalPasos = TickActual - .flags.StartWalk

152                         If TiempoTotalPasos < TiempoMaximoPasos Then
162                             Call LogHackAttemp("Tramposo SH: " & .name & " , Velocidad SH: " & TiempoTotalPasos \ TiempoMaximoPasos)
164                             Call SendData(SendTarget.ToAdmins, 0, PrepareMessageConsoleMsg("Servidor> " & .name & " ha sido echado por el servidor por posible uso de SpeedHack.", FontTypeNames.FONTTYPE_SERVER))
166                             Call CloseSocket(UserIndex)
                                 
                                Exit Sub
                            End If
    
170                         .flags.StartWalk = TickActual
172                         .flags.TimesWalk = 0
    
                        End If
                        
174                     .flags.TimesWalk = .flags.TimesWalk + 1
                    
176                     Call CancelExit(UserIndex)
    
                        'Esta usando el /HOGAR, no se puede mover
178                     If .flags.Traveling = 1 Then
180                         .flags.Traveling = 0
182                         .Counters.goHome = 0
184                         Call WriteConsoleMsg(UserIndex, "Has cancelado el viaje a casa.", FontTypeNames.FONTTYPE_INFO)
                        End If

                    ' Si no pudo moverse, actualizamos la posición
                    Else
                        Call WritePosUpdate(UserIndex)
                    End If

                'End If

            Else    'paralized

186             If Not .flags.UltimoMensaje = 1 Then
188                 .flags.UltimoMensaje = 1
                    'Call WriteConsoleMsg(UserIndex, "No podes moverte porque estas paralizado.", FontTypeNames.FONTTYPE_INFO)
190                 Call WriteLocaleMsg(UserIndex, "54", FontTypeNames.FONTTYPE_INFO)

                End If

            End If
            
            'Can't move while hidden except he is a thief
194         If .flags.Oculto = 1 And .flags.AdminInvisible = 0 Then
                
196             If .clase <> eClass.Thief And .clase <> eClass.Bandit Then
198                 .flags.Oculto = 0
200                 .Counters.TiempoOculto = 0
                
202                 If .flags.Navegando = 1 Then
                        
204                     If .clase = eClass.Pirat Then
                            ' Pierde la apariencia de fragata fantasmal
206                         .Char.Body = ObjData(.Invent.BarcoObjIndex).Ropaje
        
208                         .Char.ShieldAnim = NingunEscudo
210                         .Char.WeaponAnim = NingunArma
212                         .Char.CascoAnim = NingunCasco
        
214                         Call WriteConsoleMsg(UserIndex, "Has recuperado tu apariencia normal!", FontTypeNames.FONTTYPE_INFO)
216                         Call ChangeUserChar(UserIndex, .Char.Body, .Char.Head, .Char.Heading, NingunArma, NingunEscudo, NingunCasco)
    
                        End If
    
                    Else
    
                        'If not under a spell effect, show char
218                     If .flags.invisible = 0 Then
                            'Call WriteConsoleMsg(UserIndex, "Has vuelto a ser visible.", FontTypeNames.FONTTYPE_INFO)
220                         Call WriteLocaleMsg(UserIndex, "307", FontTypeNames.FONTTYPE_INFO)
222                         Call SendData(SendTarget.ToPCArea, UserIndex, PrepareMessageSetInvisible(.Char.CharIndex, False))
                        End If
    
                    End If
    
                End If
                
            End If

        End With
    
224     demorafinal = GetTickCount() - demora

        Exit Sub

HandleWalk_Err:
226     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleWalk", Erl)
228     Resume Next
        
End Sub

''
' Handles the "RequestPositionUpdate" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleRequestPositionUpdate(ByVal UserIndex As Integer)
        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
        'Remove packet ID
        
        On Error GoTo HandleRequestPositionUpdate_Err
        
100     UserList(UserIndex).incomingData.ReadByte
    
102     Call WritePosUpdate(UserIndex)

        
        Exit Sub

HandleRequestPositionUpdate_Err:
104     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleRequestPositionUpdate", Erl)
106     Resume Next
        
End Sub

''
' Handles the "Attack" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleAttack(ByVal UserIndex As Integer)
        
        On Error GoTo HandleAttack_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 10/01/08
        'Last Modified By: Lucas Tavolaro Ortiz (Tavo)
        ' 10/01/2008: Tavo - Se cancela la salida del juego si el user esta saliendo
        '***************************************************
100     With UserList(UserIndex)
            'Remove packet ID
102         Call .incomingData.ReadByte
        
            'If dead, can't attack
104         If .flags.Muerto = 1 Then
106             Call WriteLocaleMsg(UserIndex, "77", FontTypeNames.FONTTYPE_INFO)
                'Call WriteConsoleMsg(UserIndex, "í¡No podes atacar a nadie porque estas muerto!!.", FontTypeNames.FONTTYPE_INFO)
                Exit Sub

            End If
        
            'If equiped weapon is ranged, can't attack this way
108         If .Invent.WeaponEqpObjIndex > 0 Then
110             If ObjData(.Invent.WeaponEqpObjIndex).Proyectil = 1 Then
112                 Call WriteConsoleMsg(UserIndex, "No podés usar así esta arma.", FontTypeNames.FONTTYPE_INFOIAO)
                    Exit Sub

                End If

            End If
        
114         If .Invent.HerramientaEqpObjIndex > 0 Then
116             Call WriteConsoleMsg(UserIndex, "Para atacar debes desequipar la herramienta.", FontTypeNames.FONTTYPE_INFOIAO)
                Exit Sub

            End If
        
118         If UserList(UserIndex).flags.Meditando Then
120             UserList(UserIndex).flags.Meditando = False
122             UserList(UserIndex).Char.FX = 0
124             Call SendData(SendTarget.ToPCArea, UserIndex, PrepareMessageMeditateToggle(UserList(UserIndex).Char.CharIndex, 0))
            End If
        
            'If exiting, cancel
126         Call CancelExit(UserIndex)
        
            'Attack!
128         Call UsuarioAtaca(UserIndex)
            
            'I see you...
130         If .flags.Oculto > 0 And .flags.AdminInvisible = 0 Then
132             .flags.Oculto = 0
134             .Counters.TiempoOculto = 0
                
136             If .flags.Navegando = 1 Then

138                 If .clase = eClass.Pirat Then
                        ' Pierde la apariencia de fragata fantasmal
140                     .Char.Body = ObjData(.Invent.BarcoObjIndex).Ropaje
    
142                     .Char.ShieldAnim = NingunEscudo
144                     .Char.WeaponAnim = NingunArma
146                     .Char.CascoAnim = NingunCasco
    
148                     Call WriteConsoleMsg(UserIndex, "Has recuperado tu apariencia normal!", FontTypeNames.FONTTYPE_INFO)
150                     Call ChangeUserChar(UserIndex, .Char.Body, .Char.Head, .Char.Heading, NingunArma, NingunEscudo, NingunCasco)
                    End If
    
                Else
    
152                 If .flags.invisible = 0 Then
154                     Call SendData(SendTarget.ToPCArea, UserIndex, PrepareMessageSetInvisible(.Char.CharIndex, False))
                        'Call WriteConsoleMsg(UserIndex, "¡Has vuelto a ser visible!", FontTypeNames.FONTTYPE_INFO)
156                     Call WriteLocaleMsg(UserIndex, "307", FontTypeNames.FONTTYPE_INFOIAO)
    
                    End If
    
                End If
    
            End If

        End With

        Exit Sub

HandleAttack_Err:
158     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleAttack", Erl)
160     Resume Next
        
End Sub

''
' Handles the "PickUp" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandlePickUp(ByVal UserIndex As Integer)
        
        On Error GoTo HandlePickUp_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     With UserList(UserIndex)
            'Remove packet ID
102         Call .incomingData.ReadByte
        
            'If dead, it can't pick up objects
104         If .flags.Muerto = 1 Then
                'Call WriteConsoleMsg(UserIndex, "¡¡Estás muerto!! Los muertos no pueden tomar objetos.", FontTypeNames.FONTTYPE_INFO)
106             Call WriteLocaleMsg(UserIndex, "77", FontTypeNames.FONTTYPE_INFO)
            
                Exit Sub

            End If
        
            'Lower rank administrators can't pick up items
108         If .flags.Privilegios And (PlayerType.Consejero Or PlayerType.SemiDios) Then
112                Call WriteConsoleMsg(UserIndex, "No podés tomar ningun objeto.", FontTypeNames.FONTTYPE_INFO)
                Exit Sub
            End If
        
114         Call GetObj(UserIndex)

        End With

        
        Exit Sub

HandlePickUp_Err:
116     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandlePickUp", Erl)
118     Resume Next
        
End Sub

''
' Handles the "SafeToggle" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleSafeToggle(ByVal UserIndex As Integer)
        
        On Error GoTo HandleSafeToggle_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     With UserList(UserIndex)
            'Remove packet ID
102         Call .incomingData.ReadByte
        
104         If .flags.Seguro Then
106             Call WriteSafeModeOff(UserIndex)
            Else
108             Call WriteSafeModeOn(UserIndex)

            End If
        
110         .flags.Seguro = Not .flags.Seguro

        End With

        
        Exit Sub

HandleSafeToggle_Err:
112     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleSafeToggle", Erl)
114     Resume Next
        
End Sub

' Handles the "PartySafeToggle" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandlePartyToggle(ByVal UserIndex As Integer)
        
        On Error GoTo HandlePartyToggle_Err
        

        '***************************************************
        'Author: Rapsodius
        'Creation Date: 10/10/07
        '***************************************************
100     With UserList(UserIndex)
102         Call .incomingData.ReadByte
        
104         .flags.SeguroParty = Not .flags.SeguroParty
        
106         If .flags.SeguroParty Then
108             Call WritePartySafeOn(UserIndex)
            Else
110             Call WritePartySafeOff(UserIndex)

            End If

        End With

        
        Exit Sub

HandlePartyToggle_Err:
112     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandlePartyToggle", Erl)
114     Resume Next
        
End Sub

Private Sub HandleSeguroClan(ByVal UserIndex As Integer)
        
        On Error GoTo HandleSeguroClan_Err
        

        '***************************************************
        'Author: Ladder
        'Date: 31/10/20
        '***************************************************
100     With UserList(UserIndex)
102         Call .incomingData.ReadInteger 'Leemos paquete
                
104         .flags.SeguroClan = Not .flags.SeguroClan

106         Call WriteClanSeguro(UserIndex, .flags.SeguroClan)

        End With

        
        Exit Sub

HandleSeguroClan_Err:
108     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleSeguroClan", Erl)
110     Resume Next
        
End Sub

''
' Handles the "RequestGuildLeaderInfo" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleRequestGuildLeaderInfo(ByVal UserIndex As Integer)
        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
        'Remove packet ID
        
        On Error GoTo HandleRequestGuildLeaderInfo_Err
        
100     UserList(UserIndex).incomingData.ReadByte
    
102     Call modGuilds.SendGuildLeaderInfo(UserIndex)

        
        Exit Sub

HandleRequestGuildLeaderInfo_Err:
104     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleRequestGuildLeaderInfo", Erl)
106     Resume Next
        
End Sub

''
' Handles the "RequestAtributes" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleRequestAtributes(ByVal UserIndex As Integer)
        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
        'Remove packet ID
        
        On Error GoTo HandleRequestAtributes_Err
        
100     Call UserList(UserIndex).incomingData.ReadByte
    
102     Call WriteAttributes(UserIndex)

        
        Exit Sub

HandleRequestAtributes_Err:
104     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleRequestAtributes", Erl)
106     Resume Next
        
End Sub

''
' Handles the "RequestSkills" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleRequestSkills(ByVal UserIndex As Integer)
        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
        'Remove packet ID
        
        On Error GoTo HandleRequestSkills_Err
        
100     Call UserList(UserIndex).incomingData.ReadByte
    
102     Call WriteSendSkills(UserIndex)

        
        Exit Sub

HandleRequestSkills_Err:
104     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleRequestSkills", Erl)
106     Resume Next
        
End Sub

''
' Handles the "RequestMiniStats" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleRequestMiniStats(ByVal UserIndex As Integer)
        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
        'Remove packet ID
        
        On Error GoTo HandleRequestMiniStats_Err
        
100     Call UserList(UserIndex).incomingData.ReadByte
    
102     Call WriteMiniStats(UserIndex)

        
        Exit Sub

HandleRequestMiniStats_Err:
104     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleRequestMiniStats", Erl)
106     Resume Next
        
End Sub

''
' Handles the "CommerceEnd" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleCommerceEnd(ByVal UserIndex As Integer)
        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
        'Remove packet ID
        
        On Error GoTo HandleCommerceEnd_Err
        
100     Call UserList(UserIndex).incomingData.ReadByte
    
        'User quits commerce mode
102     If UserList(UserIndex).flags.TargetNPC <> 0 Then
104         If NpcList(UserList(UserIndex).flags.TargetNPC).SoundClose <> 0 Then
106             Call WritePlayWave(UserIndex, NpcList(UserList(UserIndex).flags.TargetNPC).SoundClose, NO_3D_SOUND, NO_3D_SOUND)

            End If

        End If

108     UserList(UserIndex).flags.Comerciando = False
110     Call WriteCommerceEnd(UserIndex)

        
        Exit Sub

HandleCommerceEnd_Err:
112     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleCommerceEnd", Erl)
114     Resume Next
        
End Sub

''
' Handles the "UserCommerceEnd" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleUserCommerceEnd(ByVal UserIndex As Integer)
        
        On Error GoTo HandleUserCommerceEnd_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     With UserList(UserIndex)
            'Remove packet ID
102         Call .incomingData.ReadByte
        
            'Quits commerce mode with user
104         If .ComUsu.DestUsu > 0 And UserList(.ComUsu.DestUsu).ComUsu.DestUsu = UserIndex Then
106             Call WriteConsoleMsg(.ComUsu.DestUsu, .name & " ha dejado de comerciar con vos.", FontTypeNames.FONTTYPE_TALK)
108             Call FinComerciarUsu(.ComUsu.DestUsu)
            
                'Send data in the outgoing buffer of the other user
            

            End If
        
110         Call FinComerciarUsu(UserIndex)

        End With

        
        Exit Sub

HandleUserCommerceEnd_Err:
112     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleUserCommerceEnd", Erl)
114     Resume Next
        
End Sub

''
' Handles the "BankEnd" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleBankEnd(ByVal UserIndex As Integer)
        
        On Error GoTo HandleBankEnd_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     With UserList(UserIndex)
            'Remove packet ID
102         Call .incomingData.ReadByte
        
            'User exits banking mode
104         .flags.Comerciando = False
        
106         Call SendData(SendTarget.ToPCArea, UserIndex, PrepareMessagePlayWave("171", UserList(UserIndex).Pos.X, UserList(UserIndex).Pos.Y))
108         Call WriteBankEnd(UserIndex)

        End With

        
        Exit Sub

HandleBankEnd_Err:
110     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleBankEnd", Erl)
112     Resume Next
        
End Sub

''
' Handles the "UserCommerceOk" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleUserCommerceOk(ByVal UserIndex As Integer)
        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
        'Remove packet ID
        
        On Error GoTo HandleUserCommerceOk_Err
        
100     Call UserList(UserIndex).incomingData.ReadByte
    
        'Trade accepted
102     Call AceptarComercioUsu(UserIndex)

        
        Exit Sub

HandleUserCommerceOk_Err:
104     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleUserCommerceOk", Erl)
106     Resume Next
        
End Sub

''
' Handles the "UserCommerceReject" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleUserCommerceReject(ByVal UserIndex As Integer)
        
        On Error GoTo HandleUserCommerceReject_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
        Dim otherUser As Integer
    
100     With UserList(UserIndex)
            'Remove packet ID
102         Call .incomingData.ReadByte
        
104         otherUser = .ComUsu.DestUsu
        
            'Offer rejected
106         If otherUser > 0 Then
108             If UserList(otherUser).flags.UserLogged Then
110                 Call WriteConsoleMsg(otherUser, .name & " ha rechazado tu oferta.", FontTypeNames.FONTTYPE_TALK)
112                 Call FinComerciarUsu(otherUser)
                
                    'Send data in the outgoing buffer of the other user
                

                End If

            End If
        
114         Call WriteConsoleMsg(UserIndex, "Has rechazado la oferta del otro usuario.", FontTypeNames.FONTTYPE_TALK)
116         Call FinComerciarUsu(UserIndex)

        End With

        
        Exit Sub

HandleUserCommerceReject_Err:
118     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleUserCommerceReject", Erl)
120     Resume Next
        
End Sub

''
' Handles the "Drop" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleDrop(ByVal UserIndex As Integer)
        
        On Error GoTo HandleDrop_Err
        
        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 07/25/09
        '07/25/09: Marco - Agregue un checkeo para patear a los usuarios que tiran items mientras comercian.
        '***************************************************
        
100     If UserList(UserIndex).incomingData.Length < 4 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub
        End If
    
        Dim slot   As Byte

        Dim Amount As Long
    
104     With UserList(UserIndex)

            'Remove packet ID
106         Call .incomingData.ReadByte

108         slot = .incomingData.ReadByte()
110         Amount = .incomingData.ReadLong()

112         If Not IntervaloPermiteTirar(UserIndex) Then Exit Sub

            If Amount <= 0 Then Exit Sub

            'low rank admins can't drop item. Neither can the dead nor those sailing or riding a horse.
114         If .flags.Muerto = 1 Or ((.flags.Privilegios And PlayerType.Consejero) <> 0 And (Not .flags.Privilegios And PlayerType.RoleMaster) <> 0) Then Exit Sub
                      
            'If the user is trading, he can't drop items => He's cheating, we kick him.
116         If .flags.Comerciando Then Exit Sub
    
            'Si esta navegando y no es pirata, no dejamos tirar items al agua.
118         If .flags.Navegando = 1 And Not .clase = eClass.Pirat Then
120             Call WriteConsoleMsg(UserIndex, "Solo los Piratas pueden tirar items en altamar", FontTypeNames.FONTTYPE_INFO)
                Exit Sub
            End If
            
            If .flags.Montado = 1 Then
                Call WriteConsoleMsg(UserIndex, "Debes descender de tu montura para dejar objetos en el suelo.", FontTypeNames.FONTTYPE_INFO)
                Exit Sub
            End If

            'Are we dropping gold or other items??
122         If slot = FLAGORO Then
124             Call TirarOro(Amount, UserIndex)
            
            Else
        
                '04-05-08 Ladder
128             If (.flags.Privilegios And PlayerType.Admin) <> 16 Then
130                 If EsNewbie(UserIndex) And ObjData(.Invent.Object(slot).ObjIndex).Newbie = 1 Then
132                     Call WriteConsoleMsg(UserIndex, "No se pueden tirar los objetos Newbies.", FontTypeNames.FONTTYPE_INFO)
                        Exit Sub

                    End If
            
134                 If ObjData(.Invent.Object(slot).ObjIndex).Instransferible = 1 Then
136                     Call WriteConsoleMsg(UserIndex, "Acción no permitida.", FontTypeNames.FONTTYPE_INFO)
                        Exit Sub

                    End If
            
138                 If ObjData(.Invent.Object(slot).ObjIndex).Intirable = 1 Then
140                     Call WriteConsoleMsg(UserIndex, "Acción no permitida.", FontTypeNames.FONTTYPE_INFO)
                        Exit Sub

                    End If

                End If
        
146             If ObjData(.Invent.Object(slot).ObjIndex).OBJType = eOBJType.otBarcos And UserList(UserIndex).flags.Navegando Then
148                 Call WriteConsoleMsg(UserIndex, "Para tirar la barca deberias estar en tierra firme.", FontTypeNames.FONTTYPE_INFO)
                    Exit Sub

                End If
        
                '04-05-08 Ladder
        
                'Only drop valid slots
154             If slot <= UserList(UserIndex).CurrentInventorySlots And slot > 0 Then
156                 If .Invent.Object(slot).ObjIndex = 0 Then
                        Exit Sub

                    End If
                
158                 Call DropObj(UserIndex, slot, Amount, .Pos.Map, .Pos.X, .Pos.Y)

                End If

            End If

        End With

        
        Exit Sub

HandleDrop_Err:
160     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleDrop", Erl)
162     Resume Next
        
End Sub

''
' Handles the "CastSpell" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleCastSpell(ByVal UserIndex As Integer)
        
        On Error GoTo HandleCastSpell_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 2 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
104     With UserList(UserIndex)
            'Remove packet ID
106         Call .incomingData.ReadByte
        
            Dim Spell As Byte
        
108         Spell = .incomingData.ReadByte()
        
110         If .flags.Muerto = 1 Then
                'Call WriteConsoleMsg(UserIndex, "¡¡Estás muerto!!.", FontTypeNames.FONTTYPE_INFO)
112             Call WriteLocaleMsg(UserIndex, "77", FontTypeNames.FONTTYPE_INFO)
                Exit Sub

            End If
        
114         .flags.Hechizo = Spell
        
116         If .flags.Hechizo < 1 Then
118             .flags.Hechizo = 0
120         ElseIf .flags.Hechizo > MAXUSERHECHIZOS Then
122             .flags.Hechizo = 0

            End If
        
124         If .flags.Hechizo <> 0 Then

                Dim uh As Integer
            
126             uh = UserList(UserIndex).Stats.UserHechizos(Spell)

128             If Hechizos(uh).AutoLanzar = 1 Then
130                 UserList(UserIndex).flags.TargetUser = UserIndex
132                 Call LanzarHechizo(.flags.Hechizo, UserIndex)
                Else
134                 Call WriteWorkRequestTarget(UserIndex, eSkill.magia)

                End If

            End If
        
        End With

        
        Exit Sub

HandleCastSpell_Err:
136     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleCastSpell", Erl)
138     Resume Next
        
End Sub

''
' Handles the "LeftClick" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleLeftClick(ByVal UserIndex As Integer)
        
        On Error GoTo HandleLeftClick_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
104     With UserList(UserIndex).incomingData
            'Remove packet ID
106         Call .ReadByte
        
            Dim X As Byte

            Dim Y As Byte
        
108         X = .ReadByte()
110         Y = .ReadByte()
        
112         Call LookatTile(UserIndex, UserList(UserIndex).Pos.Map, X, Y)

        End With

        
        Exit Sub

HandleLeftClick_Err:
114     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleLeftClick", Erl)
116     Resume Next
        
End Sub

''
' Handles the "DoubleClick" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleDoubleClick(ByVal UserIndex As Integer)
        
        On Error GoTo HandleDoubleClick_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
104     With UserList(UserIndex).incomingData
            'Remove packet ID
106         Call .ReadByte
        
            Dim X As Byte

            Dim Y As Byte
        
108         X = .ReadByte()
110         Y = .ReadByte()
        
112         Call Accion(UserIndex, UserList(UserIndex).Pos.Map, X, Y)

        End With

        
        Exit Sub

HandleDoubleClick_Err:
114     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleDoubleClick", Erl)
116     Resume Next
        
End Sub

''
' Handles the "Work" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleWork(ByVal UserIndex As Integer)
        
        On Error GoTo HandleWork_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 13/01/2010
        '13/01/2010: ZaMa - El pirata se puede ocultar en barca
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 2 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
104     With UserList(UserIndex)
            'Remove packet ID
106         Call .incomingData.ReadByte
        
            Dim Skill As eSkill
        
108         Skill = .incomingData.ReadByte()
        
110         If UserList(UserIndex).flags.Muerto = 1 Then
                'Call WriteConsoleMsg(UserIndex, "¡¡Estás muerto!!.", FontTypeNames.FONTTYPE_INFO)
112             Call WriteLocaleMsg(UserIndex, "77", FontTypeNames.FONTTYPE_INFO)
                Exit Sub

            End If
        
            'If exiting, cancel
114         Call CancelExit(UserIndex)
        
116         Select Case Skill

                Case Robar, magia, Domar
118                 Call WriteWorkRequestTarget(UserIndex, Skill)

120             Case Ocultarse

122                 If .flags.Montado = 1 Then

                        '[CDT 17-02-2004]
124                     If Not .flags.UltimoMensaje = 3 Then
126                         Call WriteConsoleMsg(UserIndex, "No podés ocultarte si estás montado.", FontTypeNames.FONTTYPE_INFO)
128                         .flags.UltimoMensaje = 3

                        End If

                        '[/CDT]
                        Exit Sub

                    End If

130                 If .flags.Oculto = 1 Then

                        '[CDT 17-02-2004]
132                     If Not .flags.UltimoMensaje = 2 Then
134                         Call WriteLocaleMsg(UserIndex, "55", FontTypeNames.FONTTYPE_INFO)
                            'Call WriteConsoleMsg(UserIndex, "Ya estás oculto.", FontTypeNames.FONTTYPE_INFO)
136                         .flags.UltimoMensaje = 2

                        End If

                        '[/CDT]
                        Exit Sub

                    End If
                    
                    If .flags.EnReto Then
                        Call WriteConsoleMsg(UserIndex, "No podés ocultarte durante un reto.", FontTypeNames.FONTTYPE_INFO)
                        Exit Sub
                    End If
                    
138                 If .flags.EnConsulta Then
140                     Call WriteConsoleMsg(UserIndex, "No podés ocultarte si estas en consulta.", FontTypeNames.FONTTYPE_INFO)
                        Exit Sub
    
                    End If
                    
142                 If MapInfo(.Pos.Map).SinInviOcul Then
144                     Call WriteConsoleMsg(UserIndex, "Una fuerza divina te impide ocultarte en esta zona.", FontTypeNames.FONTTYPE_INFO)
                        Exit Sub
                    End If
                    
146                 Call DoOcultarse(UserIndex)

            End Select

        End With

        
        Exit Sub

HandleWork_Err:
148     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleWork", Erl)
150     Resume Next
        
End Sub

''
' Handles the "UseSpellMacro" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleUseSpellMacro(ByVal UserIndex As Integer)
        
        On Error GoTo HandleUseSpellMacro_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     With UserList(UserIndex)
            'Remove packet ID
102         Call .incomingData.ReadByte
104         Call SendData(SendTarget.ToAdmins, UserIndex, PrepareMessageConsoleMsg(.name & " fue expulsado por Anti-macro de hechizos", FontTypeNames.FONTTYPE_VENENO))
106         Call WriteShowMessageBox(UserIndex, "Has sido expulsado por usar macro de hechizos. Recomendamos leer el reglamento sobre el tema macros")
        
108         Call CloseSocket(UserIndex)

        End With

        
        Exit Sub

HandleUseSpellMacro_Err:
110     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleUseSpellMacro", Erl)
112     Resume Next
        
End Sub

''
' Handles the "UseItem" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleUseItem(ByVal UserIndex As Integer)
        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
        
        On Error GoTo HandleUseItem_Err
        

100     If UserList(UserIndex).incomingData.Length < 2 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
104     With UserList(UserIndex)
            'Remove packet ID
106         Call .incomingData.ReadByte
        
            Dim slot As Byte
        
108         slot = .incomingData.ReadByte()
        
110         If slot <= UserList(UserIndex).CurrentInventorySlots And slot > 0 Then
112             If .Invent.Object(slot).ObjIndex = 0 Then Exit Sub

114             Call UseInvItem(UserIndex, slot)

            End If


        End With

        
        Exit Sub

HandleUseItem_Err:
116     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleUseItem", Erl)
118     Resume Next
        
End Sub

''
' Handles the "CraftBlacksmith" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleCraftBlacksmith(ByVal UserIndex As Integer)
        
        On Error GoTo HandleCraftBlacksmith_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
104     With UserList(UserIndex).incomingData
            'Remove packet ID
106         Call .ReadByte
        
            Dim Item As Integer
        
108         Item = .ReadInteger()
        
110         If Item < 1 Then Exit Sub
        
            ' If ObjData(Item).SkHerreria = 0 Then Exit Sub
        
112         Call HerreroConstruirItem(UserIndex, Item)

        End With

        
        Exit Sub

HandleCraftBlacksmith_Err:
114     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleCraftBlacksmith", Erl)
116     Resume Next
        
End Sub

''
' Handles the "CraftCarpenter" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleCraftCarpenter(ByVal UserIndex As Integer)
        
        On Error GoTo HandleCraftCarpenter_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
104     With UserList(UserIndex).incomingData
            'Remove packet ID
106         Call .ReadByte
        
            Dim Item As Integer
        
108         Item = .ReadInteger()
        
110         If Item < 1 Then Exit Sub
        
            'If ObjData(Item).SkCarpinteria = 0 Then Exit Sub
        
112         Call CarpinteroConstruirItem(UserIndex, Item)

        End With

        
        Exit Sub

HandleCraftCarpenter_Err:
114     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleCraftCarpenter", Erl)
116     Resume Next
        
End Sub

Private Sub HandleCraftAlquimia(ByVal UserIndex As Integer)
        
        On Error GoTo HandleCraftAlquimia_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 4 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
104     With UserList(UserIndex).incomingData
            'Remove packet ID
106         Call .ReadInteger
        
            Dim Item As Integer
        
108         Item = .ReadInteger()
        
110         If Item < 1 Then Exit Sub

112         'Call AlquimistaConstruirItem(UserIndex, Item)

        End With

        
        Exit Sub

HandleCraftAlquimia_Err:
114     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleCraftAlquimia", Erl)
116     Resume Next
        
End Sub

Private Sub HandleCraftSastre(ByVal UserIndex As Integer)
        
        On Error GoTo HandleCraftSastre_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 4 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
104     With UserList(UserIndex).incomingData
            'Remove packet ID
106         Call .ReadInteger
        
            Dim Item As Integer
        
108         Item = .ReadInteger()
        
110         If Item < 1 Then Exit Sub
            'If ObjData(Item).SkMAGOria = 0 Then Exit Sub

112         Call SastreConstruirItem(UserIndex, Item)

        End With

        
        Exit Sub

HandleCraftSastre_Err:
114     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleCraftSastre", Erl)
116     Resume Next
        
End Sub

''
' Handles the "WorkLeftClick" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleWorkLeftClick(ByVal UserIndex As Integer)
        
        On Error GoTo HandleWorkLeftClick_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 4 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
104     With UserList(UserIndex)
            
            'Remove packet ID
106         Call .incomingData.ReadByte
        
            Dim X        As Byte
            Dim Y        As Byte

            Dim Skill    As eSkill
            Dim DummyInt As Integer

            Dim tU       As Integer   'Target user
            Dim tN       As Integer   'Target NPC
        
108         X = .incomingData.ReadByte()
110         Y = .incomingData.ReadByte()
        
112         Skill = .incomingData.ReadByte()

114         If .flags.Muerto = 1 Or .flags.Descansar Or Not InMapBounds(.Pos.Map, X, Y) Then Exit Sub

116         If Not InRangoVision(UserIndex, X, Y) Then
118             Call WritePosUpdate(UserIndex)
                Exit Sub
            End If
            
120         If .flags.Meditando Then
122             .flags.Meditando = False
124             .Char.FX = 0
126             Call SendData(SendTarget.ToPCArea, UserIndex, PrepareMessageMeditateToggle(.Char.CharIndex, 0))
            End If
        
            'If exiting, cancel
128         Call CancelExit(UserIndex)
        
130         Select Case Skill

                Dim fallo As Boolean

                Case eSkill.Proyectiles
            
                    'Check attack interval
132                 If Not IntervaloPermiteMagiaGolpe(UserIndex, False) Then Exit Sub

                    'Check Magic interval
134                 If Not IntervaloPermiteGolpeMagia(UserIndex, False) Then Exit Sub

                    'Check bow's interval
136                 If Not IntervaloPermiteUsarArcos(UserIndex) Then Exit Sub
                
                    'Make sure the item is valid and there is ammo equipped.
138                 With .Invent

140                     If .WeaponEqpObjIndex = 0 Then
142                         DummyInt = 1
144                     ElseIf .WeaponEqpSlot < 1 Or .WeaponEqpSlot > UserList(UserIndex).CurrentInventorySlots Then
146                         DummyInt = 1
148                     ElseIf .MunicionEqpSlot < 1 Or .MunicionEqpSlot > UserList(UserIndex).CurrentInventorySlots Then
150                         DummyInt = 1
152                     ElseIf .MunicionEqpObjIndex = 0 Then
154                         DummyInt = 1
156                     ElseIf ObjData(.WeaponEqpObjIndex).Proyectil <> 1 Then
158                         DummyInt = 2
160                     ElseIf ObjData(.MunicionEqpObjIndex).OBJType <> eOBJType.otFlechas Then
162                         DummyInt = 1
164                     ElseIf .Object(.MunicionEqpSlot).Amount < 1 Then
166                         DummyInt = 1

                        End If
                    
168                     If DummyInt <> 0 Then
170                         If DummyInt = 1 Then
172                             Call WriteConsoleMsg(UserIndex, "No tenés municiones.", FontTypeNames.FONTTYPE_INFO)
                            
                                'Call Desequipar(UserIndex, .WeaponEqpSlot)
174                             Call WriteWorkRequestTarget(UserIndex, 0)

                            End If
                        
176                         Call Desequipar(UserIndex, .MunicionEqpSlot)
178                         Call WriteWorkRequestTarget(UserIndex, 0)
                            Exit Sub

                        End If

                    End With
                
                    'Quitamos stamina
180                 If .Stats.MinSta >= 10 Then
182                     Call QuitarSta(UserIndex, RandomNumber(1, 10))
                    
                        'Si no es GM invisible, le envio el movimiento del arma.
184                     If UserList(UserIndex).flags.AdminInvisible = 0 Then
186                         Call SendData(SendTarget.ToPCArea, UserIndex, PrepareMessageArmaMov(UserList(UserIndex).Char.CharIndex))
                        End If
                    
                    Else
188                     Call WriteLocaleMsg(UserIndex, "93", FontTypeNames.FONTTYPE_INFO)
                        ' Call WriteConsoleMsg(UserIndex, "Estís muy cansado para luchar.", FontTypeNames.FONTTYPE_INFO)
190                     Call WriteWorkRequestTarget(UserIndex, 0)
                        Exit Sub

                    End If
                
192                 Call LookatTile(UserIndex, .Pos.Map, X, Y)
                
194                 tU = .flags.TargetUser
196                 tN = .flags.TargetNPC
198                 fallo = True

                    'Validate target
200                 If tU > 0 Then

                        'Only allow to atack if the other one can retaliate (can see us)
202                     If Abs(UserList(tU).Pos.Y - .Pos.Y) > RANGO_VISION_Y Then
204                         Call WriteLocaleMsg(UserIndex, "8", FontTypeNames.FONTTYPE_INFO)
                            'Call WriteConsoleMsg(UserIndex, "Estís demasiado lejos para atacar.", FontTypeNames.FONTTYPE_WARNING)
206                         Call WriteWorkRequestTarget(UserIndex, 0)
                            Exit Sub

                        End If
                    
                        'Prevent from hitting self
208                     If tU = UserIndex Then
210                         Call WriteConsoleMsg(UserIndex, "¡No podés atacarte a vos mismo!", FontTypeNames.FONTTYPE_INFO)
212                         Call WriteWorkRequestTarget(UserIndex, 0)
                            Exit Sub

                        End If
                    
                        'Attack!
214                     If Not PuedeAtacar(UserIndex, tU) Then Exit Sub 'TODO: Por ahora pongo esto para solucionar lo anterior.
                    
                        Dim backup    As Byte
                        Dim envie     As Boolean
                        Dim Particula As Integer
                        Dim Tiempo    As Long

                        ' Porque no es HandleAttack ???
236                     Call UsuarioAtacaUsuario(UserIndex, tU)

254                     If ObjData(.Invent.MunicionEqpObjIndex).CreaFX <> 0 Then
256                         Call SendData(SendTarget.ToPCArea, tU, PrepareMessageCreateFX(UserList(tU).Char.CharIndex, ObjData(.Invent.MunicionEqpObjIndex).CreaFX, 0))

                        End If
                    
258                     If ObjData(.Invent.MunicionEqpObjIndex).CreaParticula <> "" Then
                    
260                         Particula = val(ReadField(1, ObjData(.Invent.MunicionEqpObjIndex).CreaParticula, Asc(":")))
262                         Tiempo = val(ReadField(2, ObjData(.Invent.MunicionEqpObjIndex).CreaParticula, Asc(":")))
264                         Call SendData(SendTarget.ToPCArea, tU, PrepareMessageParticleFX(UserList(tU).Char.CharIndex, Particula, Tiempo, False))

                        End If
                    
266                     fallo = False
                    
268                 ElseIf tN > 0 Then

                        'Only allow to atack if the other one can retaliate (can see us)
270                     If Abs(NpcList(tN).Pos.Y - .Pos.Y) > RANGO_VISION_Y And Abs(NpcList(tN).Pos.X - .Pos.X) > RANGO_VISION_X Then
272                         Call WriteLocaleMsg(UserIndex, "8", FontTypeNames.FONTTYPE_INFO)
274                         Call WriteWorkRequestTarget(UserIndex, 0)
                            'Call WriteConsoleMsg(UserIndex, "Estas demasiado lejos para atacar.", FontTypeNames.FONTTYPE_WARNING)
                            Exit Sub

                        End If
                    
                        'Is it attackable???
276                     If NpcList(tN).Attackable <> 0 Then
                    
278                         fallo = False
                        
                            'Attack!
                        
280                         Select Case UsuarioAtacaNpcFunction(UserIndex, tN)
                        
                                Case 0 ' no se puede pegar
                            
282                             Case 1 ' le pego
                
284                                 If NpcList(tN).flags.Snd2 > 0 Then
286                                     Call SendData(SendTarget.ToNPCArea, tN, PrepareMessagePlayWave(NpcList(tN).flags.Snd2, NpcList(tN).Pos.X, NpcList(tN).Pos.Y))
                                    Else
288                                     Call SendData(SendTarget.ToPCArea, UserIndex, PrepareMessagePlayWave(SND_IMPACTO2, NpcList(tN).Pos.X, NpcList(tN).Pos.Y))

                                    End If
                                
290                                 If ObjData(.Invent.MunicionEqpObjIndex).Subtipo = 1 And UserList(UserIndex).flags.TargetNPC > 0 Then
292                                     If NpcList(tN).flags.Paralizado = 0 Then

                                            Dim Probabilidad As Byte

294                                         Probabilidad = RandomNumber(1, 2)

296                                         If Probabilidad = 1 Then
298                                             If NpcList(tN).flags.AfectaParalisis = 0 Then
300                                                 NpcList(tN).flags.Paralizado = 1
                                                
302                                                 NpcList(tN).Contadores.Paralisis = IntervaloParalizado

304                                                 If UserList(UserIndex).ChatCombate = 1 Then
                                                        'Call WriteConsoleMsg(UserIndex, "Tu golpe a paralizado a la criatura.", FontTypeNames.FONTTYPE_FIGHT)
306                                                     Call WriteLocaleMsg(UserIndex, "136", FontTypeNames.FONTTYPE_FIGHT)

                                                    End If

308                                                 Call SendData(SendTarget.ToPCArea, UserIndex, PrepareMessageCreateFX(NpcList(tN).Char.CharIndex, 8, 0))
310                                                 envie = True
                                                Else

312                                                 If UserList(UserIndex).ChatCombate = 1 Then
                                                        'Call WriteConsoleMsg(UserIndex, "El NPC es inmune al hechizo.", FontTypeNames.FONTTYPE_INFO)
314                                                     Call WriteLocaleMsg(UserIndex, "381", FontTypeNames.FONTTYPE_INFO)

                                                    End If

                                                End If

                                            End If

                                        End If

                                    End If
                                
316                                 If ObjData(.Invent.MunicionEqpObjIndex).CreaFX <> 0 Then
318                                     Call SendData(SendTarget.ToPCArea, UserIndex, PrepareMessageCreateFX(NpcList(tN).Char.CharIndex, ObjData(.Invent.MunicionEqpObjIndex).CreaFX, 0))

                                    End If
                    
320                                 If ObjData(.Invent.MunicionEqpObjIndex).CreaParticula <> "" Then
322                                     Particula = val(ReadField(1, ObjData(.Invent.MunicionEqpObjIndex).CreaParticula, Asc(":")))
324                                     Tiempo = val(ReadField(2, ObjData(.Invent.MunicionEqpObjIndex).CreaParticula, Asc(":")))
326                                     Call SendData(SendTarget.ToPCArea, UserIndex, PrepareMessageParticleFX(NpcList(tN).Char.CharIndex, Particula, Tiempo, False))

                                    End If
                                
328                             Case 2 ' Fallo
                            
                            End Select
                        
                        End If

                    End If
                
330                 With .Invent
332                     DummyInt = .MunicionEqpSlot
                    
                        'Take 1 arrow away - we do it AFTER hitting, since if Ammo Slot is 0 it gives a rt9 and kicks players
                    
334                     If Not fallo Then
336                         Call QuitarUserInvItem(UserIndex, DummyInt, 1)

                        End If
                    
                        'Call DropObj(UserIndex, .MunicionEqpSlot, 1, UserList(UserIndex).Pos.Map, x, y)
                   
                        ' If fallo And MapData(UserList(UserIndex).Pos.Map, x, Y).Blocked = 0 Then
                        '  Dim flecha As obj
                        ' flecha.Amount = 1
                        'flecha.ObjIndex = .MunicionEqpObjIndex
                        ' Call MakeObj(flecha, UserList(UserIndex).Pos.Map, x, Y)
                        ' End If
                    
338                     If .Object(DummyInt).Amount > 0 Then
                            'QuitarUserInvItem unequipps the ammo, so we equip it again
340                         .MunicionEqpSlot = DummyInt
342                         .MunicionEqpObjIndex = .Object(DummyInt).ObjIndex
344                         .Object(DummyInt).Equipped = 1
                        Else
346                         .MunicionEqpSlot = 0
348                         .MunicionEqpObjIndex = 0

                        End If

350                     Call UpdateUserInv(False, UserIndex, DummyInt)

                    End With

                    '-----------------------------------
            
352             Case eSkill.magia
                    'Check the map allows spells to be casted.
                    '  If MapInfo(.Pos.map).MagiaSinEfecto > 0 Then
                    ' Call WriteConsoleMsg(UserIndex, "Una fuerza oscura te impide canalizar tu energía", FontTypeNames.FONTTYPE_FIGHT)
                    '  Exit Sub
                    ' End If
                
                    'Target whatever is in that tile
354                 Call LookatTile(UserIndex, .Pos.Map, X, Y)
                
                    'If it's outside range log it and exit
356                 If Abs(.Pos.X - X) > RANGO_VISION_X Or Abs(.Pos.Y - Y) > RANGO_VISION_Y Then
358                     Call LogCheating("Ataque fuera de rango de " & .name & "(" & .Pos.Map & "/" & .Pos.X & "/" & .Pos.Y & ") ip: " & .ip & " a la posicion (" & .Pos.Map & "/" & X & "/" & Y & ")")
                        Exit Sub

                    End If
                
                    'Check bow's interval
360                 If Not IntervaloPermiteUsarArcos(UserIndex, False) Then Exit Sub
                
                    'Check attack-spell interval
362                 If Not IntervaloPermiteGolpeMagia(UserIndex, False) Then Exit Sub
                
                    'Check Magic interval
364                 If Not IntervaloPermiteLanzarSpell(UserIndex) Then Exit Sub
                
                    'Check intervals and cast
366                 If .flags.Hechizo > 0 Then
368                     Call LanzarHechizo(.flags.Hechizo, UserIndex)
370                     .flags.Hechizo = 0
                    Else
372                     Call WriteConsoleMsg(UserIndex, "¡Primero selecciona el hechizo que quieres lanzar!", FontTypeNames.FONTTYPE_INFO)

                    End If
            
374             Case eSkill.Pescar
                
376                 If .Invent.HerramientaEqpObjIndex = 0 Then Exit Sub
                    
378                 If ObjData(.Invent.HerramientaEqpObjIndex).OBJType <> eOBJType.otHerramientas Then Exit Sub
                    
                    'Check interval
380                 If Not IntervaloPermiteTrabajarExtraer(UserIndex) Then Exit Sub

382                 Select Case ObjData(.Invent.HerramientaEqpObjIndex).Subtipo
                
                        Case 1      ' Subtipo: Caña de Pescar

384                         If (MapData(.Pos.Map, X, Y).Blocked And FLAG_AGUA) <> 0 Then
386                             If (MapData(.Pos.Map, .Pos.X, .Pos.Y).Blocked And FLAG_AGUA) <> 0 Or _
                                   (MapData(.Pos.Map, .Pos.X + 1, .Pos.Y).Blocked And FLAG_AGUA) <> 0 Or _
                                   (MapData(.Pos.Map, .Pos.X, .Pos.Y + 1).Blocked And FLAG_AGUA) <> 0 Or _
                                   (MapData(.Pos.Map, .Pos.X - 1, .Pos.Y).Blocked And FLAG_AGUA) <> 0 Or _
                                   (MapData(.Pos.Map, .Pos.X, .Pos.Y - 1).Blocked And FLAG_AGUA) <> 0 Then

388                                 Call DoPescar(UserIndex, False, ObjData(.Invent.HerramientaEqpObjIndex).Dorada = 1)
390                                 Call SendData(SendTarget.ToPCArea, UserIndex, PrepareMessagePlayWave(SND_PESCAR, .Pos.X, .Pos.Y))
                                Else
392                                 Call WriteConsoleMsg(UserIndex, "Acércate a la costa para pescar.", FontTypeNames.FONTTYPE_INFO)
394                                 Call WriteMacroTrabajoToggle(UserIndex, False)
                                End If
                            
                            Else
396                             Call WriteConsoleMsg(UserIndex, "No hay agua donde pescar. Busca un lago, rio o mar.", FontTypeNames.FONTTYPE_INFO)
398                             Call WriteMacroTrabajoToggle(UserIndex, False)
    
                            End If
                    
400                     Case 2      ' Subtipo: Red de Pesca
    
402                         If (MapData(.Pos.Map, X, Y).Blocked And FLAG_AGUA) <> 0 Then
                            
404                             If Abs(.Pos.X - X) + Abs(.Pos.Y - Y) > 8 Then
406                                 Call WriteLocaleMsg(UserIndex, "8", FontTypeNames.FONTTYPE_INFO)
                                    'Call WriteConsoleMsg(UserIndex, "Estás demasiado lejos para pescar.", FontTypeNames.FONTTYPE_INFO)
408                                 Call WriteWorkRequestTarget(UserIndex, 0)
                                    Exit Sub
    
                                End If
                                
410                             If UserList(UserIndex).Stats.UserSkills(eSkill.Pescar) < 80 Then
412                                 Call WriteConsoleMsg(UserIndex, "Para utilizar la red de pesca debes tener 80 skills en recoleccion.", FontTypeNames.FONTTYPE_INFO)
414                                 Call WriteWorkRequestTarget(UserIndex, 0)
                                    Exit Sub
    
                                End If
                                    
416                             If MapInfo(UserList(UserIndex).Pos.Map).Seguro = 1 Then
418                                 Call WriteConsoleMsg(UserIndex, "Esta prohibida la pesca masiva en las ciudades.", FontTypeNames.FONTTYPE_INFO)
420                                 Call WriteWorkRequestTarget(UserIndex, 0)
                                    Exit Sub
    
                                End If
                                    
422                             If UserList(UserIndex).flags.Navegando = 0 Then
424                                 Call WriteConsoleMsg(UserIndex, "Necesitas estar sobre tu barca para utilizar la red de pesca.", FontTypeNames.FONTTYPE_INFO)
426                                 Call WriteWorkRequestTarget(UserIndex, 0)
                                    Exit Sub
    
                                End If
                                    
428                             Call DoPescar(UserIndex, True, True)
430                             Call SendData(SendTarget.ToPCArea, UserIndex, PrepareMessagePlayWave(SND_PESCAR, .Pos.X, .Pos.Y))
                        
                            Else
                        
432                             Call WriteConsoleMsg(UserIndex, "No hay agua donde pescar. Busca un lago, rio o mar.", FontTypeNames.FONTTYPE_INFO)
434                             Call WriteWorkRequestTarget(UserIndex, 0)
    
                            End If
                
                    End Select
                
                    
436             Case eSkill.Talar
            
438                 If .Invent.HerramientaEqpObjIndex = 0 Then Exit Sub

440                 If ObjData(.Invent.HerramientaEqpObjIndex).OBJType <> eOBJType.otHerramientas Then Exit Sub
        
                    'Check interval
442                 If Not IntervaloPermiteTrabajarExtraer(UserIndex) Then Exit Sub

444                 Select Case ObjData(.Invent.HerramientaEqpObjIndex).Subtipo
                
                        Case 6      ' Herramientas de Carpinteria - Hacha

                            ' Ahora se puede talar en la ciudad
                            'If MapInfo(UserList(UserIndex).Pos.Map).Seguro = 1 Then
                            '    Call WriteConsoleMsg(UserIndex, "Esta prohibido talar arboles en las ciudades.", FontTypeNames.FONTTYPE_INFO)
                            '    Call WriteWorkRequestTarget(UserIndex, 0)
                            '    Exit Sub
                            'End If
                            
446                         DummyInt = MapData(.Pos.Map, X, Y).ObjInfo.ObjIndex
                            
448                         If DummyInt > 0 Then
450                             If Abs(.Pos.X - X) + Abs(.Pos.Y - Y) > 1 Then
452                                 Call WriteLocaleMsg(UserIndex, "8", FontTypeNames.FONTTYPE_INFO)
                                    'Call WriteConsoleMsg(UserIndex, "Estas demasiado lejos.", FontTypeNames.FONTTYPE_INFO)
454                                 Call WriteWorkRequestTarget(UserIndex, 0)
                                    Exit Sub

                                End If
                                
456                             If .Pos.X = X And .Pos.Y = Y Then
458                                 Call WriteConsoleMsg(UserIndex, "No podés talar desde allí.", FontTypeNames.FONTTYPE_INFO)
460                                 Call WriteWorkRequestTarget(UserIndex, 0)
                                    Exit Sub

                                End If

                                If ObjData(DummyInt).Elfico <> ObjData(.Invent.HerramientaEqpObjIndex).Elfico Then
                                    Call WriteConsoleMsg(UserIndex, "Sólo puedes talar árboles elficos con un hacha élfica.", FontTypeNames.FONTTYPE_INFO)
                                    Call WriteWorkRequestTarget(UserIndex, 0)
                                    Exit Sub

                                End If

462                             If MapData(.Pos.Map, X, Y).ObjInfo.Amount <= 0 Then
464                                 Call WriteConsoleMsg(UserIndex, "El árbol ya no te puede entregar mas leña.", FontTypeNames.FONTTYPE_INFO)
466                                 Call WriteWorkRequestTarget(UserIndex, 0)
468                                 Call WriteMacroTrabajoToggle(UserIndex, False)
                                    Exit Sub

                                End If

                                '¡Hay un arbol donde clickeo?
470                             If ObjData(DummyInt).OBJType = eOBJType.otArboles Then
472                                 Call DoTalar(UserIndex, X, Y, ObjData(.Invent.HerramientaEqpObjIndex).Dorada = 1)
                                End If

                            Else
474                             Call WriteConsoleMsg(UserIndex, "No hay ningún árbol ahí.", FontTypeNames.FONTTYPE_INFO)
476                             Call WriteWorkRequestTarget(UserIndex, 0)

478                             If UserList(UserIndex).Counters.Trabajando > 1 Then
480                                 Call WriteMacroTrabajoToggle(UserIndex, False)

                                End If

                            End If
                
                    End Select
            
482             Case eSkill.Alquimia
            
484                 If .Invent.HerramientaEqpObjIndex = 0 Then Exit Sub
                    
486                 If ObjData(.Invent.HerramientaEqpObjIndex).OBJType <> eOBJType.otHerramientas Then Exit Sub
                    
                    'Check interval
488                 If Not IntervaloPermiteTrabajarExtraer(UserIndex) Then Exit Sub

490                 Select Case ObjData(.Invent.HerramientaEqpObjIndex).Subtipo
                
                        Case 3  ' Herramientas de Alquimia - Tijeras

492                         If MapInfo(UserList(UserIndex).Pos.Map).Seguro = 1 Then
494                             Call WriteWorkRequestTarget(UserIndex, 0)
496                             Call WriteConsoleMsg(UserIndex, "Esta prohibido cortar raices en las ciudades.", FontTypeNames.FONTTYPE_INFO)
                                Exit Sub

                            End If
                            
498                         If MapData(.Pos.Map, X, Y).ObjInfo.Amount <= 0 Then
500                             Call WriteConsoleMsg(UserIndex, "El árbol ya no te puede entregar mas raices.", FontTypeNames.FONTTYPE_INFO)
502                             Call WriteWorkRequestTarget(UserIndex, 0)
504                             Call WriteMacroTrabajoToggle(UserIndex, False)
                                Exit Sub

                            End If
                
506                         DummyInt = MapData(.Pos.Map, X, Y).ObjInfo.ObjIndex
                            
508                         If DummyInt > 0 Then
                            
510                             If Abs(.Pos.X - X) + Abs(.Pos.Y - Y) > 2 Then
512                                 Call WriteLocaleMsg(UserIndex, "8", FontTypeNames.FONTTYPE_INFO)
                                    'Call WriteConsoleMsg(UserIndex, "Estas demasiado lejos.", FontTypeNames.FONTTYPE_INFO)
514                                 Call WriteWorkRequestTarget(UserIndex, 0)
                                    Exit Sub

                                End If
                                
516                             If .Pos.X = X And .Pos.Y = Y Then
518                                 Call WriteConsoleMsg(UserIndex, "No podés quitar raices allí.", FontTypeNames.FONTTYPE_INFO)
520                                 Call WriteWorkRequestTarget(UserIndex, 0)
                                    Exit Sub

                                End If
                                
                                '¡Hay un arbol donde clickeo?
522                             If ObjData(DummyInt).OBJType = eOBJType.otArboles Then
524                                 Call SendData(SendTarget.ToPCArea, UserIndex, PrepareMessagePlayWave(SND_TIJERAS, .Pos.X, .Pos.Y))
526                                 Call DoRaices(UserIndex, X, Y)

                                End If

                            Else
528                             Call WriteConsoleMsg(UserIndex, "No hay ningún árbol ahí.", FontTypeNames.FONTTYPE_INFO)
530                             Call WriteWorkRequestTarget(UserIndex, 0)
532                             Call WriteMacroTrabajoToggle(UserIndex, False)

                            End If
                
                    End Select
                
534             Case eSkill.Mineria
            
536                 If .Invent.HerramientaEqpObjIndex = 0 Then Exit Sub
                    
538                 If ObjData(.Invent.HerramientaEqpObjIndex).OBJType <> eOBJType.otHerramientas Then Exit Sub
                    
                    'Check interval
540                 If Not IntervaloPermiteTrabajarExtraer(UserIndex) Then Exit Sub

542                 Select Case ObjData(.Invent.HerramientaEqpObjIndex).Subtipo
                
                        Case 8  ' Herramientas de Mineria - Piquete
                
                            'Target whatever is in the tile
544                         Call LookatTile(UserIndex, .Pos.Map, X, Y)
                            
546                         DummyInt = MapData(.Pos.Map, X, Y).ObjInfo.ObjIndex
                            
548                         If DummyInt > 0 Then

                                'Check distance
550                             If Abs(.Pos.X - X) + Abs(.Pos.Y - Y) > 2 Then
552                                 Call WriteLocaleMsg(UserIndex, "8", FontTypeNames.FONTTYPE_INFO)
                                    'Call WriteConsoleMsg(UserIndex, "Estís demasiado lejos.", FontTypeNames.FONTTYPE_INFO)
554                                 Call WriteWorkRequestTarget(UserIndex, 0)
                                    Exit Sub

                                End If

                                '¡Hay un yacimiento donde clickeo?
566                             If ObjData(DummyInt).OBJType = eOBJType.otYacimiento Then

                                    ' Si el Yacimiento requiere herramienta `Dorada` y la herramienta no lo es, o vice versa.
                                    ' Se usa para el yacimiento de Oro.
                                    If ObjData(DummyInt).Dorada <> ObjData(.Invent.HerramientaEqpObjIndex).Dorada Then
                                        Call WriteConsoleMsg(UserIndex, "El pico dorado solo puede extraer minerales del yacimiento de Oro.", FontTypeNames.FONTTYPE_INFO)
                                        Call WriteWorkRequestTarget(UserIndex, 0)
                                        Exit Sub

                                    End If

                                    If MapData(.Pos.Map, X, Y).ObjInfo.Amount <= 0 Then
                                        Call WriteConsoleMsg(UserIndex, "Este yacimiento no tiene mas minerales para entregar.", FontTypeNames.FONTTYPE_INFO)
                                        Call WriteWorkRequestTarget(UserIndex, 0)
                                        Call WriteMacroTrabajoToggle(UserIndex, False)
                                        Exit Sub

                                    End If

568                                 Call DoMineria(UserIndex, X, Y, ObjData(.Invent.HerramientaEqpObjIndex).Dorada = 1)

                                Else
570                                 Call WriteConsoleMsg(UserIndex, "Ahí no hay ningún yacimiento.", FontTypeNames.FONTTYPE_INFO)
572                                 Call WriteWorkRequestTarget(UserIndex, 0)

                                End If

                            Else
574                             Call WriteConsoleMsg(UserIndex, "Ahí no hay ningun yacimiento.", FontTypeNames.FONTTYPE_INFO)
576                             Call WriteWorkRequestTarget(UserIndex, 0)

                            End If

                    End Select

578             Case eSkill.Robar

                    'Does the map allow us to steal here?
580                 If MapInfo(.Pos.Map).Seguro = 0 Then
                    
                        'Check interval
582                     If Not IntervaloPermiteTrabajarExtraer(UserIndex) Then Exit Sub
                    
                        'Target whatever is in that tile
584                     Call LookatTile(UserIndex, UserList(UserIndex).Pos.Map, X, Y)
                    
586                     tU = .flags.TargetUser
                    
588                     If tU > 0 And tU <> UserIndex Then

                            'Can't steal administrative players
590                         If UserList(tU).flags.Privilegios And PlayerType.user Then
592                             If UserList(tU).flags.Muerto = 0 Then
                                    Dim DistanciaMaxima As Integer
594                                 If .clase = eClass.Thief Then
596                                     DistanciaMaxima = 2
                                    Else
598                                     DistanciaMaxima = 1
                                    End If

600                                 If Abs(.Pos.X - UserList(tU).Pos.X) + Abs(.Pos.Y - UserList(tU).Pos.Y) > DistanciaMaxima Then
602                                     Call WriteLocaleMsg(UserIndex, "8", FontTypeNames.FONTTYPE_INFO)
                                        'Call WriteConsoleMsg(UserIndex, "Estís demasiado lejos.", FontTypeNames.FONTTYPE_INFO)
604                                     Call WriteWorkRequestTarget(UserIndex, 0)
                                        Exit Sub
                                    End If
                                 
                                    '17/09/02
                                    'Check the trigger
606                                 If MapData(UserList(tU).Pos.Map, UserList(tU).Pos.X, UserList(tU).Pos.Y).trigger = eTrigger.ZONASEGURA Then
608                                     Call WriteConsoleMsg(UserIndex, "No podés robar aquí.", FontTypeNames.FONTTYPE_WARNING)
610                                     Call WriteWorkRequestTarget(UserIndex, 0)
                                        Exit Sub
                                    End If
                                 
612                                 If MapData(.Pos.Map, .Pos.X, .Pos.Y).trigger = eTrigger.ZONASEGURA Then
614                                     Call WriteConsoleMsg(UserIndex, "No podés robar aquí.", FontTypeNames.FONTTYPE_WARNING)
616                                     Call WriteWorkRequestTarget(UserIndex, 0)
                                        Exit Sub
                                    End If
                                 
618                                 Call DoRobar(UserIndex, tU)

                                End If

                            End If

                        Else
620                         Call WriteConsoleMsg(UserIndex, "No a quien robarle!", FontTypeNames.FONTTYPE_INFO)
622                         Call WriteWorkRequestTarget(UserIndex, 0)

                        End If

                    Else
624                     Call WriteConsoleMsg(UserIndex, "¡No podés robar en zonas seguras!", FontTypeNames.FONTTYPE_INFO)
626                     Call WriteWorkRequestTarget(UserIndex, 0)

                    End If
                    
628             Case eSkill.Domar
                    'Modificado 25/11/02
                    'Optimizado y solucionado el bug de la doma de
                    'criaturas hostiles.
                    
                    'Target whatever is that tile
630                 Call LookatTile(UserIndex, .Pos.Map, X, Y)
632                 tN = .flags.TargetNPC
                    
634                 If tN > 0 Then
636                     If NpcList(tN).flags.Domable > 0 Then
638                         If Abs(.Pos.X - X) + Abs(.Pos.Y - Y) > 4 Then
640                             Call WriteConsoleMsg(UserIndex, "Estas demasiado lejos.", FontTypeNames.FONTTYPE_INFO)
                                Exit Sub
    
                            End If
                            
642                         If LenB(NpcList(tN).flags.AttackedBy) <> 0 Then
644                             Call WriteConsoleMsg(UserIndex, "No puedes domar una criatura que esta luchando con un jugador.", FontTypeNames.FONTTYPE_INFO)
                                Exit Sub
    
                            End If
                            
646                         Call DoDomar(UserIndex, tN)
                        Else
648                         Call WriteConsoleMsg(UserIndex, "No puedes domar a esa criatura.", FontTypeNames.FONTTYPE_INFO)
    
                        End If
    
                    Else
650                     Call WriteConsoleMsg(UserIndex, "No hay ninguna criatura alli!", FontTypeNames.FONTTYPE_INFO)
    
                    End If
               
652             Case FundirMetal    'UGLY!!! This is a constant, not a skill!!
            
                    'Check interval
654                 If Not IntervaloPermiteTrabajarConstruir(UserIndex) Then Exit Sub
                
656                 Call LookatTile(UserIndex, .Pos.Map, X, Y)
                
                    'Check there is a proper item there
658                 If .flags.TargetObj > 0 Then
660                     If ObjData(.flags.TargetObj).OBJType = eOBJType.otFragua Then

                            'Validate other items
662                         If .flags.TargetObjInvSlot < 1 Or .flags.TargetObjInvSlot > UserList(UserIndex).CurrentInventorySlots Then
                                Exit Sub

                            End If
                        
                            ''chequeamos que no se zarpe duplicando oro
664                         If .Invent.Object(.flags.TargetObjInvSlot).ObjIndex <> .flags.TargetObjInvIndex Then
666                             If .Invent.Object(.flags.TargetObjInvSlot).ObjIndex = 0 Or .Invent.Object(.flags.TargetObjInvSlot).Amount = 0 Then
668                                 Call WriteConsoleMsg(UserIndex, "No tienes más minerales", FontTypeNames.FONTTYPE_INFO)
670                                 Call WriteWorkRequestTarget(UserIndex, 0)
                                    Exit Sub

                                End If
                            
                                ''FUISTE
672                             Call WriteShowMessageBox(UserIndex, "Has sido expulsado por el sistema anti cheats.")
                            
674                             Call CloseSocket(UserIndex)
                                Exit Sub

                            End If
                        
676                         Call FundirMineral(UserIndex)
                        
                        Else
                    
678                         Call WriteConsoleMsg(UserIndex, "Ahí no hay ninguna fragua.", FontTypeNames.FONTTYPE_INFO)
680                         Call WriteWorkRequestTarget(UserIndex, 0)

682                         If UserList(UserIndex).Counters.Trabajando > 1 Then
684                             Call WriteMacroTrabajoToggle(UserIndex, False)

                            End If

                        End If

                    Else
                
686                     Call WriteConsoleMsg(UserIndex, "Ahí no hay ninguna fragua.", FontTypeNames.FONTTYPE_INFO)
688                     Call WriteWorkRequestTarget(UserIndex, 0)

690                     If UserList(UserIndex).Counters.Trabajando > 1 Then
692                         Call WriteMacroTrabajoToggle(UserIndex, False)

                        End If

                    End If

694             Case eSkill.Grupo
                    'If UserList(UserIndex).Grupo.EnGrupo = False Then
                    'Target whatever is in that tile
696                 Call LookatTile(UserIndex, UserList(UserIndex).Pos.Map, X, Y)
                    
698                 tU = .flags.TargetUser
                    
                    'Call WritePreguntaBox(UserIndex, UserList(UserIndex).name & " te invitó a unirte a su grupo. ¿Deseas unirte?")
                    
700                 If tU > 0 And tU <> UserIndex Then

                        'Can't steal administrative players
702                     If UserList(UserIndex).Grupo.EnGrupo = False Then
704                         If UserList(tU).flags.Muerto = 0 Then
706                             If Abs(.Pos.X - X) + Abs(.Pos.Y - Y) > 8 Then
708                                 Call WriteLocaleMsg(UserIndex, "8", FontTypeNames.FONTTYPE_INFO)
                                    'Call WriteConsoleMsg(UserIndex, "Estís demasiado lejos.", FontTypeNames.FONTTYPE_INFO)
710                                 Call WriteWorkRequestTarget(UserIndex, 0)
                                    Exit Sub

                                End If
                                         
712                             If UserList(UserIndex).Grupo.CantidadMiembros = 0 Then
714                                 UserList(UserIndex).Grupo.Lider = UserIndex
716                                 UserList(UserIndex).Grupo.Miembros(1) = UserIndex
718                                 UserList(UserIndex).Grupo.CantidadMiembros = 1
720                                 Call InvitarMiembro(UserIndex, tU)
                                Else
722                                 UserList(UserIndex).Grupo.Lider = UserIndex
724                                 Call InvitarMiembro(UserIndex, tU)

                                End If
                                         
                            Else
726                             Call WriteLocaleMsg(UserIndex, "7", FontTypeNames.FONTTYPE_INFO)
                                'Call WriteConsoleMsg(UserIndex, "El usuario esta muerto.", FontTypeNames.FONTTYPE_INFOIAO)
728                             Call WriteWorkRequestTarget(UserIndex, 0)

                            End If

                        Else

730                         If UserList(UserIndex).Grupo.Lider = UserIndex Then
732                             Call InvitarMiembro(UserIndex, tU)
                            Else
734                             Call WriteConsoleMsg(UserIndex, "Tu no podés invitar usuarios, debe hacerlo " & UserList(UserList(UserIndex).Grupo.Lider).name & ".", FontTypeNames.FONTTYPE_INFOIAO)
736                             Call WriteWorkRequestTarget(UserIndex, 0)

                            End If

                        End If

                    Else
738                     Call WriteLocaleMsg(UserIndex, "261", FontTypeNames.FONTTYPE_INFO)

                    End If

                    ' End If
740             Case eSkill.MarcaDeClan

                    'If UserList(UserIndex).Grupo.EnGrupo = False Then
                    'Target whatever is in that tile
                    Dim clan_nivel As Byte
                
742                 If UserList(UserIndex).GuildIndex = 0 Then
744                     Call WriteConsoleMsg(UserIndex, "Servidor> No Perteneces a ningun clan.", FontTypeNames.FONTTYPE_INFOIAO)
                        Exit Sub

                    End If
                
746                 clan_nivel = modGuilds.NivelDeClan(UserList(UserIndex).GuildIndex)

748                 If clan_nivel < 4 Then
750                     Call WriteConsoleMsg(UserIndex, "Servidor> El nivel de tu clan debe ser 4 para utilizar esta opción.", FontTypeNames.FONTTYPE_INFOIAO)
                        Exit Sub

                    End If
                                
752                 Call LookatTile(UserIndex, UserList(UserIndex).Pos.Map, X, Y)
                    
754                 tU = .flags.TargetUser

756                 If tU = 0 Then Exit Sub
                    
758                 If UserList(UserIndex).GuildIndex = UserList(tU).GuildIndex Then
760                     Call WriteConsoleMsg(UserIndex, "Servidor> No podes marcar a un miembro de tu clan.", FontTypeNames.FONTTYPE_INFOIAO)
                        Exit Sub

                    End If
                    
                    'Call WritePreguntaBox(UserIndex, UserList(UserIndex).name & " te invitó a unirte a su grupo. ¿Deseas unirte?")
                    
762                 If tU > 0 And tU <> UserIndex Then

                        ' WyroX: No puede marcar admins invisibles
764                     If UserList(tU).flags.AdminInvisible <> 0 Then Exit Sub

                        'Can't steal administrative players
766                     If UserList(tU).flags.Muerto = 0 Then
                            'call marcar
768                         If UserList(tU).flags.invisible = 1 Or UserList(tU).flags.Oculto = 1 Then
770                             Call SendData(SendTarget.ToClanArea, UserIndex, PrepareMessageParticleFX(UserList(tU).Char.CharIndex, 210, 50, False))
                            Else
772                             Call SendData(SendTarget.ToClanArea, UserIndex, PrepareMessageParticleFX(UserList(tU).Char.CharIndex, 210, 150, False))
                            End If
774                         Call SendData(SendTarget.ToClanArea, UserIndex, PrepareMessageConsoleMsg("Clan> [" & UserList(UserIndex).name & "] marco a " & UserList(tU).name & ".", FontTypeNames.FONTTYPE_GUILD))
                        Else
776                         Call WriteLocaleMsg(UserIndex, "7", FontTypeNames.FONTTYPE_INFO)
                            'Call WriteConsoleMsg(UserIndex, "El usuario esta muerto.", FontTypeNames.FONTTYPE_INFOIAO)
778                         Call WriteWorkRequestTarget(UserIndex, 0)

                        End If

                    Else
780                     Call WriteLocaleMsg(UserIndex, "261", FontTypeNames.FONTTYPE_INFO)

                    End If

782             Case eSkill.MarcaDeGM
784                 Call LookatTile(UserIndex, UserList(UserIndex).Pos.Map, X, Y)
                    
786                 tU = .flags.TargetUser

788                 If tU > 0 Then
790                     Call WriteConsoleMsg(UserIndex, "Servidor> [" & UserList(tU).name & "] seleccionado.", FontTypeNames.FONTTYPE_SERVER)
                    Else
792                     Call WriteLocaleMsg(UserIndex, "261", FontTypeNames.FONTTYPE_INFO)

                    End If
                    
            End Select

        End With

        
        Exit Sub

HandleWorkLeftClick_Err:
794     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleWorkLeftClick", Erl)
796     Resume Next
        
End Sub

''
' Handles the "CreateNewGuild" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleCreateNewGuild(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 6 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            Dim Desc       As String

            Dim GuildName  As String

            Dim errorStr   As String

            Dim Alineacion As Byte
        
110         Desc = Buffer.ReadASCIIString()
112         GuildName = Buffer.ReadASCIIString()
114         Alineacion = Buffer.ReadByte()
        
116         If modGuilds.CrearNuevoClan(UserIndex, Desc, GuildName, Alineacion, errorStr) Then

118             Call QuitarObjetos(407, 1, UserIndex)
120             Call QuitarObjetos(408, 1, UserIndex)
122             Call QuitarObjetos(409, 1, UserIndex)
124             Call QuitarObjetos(411, 1, UserIndex)

126             Call SendData(SendTarget.ToAll, UserIndex, PrepareMessageConsoleMsg(.name & " fundó el clan " & GuildName & " con alineación: " & Alineacion & ".", FontTypeNames.FONTTYPE_GUILD))
128             Call SendData(SendTarget.ToAll, 0, PrepareMessagePlayWave(44, NO_3D_SOUND, NO_3D_SOUND))
                'Update tag
130             Call RefreshCharStatus(UserIndex)
            Else
132             Call WriteConsoleMsg(UserIndex, errorStr, FontTypeNames.FONTTYPE_GUILD)

            End If
        
            'If we got here then packet is complete, copy data back to original queue
134         Call .incomingData.CopyBuffer(Buffer)

        End With
    
ErrHandler:

        Dim Error As Long

136     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
138     Set Buffer = Nothing
    
140     If Error <> 0 Then Err.raise Error

End Sub

''
' Handles the "SpellInfo" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleSpellInfo(ByVal UserIndex As Integer)
        
        On Error GoTo HandleSpellInfo_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 2 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
104     With UserList(UserIndex)
            'Remove packet ID
106         Call .incomingData.ReadByte
        
            Dim spellSlot As Byte

            Dim Spell     As Integer
        
108         spellSlot = .incomingData.ReadByte()
        
            'Validate slot
110         If spellSlot < 1 Or spellSlot > MAXUSERHECHIZOS Then
112             Call WriteConsoleMsg(UserIndex, "¡Primero selecciona el hechizo!", FontTypeNames.FONTTYPE_INFO)
                Exit Sub

            End If
        
            'Validate spell in the slot
114         Spell = .Stats.UserHechizos(spellSlot)

116         If Spell > 0 And Spell < NumeroHechizos + 1 Then

118             With Hechizos(Spell)
                    'Send information
120                 Call WriteConsoleMsg(UserIndex, "HECINF*" & Spell, FontTypeNames.FONTTYPE_INFO)

                End With

            End If

        End With

        
        Exit Sub

HandleSpellInfo_Err:
122     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleSpellInfo", Erl)
124     Resume Next
        
End Sub

''
' Handles the "EquipItem" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleEquipItem(ByVal UserIndex As Integer)
        
        On Error GoTo HandleEquipItem_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 2 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
104     With UserList(UserIndex)
            'Remove packet ID
106         Call .incomingData.ReadByte
        
            Dim itemSlot As Byte
        
108         itemSlot = .incomingData.ReadByte()
        
            'Dead users can't equip items
110         If .flags.Muerto = 1 Then
112             Call WriteConsoleMsg(UserIndex, "¡¡Estás muerto!! Sólo podés usar items cuando estás vivo.", FontTypeNames.FONTTYPE_INFO)
                Exit Sub

            End If
        
            'Validate item slot
114         If itemSlot > UserList(UserIndex).CurrentInventorySlots Or itemSlot < 1 Then Exit Sub
        
116         If .Invent.Object(itemSlot).ObjIndex = 0 Then Exit Sub
        
118         Call EquiparInvItem(UserIndex, itemSlot)

        End With

        
        Exit Sub

HandleEquipItem_Err:
120     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleEquipItem", Erl)
122     Resume Next
        
End Sub

''
' Handles the "ChangeHeading" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleChangeHeading(ByVal UserIndex As Integer)
        
        On Error GoTo HandleChangeHeading_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 10/01/08
        'Last Modified By: Lucas Tavolaro Ortiz (Tavo)
        ' 10/01/2008: Tavo - Se cancela la salida del juego si el user esta saliendo
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 2 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
104     With UserList(UserIndex)
            'Remove packet ID
106         Call .incomingData.ReadByte
        
            Dim Heading As eHeading
        
108         Heading = .incomingData.ReadByte()
        
            'Validate heading (VB won't say invalid cast if not a valid index like .Net languages would do... *sigh*)
110         If Heading > 0 And Heading < 5 Then
112             .Char.Heading = Heading
114             Call ChangeUserChar(UserIndex, .Char.Body, .Char.Head, .Char.Heading, .Char.WeaponAnim, .Char.ShieldAnim, .Char.CascoAnim)

            End If

        End With

        
        Exit Sub

HandleChangeHeading_Err:
116     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleChangeHeading", Erl)
118     Resume Next
        
End Sub

''
' Handles the "ModifySkills" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleModifySkills(ByVal UserIndex As Integer)
        
        On Error GoTo HandleModifySkills_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 1 + NUMSKILLS Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
104     With UserList(UserIndex)
            'Remove packet ID
106         Call .incomingData.ReadByte
        
            Dim i                      As Long

            Dim Count                  As Integer

            Dim points(1 To NUMSKILLS) As Byte
        
            'Codigo para prevenir el hackeo de los skills
            '<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
108         For i = 1 To NUMSKILLS
110             points(i) = .incomingData.ReadByte()
            
112             If points(i) < 0 Then
114                 Call LogHackAttemp(.name & " IP:" & .ip & " trató de hackear los skills.")
116                 .Stats.SkillPts = 0
118                 Call CloseSocket(UserIndex)
                    Exit Sub

                End If
            
120             Count = Count + points(i)
122         Next i
        
124         If Count > .Stats.SkillPts Then
126             Call LogHackAttemp(.name & " IP:" & .ip & " trató de hackear los skills.")
128             Call CloseSocket(UserIndex)
                Exit Sub

            End If

            '<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
        
130         With .Stats

132             For i = 1 To NUMSKILLS
134                 .SkillPts = .SkillPts - points(i)
136                 .UserSkills(i) = .UserSkills(i) + points(i)
                
                    'Client should prevent this, but just in case...
138                 If .UserSkills(i) > 100 Then
140                     .SkillPts = .SkillPts + .UserSkills(i) - 100
142                     .UserSkills(i) = 100

                    End If

144             Next i

            End With

        End With

        
        Exit Sub

HandleModifySkills_Err:
146     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleModifySkills", Erl)
148     Resume Next
        
End Sub

''
' Handles the "Train" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleTrain(ByVal UserIndex As Integer)
        
        On Error GoTo HandleTrain_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 2 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
104     With UserList(UserIndex)
            'Remove packet ID
106         Call .incomingData.ReadByte
        
            Dim SpawnedNpc As Integer

            Dim PetIndex   As Byte
        
108         PetIndex = .incomingData.ReadByte()
        
110         If .flags.TargetNPC = 0 Then Exit Sub
        
112         If NpcList(.flags.TargetNPC).NPCtype <> eNPCType.Entrenador Then Exit Sub
        
114         If NpcList(.flags.TargetNPC).Mascotas < MAXMASCOTASENTRENADOR Then
116             If PetIndex > 0 And PetIndex < NpcList(.flags.TargetNPC).NroCriaturas + 1 Then
                    'Create the creature
118                 SpawnedNpc = SpawnNpc(NpcList(.flags.TargetNPC).Criaturas(PetIndex).NpcIndex, NpcList(.flags.TargetNPC).Pos, True, False)
                
120                 If SpawnedNpc > 0 Then
122                     NpcList(SpawnedNpc).MaestroNPC = .flags.TargetNPC
124                     NpcList(.flags.TargetNPC).Mascotas = NpcList(.flags.TargetNPC).Mascotas + 1

                    End If

                End If

            Else
126             Call SendData(SendTarget.ToPCArea, UserIndex, PrepareMessageChatOverHead("No puedo traer más criaturas, mata las existentes!", NpcList(.flags.TargetNPC).Char.CharIndex, vbWhite))

            End If

        End With

        
        Exit Sub

HandleTrain_Err:
128     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleTrain", Erl)
130     Resume Next
        
End Sub

''
' Handles the "CommerceBuy" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleCommerceBuy(ByVal UserIndex As Integer)
        
        On Error GoTo HandleCommerceBuy_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 4 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
104     With UserList(UserIndex)
            'Remove packet ID
106         Call .incomingData.ReadByte
        
            Dim slot   As Byte

            Dim Amount As Integer
        
108         slot = .incomingData.ReadByte()
110         Amount = .incomingData.ReadInteger()
        
            'Dead people can't commerce...
112         If .flags.Muerto = 1 Then
114             Call WriteConsoleMsg(UserIndex, "¡¡Estís muerto!!", FontTypeNames.FONTTYPE_INFO)
                Exit Sub

            End If
        
            'íEl target es un NPC valido?
116         If .flags.TargetNPC < 1 Then Exit Sub
            
            'íEl NPC puede comerciar?
118         If NpcList(.flags.TargetNPC).Comercia = 0 Then
120             Call SendData(SendTarget.ToPCArea, UserIndex, PrepareMessageChatOverHead("No tengo ningún interés en comerciar.", NpcList(.flags.TargetNPC).Char.CharIndex, vbWhite))
                Exit Sub

            End If
        
            'Only if in commerce mode....
122         If Not .flags.Comerciando Then
124             Call WriteConsoleMsg(UserIndex, "No estás comerciando", FontTypeNames.FONTTYPE_INFO)
126             Call WriteCommerceEnd(UserIndex)
                Exit Sub

            End If
        
            'User compra el item
128         Call Comercio(eModoComercio.Compra, UserIndex, .flags.TargetNPC, slot, Amount)

        End With

        
        Exit Sub

HandleCommerceBuy_Err:
130     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleCommerceBuy", Erl)
132     Resume Next
        
End Sub

''
' Handles the "BankExtractItem" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleBankExtractItem(ByVal UserIndex As Integer)
        
        On Error GoTo HandleBankExtractItem_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 5 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
104     With UserList(UserIndex)
            'Remove packet ID
106         Call .incomingData.ReadByte
        
            Dim slot        As Byte

            Dim slotdestino As Byte

            Dim Amount      As Integer
        
108         slot = .incomingData.ReadByte()
110         Amount = .incomingData.ReadInteger()
        
112         slotdestino = .incomingData.ReadByte()
        
            'Dead people can't commerce
114         If .flags.Muerto = 1 Then
116             Call WriteConsoleMsg(UserIndex, "¡¡Estás muerto!!", FontTypeNames.FONTTYPE_INFO)
                Exit Sub

            End If
        
            '¿El target es un NPC valido?
118         If .flags.TargetNPC < 1 Then Exit Sub
        
            '¿Es el banquero?
120         If NpcList(.flags.TargetNPC).NPCtype <> eNPCType.Banquero Then
                Exit Sub

            End If
        
            'User retira el item del slot
122         Call UserRetiraItem(UserIndex, slot, Amount, slotdestino)

        End With

        
        Exit Sub

HandleBankExtractItem_Err:
124     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleBankExtractItem", Erl)
126     Resume Next
        
End Sub

''
' Handles the "CommerceSell" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleCommerceSell(ByVal UserIndex As Integer)
        
        On Error GoTo HandleCommerceSell_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 4 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
104     With UserList(UserIndex)
            'Remove packet ID
106         Call .incomingData.ReadByte
        
            Dim slot   As Byte

            Dim Amount As Integer
        
108         slot = .incomingData.ReadByte()
110         Amount = .incomingData.ReadInteger()
        
            'Dead people can't commerce...
112         If .flags.Muerto = 1 Then
114             Call WriteConsoleMsg(UserIndex, "¡¡Estás muerto!!", FontTypeNames.FONTTYPE_INFO)
                Exit Sub

            End If
        
            'íEl target es un NPC valido?
116         If .flags.TargetNPC < 1 Then Exit Sub
        
            'íEl NPC puede comerciar?
118         If NpcList(.flags.TargetNPC).Comercia = 0 Then
120             Call SendData(SendTarget.ToPCArea, UserIndex, PrepareMessageChatOverHead("No tengo ningún interés en comerciar.", NpcList(.flags.TargetNPC).Char.CharIndex, vbWhite))
                Exit Sub

            End If
        
            'User compra el item del slot
122         Call Comercio(eModoComercio.Venta, UserIndex, .flags.TargetNPC, slot, Amount)

        End With

        
        Exit Sub

HandleCommerceSell_Err:
124     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleCommerceSell", Erl)
126     Resume Next
        
End Sub

''
' Handles the "BankDeposit" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleBankDeposit(ByVal UserIndex As Integer)
        
        On Error GoTo HandleBankDeposit_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 5 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
104     With UserList(UserIndex)
            'Remove packet ID
106         Call .incomingData.ReadByte
        
            Dim slot        As Byte

            Dim slotdestino As Byte

            Dim Amount      As Integer
        
108         slot = .incomingData.ReadByte()
110         Amount = .incomingData.ReadInteger()
112         slotdestino = .incomingData.ReadByte()
        
            'Dead people can't commerce...
114         If .flags.Muerto = 1 Then
116             Call WriteConsoleMsg(UserIndex, "¡¡Estás muerto!!", FontTypeNames.FONTTYPE_INFO)
                Exit Sub

            End If
        
            'íEl target es un NPC valido?
118         If .flags.TargetNPC < 1 Then Exit Sub
        
            'íEl NPC puede comerciar?
120         If NpcList(.flags.TargetNPC).NPCtype <> eNPCType.Banquero Then
                Exit Sub
            End If
            
            If Distancia(NpcList(.flags.TargetNPC).Pos, .Pos) > 10 Then
                Call WriteLocaleMsg(UserIndex, "8", FontTypeNames.FONTTYPE_INFO)
                'Call WriteConsoleMsg(UserIndex, "Estís demasiado lejos.", FontTypeNames.FONTTYPE_INFO)
                Exit Sub
            End If
        
            'User deposita el item del slot rdata
122         Call UserDepositaItem(UserIndex, slot, Amount, slotdestino)

        End With

        
        Exit Sub

HandleBankDeposit_Err:
124     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleBankDeposit", Erl)
126     Resume Next
        
End Sub

''
' Handles the "ForumPost" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleForumPost(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 5 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            Dim File     As String

            Dim title    As String

            Dim msg      As String

            Dim postFile As String
        
            Dim handle   As Integer

            Dim i        As Long

            Dim Count    As Integer
        
110         title = Buffer.ReadASCIIString()
112         msg = Buffer.ReadASCIIString()
        
114         If .flags.TargetObj > 0 Then
116             File = App.Path & "\foros\" & UCase$(ObjData(.flags.TargetObj).ForoID) & ".for"
            
118             If FileExist(File, vbNormal) Then
120                 Count = val(GetVar(File, "INFO", "CantMSG"))
                
                    'If there are too many messages, delete the forum
122                 If Count > MAX_MENSAJES_FORO Then

124                     For i = 1 To Count
126                         Kill App.Path & "\foros\" & UCase$(ObjData(.flags.TargetObj).ForoID) & i & ".for"
128                     Next i

130                     Kill App.Path & "\foros\" & UCase$(ObjData(.flags.TargetObj).ForoID) & ".for"
132                     Count = 0

                    End If

                Else
                    'Starting the forum....
134                 Count = 0

                End If
            
136             handle = FreeFile()
138             postFile = Left$(File, Len(File) - 4) & CStr(Count + 1) & ".for"
            
                'Create file
140             Open postFile For Output As handle
142             Print #handle, title
144             Print #handle, msg
146             Close #handle
            
                'Update post count
148             Call WriteVar(File, "INFO", "CantMSG", Count + 1)

            End If
        
            'If we got here then packet is complete, copy data back to original queue
150         Call .incomingData.CopyBuffer(Buffer)

        End With
    
ErrHandler:

        Dim Error As Long

152     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
154     Set Buffer = Nothing
    
156     If Error <> 0 Then Err.raise Error

End Sub

''
' Handles the "MoveSpell" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleMoveSpell(ByVal UserIndex As Integer)
        
        On Error GoTo HandleMoveSpell_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
104     With UserList(UserIndex).incomingData
            'Remove packet ID
106         Call .ReadByte
        
            Dim dir As Integer
        
108         If .ReadBoolean() Then
110             dir = 1
            Else
112             dir = -1

            End If
        
114         Call DesplazarHechizo(UserIndex, dir, .ReadByte())

        End With

        
        Exit Sub

HandleMoveSpell_Err:
116     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleMoveSpell", Erl)
118     Resume Next
        
End Sub

''
' Handles the "ClanCodexUpdate" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleClanCodexUpdate(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            Dim Desc As String
        
110         Desc = Buffer.ReadASCIIString()
        
112         Call modGuilds.ChangeCodexAndDesc(Desc, .GuildIndex)
        
            'If we got here then packet is complete, copy data back to original queue
114         Call .incomingData.CopyBuffer(Buffer)

        End With
    
ErrHandler:

        Dim Error As Long

116     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
118     Set Buffer = Nothing
    
120     If Error <> 0 Then Err.raise Error

End Sub

''
' Handles the "UserCommerceOffer" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleUserCommerceOffer(ByVal UserIndex As Integer)
        
        On Error GoTo HandleUserCommerceOffer_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 6 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
104     With UserList(UserIndex)
            'Remove packet ID
106         Call .incomingData.ReadByte
        
            Dim Amount As Long

            Dim slot   As Byte

            Dim tUser  As Integer
        
108         slot = .incomingData.ReadByte()
110         Amount = .incomingData.ReadLong()
        
            'Get the other player
112         tUser = .ComUsu.DestUsu
        
            'If Amount is invalid, or slot is invalid and it's not gold, then ignore it.
114         If ((slot < 1 Or slot > UserList(UserIndex).CurrentInventorySlots) And slot <> FLAGORO) Or Amount <= 0 Then Exit Sub
        
            'Is the other player valid??
116         If tUser < 1 Or tUser > MaxUsers Then Exit Sub
        
            'Is the commerce attempt valid??
118         If UserList(tUser).ComUsu.DestUsu <> UserIndex Then
120             Call FinComerciarUsu(UserIndex)
                Exit Sub

            End If
        
            'Is he still logged??
122         If Not UserList(tUser).flags.UserLogged Then
124             Call FinComerciarUsu(UserIndex)
                Exit Sub
            Else

                'Is he alive??
126             If UserList(tUser).flags.Muerto = 1 Then
128                 Call FinComerciarUsu(UserIndex)
                    Exit Sub

                End If
            
                'Has he got enough??
130             If slot = FLAGORO Then

                    'gold
132                 If Amount > .Stats.GLD Then
134                     Call WriteConsoleMsg(UserIndex, "No tienes esa cantidad.", FontTypeNames.FONTTYPE_TALK)
                        Exit Sub

                    End If

                Else

                    'inventory
136                 If Amount > .Invent.Object(slot).Amount Then
138                     Call WriteConsoleMsg(UserIndex, "No tienes esa cantidad.", FontTypeNames.FONTTYPE_TALK)
                        Exit Sub

                    End If

                End If
            
                'Prevent offer changes (otherwise people would ripp off other players)
140             If .ComUsu.Objeto > 0 Then
142                 Call WriteConsoleMsg(UserIndex, "No podés cambiar tu oferta.", FontTypeNames.FONTTYPE_TALK)
                    Exit Sub

                End If
            
                'Don't allow to sell boats if they are equipped (you can't take them off in the water and causes trouble)
144             If .flags.Navegando = 1 Then
146                 If .Invent.BarcoSlot = slot Then
148                     Call WriteConsoleMsg(UserIndex, "No podés vender tu barco mientras lo estás usando.", FontTypeNames.FONTTYPE_TALK)
                        Exit Sub

                    End If

                End If
            
150             If .flags.Montado = 1 Then
152                 If .Invent.MonturaSlot = slot Then
154                     Call WriteConsoleMsg(UserIndex, "No podés vender tu montura mientras la estás usando.", FontTypeNames.FONTTYPE_TALK)
                        Exit Sub

                    End If

                End If
            
156             .ComUsu.Objeto = slot
158             .ComUsu.cant = Amount
            
                'If the other one had accepted, we turn that back and inform of the new offer (just to be cautious).
160             If UserList(tUser).ComUsu.Acepto = True Then
162                 UserList(tUser).ComUsu.Acepto = False
164                 Call WriteConsoleMsg(tUser, .name & " ha cambiado su oferta.", FontTypeNames.FONTTYPE_TALK)

                End If
            
166             Call EnviarObjetoTransaccion(tUser)

            End If

        End With

        
        Exit Sub

HandleUserCommerceOffer_Err:
168     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleUserCommerceOffer", Erl)
170     Resume Next
        
End Sub

''
' Handles the "GuildAcceptPeace" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleGuildAcceptPeace(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            Dim guild          As String

            Dim errorStr       As String

            Dim otherClanIndex As String
        
110         guild = Buffer.ReadASCIIString()
        
112         otherClanIndex = modGuilds.r_AceptarPropuestaDePaz(UserIndex, guild, errorStr)
        
114         If otherClanIndex = 0 Then
116             Call WriteConsoleMsg(UserIndex, errorStr, FontTypeNames.FONTTYPE_GUILD)
            Else
118             Call SendData(SendTarget.ToGuildMembers, .GuildIndex, PrepareMessageConsoleMsg("Tu clan ha firmado la paz con " & guild, FontTypeNames.FONTTYPE_GUILD))
120             Call SendData(SendTarget.ToGuildMembers, otherClanIndex, PrepareMessageConsoleMsg("Tu clan ha firmado la paz con " & modGuilds.GuildName(.GuildIndex), FontTypeNames.FONTTYPE_GUILD))

            End If
        
            'If we got here then packet is complete, copy data back to original queue
122         Call .incomingData.CopyBuffer(Buffer)

        End With
    
ErrHandler:

        Dim Error As Long

124     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
126     Set Buffer = Nothing
    
128     If Error <> 0 Then Err.raise Error

End Sub

''
' Handles the "GuildRejectAlliance" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleGuildRejectAlliance(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            Dim guild          As String

            Dim errorStr       As String

            Dim otherClanIndex As String
        
110         guild = Buffer.ReadASCIIString()
        
112         otherClanIndex = modGuilds.r_RechazarPropuestaDeAlianza(UserIndex, guild, errorStr)
        
114         If otherClanIndex = 0 Then
116             Call WriteConsoleMsg(UserIndex, errorStr, FontTypeNames.FONTTYPE_GUILD)
            Else
118             Call SendData(SendTarget.ToGuildMembers, .GuildIndex, PrepareMessageConsoleMsg("Tu clan rechazado la propuesta de alianza de " & guild, FontTypeNames.FONTTYPE_GUILD))
120             Call SendData(SendTarget.ToGuildMembers, otherClanIndex, PrepareMessageConsoleMsg(modGuilds.GuildName(.GuildIndex) & " ha rechazado nuestra propuesta de alianza con su clan.", FontTypeNames.FONTTYPE_GUILD))

            End If
        
            'If we got here then packet is complete, copy data back to original queue
122         Call .incomingData.CopyBuffer(Buffer)

        End With
    
ErrHandler:

        Dim Error As Long

124     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
126     Set Buffer = Nothing
    
128     If Error <> 0 Then Err.raise Error

End Sub

''
' Handles the "GuildRejectPeace" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleGuildRejectPeace(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            Dim guild          As String

            Dim errorStr       As String

            Dim otherClanIndex As String
        
110         guild = Buffer.ReadASCIIString()
        
112         otherClanIndex = modGuilds.r_RechazarPropuestaDePaz(UserIndex, guild, errorStr)
        
114         If otherClanIndex = 0 Then
116             Call WriteConsoleMsg(UserIndex, errorStr, FontTypeNames.FONTTYPE_GUILD)
            Else
118             Call SendData(SendTarget.ToGuildMembers, .GuildIndex, PrepareMessageConsoleMsg("Tu clan rechazado la propuesta de paz de " & guild, FontTypeNames.FONTTYPE_GUILD))
120             Call SendData(SendTarget.ToGuildMembers, otherClanIndex, PrepareMessageConsoleMsg(modGuilds.GuildName(.GuildIndex) & " ha rechazado nuestra propuesta de paz con su clan.", FontTypeNames.FONTTYPE_GUILD))

            End If
        
            'If we got here then packet is complete, copy data back to original queue
122         Call .incomingData.CopyBuffer(Buffer)

        End With
    
ErrHandler:

        Dim Error As Long

124     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
126     Set Buffer = Nothing
    
128     If Error <> 0 Then Err.raise Error

End Sub

''
' Handles the "GuildAcceptAlliance" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleGuildAcceptAlliance(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            Dim guild          As String

            Dim errorStr       As String

            Dim otherClanIndex As String
        
110         guild = Buffer.ReadASCIIString()
        
112         otherClanIndex = modGuilds.r_AceptarPropuestaDeAlianza(UserIndex, guild, errorStr)
        
114         If otherClanIndex = 0 Then
116             Call WriteConsoleMsg(UserIndex, errorStr, FontTypeNames.FONTTYPE_GUILD)
            Else
118             Call SendData(SendTarget.ToGuildMembers, .GuildIndex, PrepareMessageConsoleMsg("Tu clan ha firmado la alianza con " & guild, FontTypeNames.FONTTYPE_GUILD))
120             Call SendData(SendTarget.ToGuildMembers, otherClanIndex, PrepareMessageConsoleMsg("Tu clan ha firmado la paz con " & modGuilds.GuildName(.GuildIndex), FontTypeNames.FONTTYPE_GUILD))

            End If
        
            'If we got here then packet is complete, copy data back to original queue
122         Call .incomingData.CopyBuffer(Buffer)

        End With
    
ErrHandler:

        Dim Error As Long

124     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
126     Set Buffer = Nothing
    
128     If Error <> 0 Then Err.raise Error

End Sub

''
' Handles the "GuildOfferPeace" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleGuildOfferPeace(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 5 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            Dim guild    As String

            Dim proposal As String

            Dim errorStr As String
        
110         guild = Buffer.ReadASCIIString()
112         proposal = Buffer.ReadASCIIString()
        
114         If modGuilds.r_ClanGeneraPropuesta(UserIndex, guild, RELACIONES_GUILD.PAZ, proposal, errorStr) Then
116             Call WriteConsoleMsg(UserIndex, "Propuesta de paz enviada", FontTypeNames.FONTTYPE_GUILD)
            Else
118             Call WriteConsoleMsg(UserIndex, errorStr, FontTypeNames.FONTTYPE_GUILD)

            End If
        
            'If we got here then packet is complete, copy data back to original queue
120         Call .incomingData.CopyBuffer(Buffer)

        End With
    
ErrHandler:

        Dim Error As Long

122     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
124     Set Buffer = Nothing
    
126     If Error <> 0 Then Err.raise Error

End Sub

''
' Handles the "GuildOfferAlliance" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleGuildOfferAlliance(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 5 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            Dim guild    As String

            Dim proposal As String

            Dim errorStr As String
        
110         guild = Buffer.ReadASCIIString()
112         proposal = Buffer.ReadASCIIString()
        
114         If modGuilds.r_ClanGeneraPropuesta(UserIndex, guild, RELACIONES_GUILD.ALIADOS, proposal, errorStr) Then
116             Call WriteConsoleMsg(UserIndex, "Propuesta de alianza enviada", FontTypeNames.FONTTYPE_GUILD)
            Else
118             Call WriteConsoleMsg(UserIndex, errorStr, FontTypeNames.FONTTYPE_GUILD)

            End If
        
            'If we got here then packet is complete, copy data back to original queue
120         Call .incomingData.CopyBuffer(Buffer)

        End With
    
ErrHandler:

        Dim Error As Long

122     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
124     Set Buffer = Nothing
    
126     If Error <> 0 Then Err.raise Error

End Sub

''
' Handles the "GuildAllianceDetails" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleGuildAllianceDetails(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            Dim guild    As String

            Dim errorStr As String

            Dim details  As String
        
110         guild = Buffer.ReadASCIIString()
        
112         details = modGuilds.r_VerPropuesta(UserIndex, guild, RELACIONES_GUILD.ALIADOS, errorStr)
        
114         If LenB(details) = 0 Then
116             Call WriteConsoleMsg(UserIndex, errorStr, FontTypeNames.FONTTYPE_GUILD)
            Else
118             Call WriteOfferDetails(UserIndex, details)

            End If
        
            'If we got here then packet is complete, copy data back to original queue
120         Call .incomingData.CopyBuffer(Buffer)

        End With
    
ErrHandler:

        Dim Error As Long

122     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
124     Set Buffer = Nothing
    
126     If Error <> 0 Then Err.raise Error

End Sub

''
' Handles the "GuildPeaceDetails" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleGuildPeaceDetails(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            Dim guild    As String

            Dim errorStr As String

            Dim details  As String
        
110         guild = Buffer.ReadASCIIString()
        
112         details = modGuilds.r_VerPropuesta(UserIndex, guild, RELACIONES_GUILD.PAZ, errorStr)
        
114         If LenB(details) = 0 Then
116             Call WriteConsoleMsg(UserIndex, errorStr, FontTypeNames.FONTTYPE_GUILD)
            Else
118             Call WriteOfferDetails(UserIndex, details)

            End If
        
            'If we got here then packet is complete, copy data back to original queue
120         Call .incomingData.CopyBuffer(Buffer)

        End With
    
ErrHandler:

        Dim Error As Long

122     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
124     Set Buffer = Nothing
    
126     If Error <> 0 Then Err.raise Error

End Sub

''
' Handles the "GuildRequestJoinerInfo" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleGuildRequestJoinerInfo(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            Dim user    As String

            Dim details As String
        
110         user = Buffer.ReadASCIIString()
        
112         details = modGuilds.a_DetallesAspirante(UserIndex, user)
        
114         If LenB(details) = 0 Then
116             Call WriteConsoleMsg(UserIndex, "El personaje no ha mandado solicitud, o no estás habilitado para verla.", FontTypeNames.FONTTYPE_GUILD)
            Else
118             Call WriteShowUserRequest(UserIndex, details)

            End If
        
            'If we got here then packet is complete, copy data back to original queue
120         Call .incomingData.CopyBuffer(Buffer)

        End With
    
ErrHandler:

        Dim Error As Long

122     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
124     Set Buffer = Nothing
    
126     If Error <> 0 Then Err.raise Error

End Sub

''
' Handles the "GuildAlliancePropList" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleGuildAlliancePropList(ByVal UserIndex As Integer)
        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
        'Remove packet ID
        
        On Error GoTo HandleGuildAlliancePropList_Err
        
100     Call UserList(UserIndex).incomingData.ReadByte
    
102     Call WriteAlianceProposalsList(UserIndex, r_ListaDePropuestas(UserIndex, RELACIONES_GUILD.ALIADOS))

        
        Exit Sub

HandleGuildAlliancePropList_Err:
104     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleGuildAlliancePropList", Erl)
106     Resume Next
        
End Sub

''
' Handles the "GuildPeacePropList" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleGuildPeacePropList(ByVal UserIndex As Integer)
        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
        'Remove packet ID
        
        On Error GoTo HandleGuildPeacePropList_Err
        
100     Call UserList(UserIndex).incomingData.ReadByte
    
102     Call WritePeaceProposalsList(UserIndex, r_ListaDePropuestas(UserIndex, RELACIONES_GUILD.PAZ))

        
        Exit Sub

HandleGuildPeacePropList_Err:
104     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleGuildPeacePropList", Erl)
106     Resume Next
        
End Sub

''
' Handles the "GuildDeclareWar" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleGuildDeclareWar(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            Dim guild           As String

            Dim errorStr        As String

            Dim otherGuildIndex As Integer
        
110         guild = Buffer.ReadASCIIString()
        
112         otherGuildIndex = modGuilds.r_DeclararGuerra(UserIndex, guild, errorStr)
        
114         If otherGuildIndex = 0 Then
116             Call WriteConsoleMsg(UserIndex, errorStr, FontTypeNames.FONTTYPE_GUILD)
            Else
                'WAR shall be!
118             Call SendData(SendTarget.ToGuildMembers, .GuildIndex, PrepareMessageConsoleMsg("TU CLAN HA ENTRADO EN GUERRA CON " & guild, FontTypeNames.FONTTYPE_GUILD))
120             Call SendData(SendTarget.ToGuildMembers, otherGuildIndex, PrepareMessageConsoleMsg(modGuilds.GuildName(.GuildIndex) & " LE DECLARA LA GUERRA A TU CLAN", FontTypeNames.FONTTYPE_GUILD))
122             Call SendData(SendTarget.ToGuildMembers, .GuildIndex, PrepareMessagePlayWave(45, NO_3D_SOUND, NO_3D_SOUND))
124             Call SendData(SendTarget.ToGuildMembers, otherGuildIndex, PrepareMessagePlayWave(45, NO_3D_SOUND, NO_3D_SOUND))

            End If
        
            'If we got here then packet is complete, copy data back to original queue
126         Call .incomingData.CopyBuffer(Buffer)

        End With
    
ErrHandler:

        Dim Error As Long

128     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
130     Set Buffer = Nothing
    
132     If Error <> 0 Then Err.raise Error

End Sub

''
' Handles the "GuildNewWebsite" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleGuildNewWebsite(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
110         Call modGuilds.ActualizarWebSite(UserIndex, Buffer.ReadASCIIString())
        
            'If we got here then packet is complete, copy data back to original queue
112         Call .incomingData.CopyBuffer(Buffer)

        End With
    
ErrHandler:

        Dim Error As Long

114     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
116     Set Buffer = Nothing
    
118     If Error <> 0 Then Err.raise Error

End Sub

''
' Handles the "GuildAcceptNewMember" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleGuildAcceptNewMember(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            Dim errorStr As String

            Dim UserName As String

            Dim tUser    As Integer
        
110         UserName = Buffer.ReadASCIIString()
        
112         If Not modGuilds.a_AceptarAspirante(UserIndex, UserName, errorStr) Then
114             Call WriteConsoleMsg(UserIndex, errorStr, FontTypeNames.FONTTYPE_GUILD)
            Else
116             tUser = NameIndex(UserName)

118             If tUser > 0 Then
120                 Call modGuilds.m_ConectarMiembroAClan(tUser, .GuildIndex)
122                 Call RefreshCharStatus(tUser)

                End If
            
124             Call SendData(SendTarget.ToGuildMembers, .GuildIndex, PrepareMessageConsoleMsg("[" & UserName & "] ha sido aceptado como miembro del clan.", FontTypeNames.FONTTYPE_GUILD))
126             Call SendData(SendTarget.ToGuildMembers, .GuildIndex, PrepareMessagePlayWave(43, NO_3D_SOUND, NO_3D_SOUND))

            End If
        
            'If we got here then packet is complete, copy data back to original queue
128         Call .incomingData.CopyBuffer(Buffer)

        End With
    
ErrHandler:

        Dim Error As Long

130     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
132     Set Buffer = Nothing
    
134     If Error <> 0 Then Err.raise Error

End Sub

''
' Handles the "GuildRejectNewMember" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleGuildRejectNewMember(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 01/08/07
        'Last Modification by: (liquid)
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 5 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            Dim errorStr As String

            Dim UserName As String

            Dim Reason   As String

            Dim tUser    As Integer
        
110         UserName = Buffer.ReadASCIIString()
112         Reason = Buffer.ReadASCIIString()
        
114         If Not modGuilds.a_RechazarAspirante(UserIndex, UserName, errorStr) Then
116             Call WriteConsoleMsg(UserIndex, errorStr, FontTypeNames.FONTTYPE_GUILD)
            Else
118             tUser = NameIndex(UserName)
            
120             If tUser > 0 Then
122                 Call WriteConsoleMsg(tUser, errorStr & " : " & Reason, FontTypeNames.FONTTYPE_GUILD)
                Else
                    'hay que grabar en el char su rechazo
124                 Call modGuilds.a_RechazarAspiranteChar(UserName, .GuildIndex, Reason)

                End If

            End If
        
            'If we got here then packet is complete, copy data back to original queue
126         Call .incomingData.CopyBuffer(Buffer)

        End With
    
ErrHandler:

        Dim Error As Long

128     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
130     Set Buffer = Nothing
    
132     If Error <> 0 Then Err.raise Error

End Sub

''
' Handles the "GuildKickMember" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleGuildKickMember(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            Dim UserName   As String

            Dim GuildIndex As Integer
        
110         UserName = Buffer.ReadASCIIString()
        
112         GuildIndex = modGuilds.m_EcharMiembroDeClan(UserIndex, UserName)
        
114         If GuildIndex > 0 Then
116             Call SendData(SendTarget.ToGuildMembers, GuildIndex, PrepareMessageConsoleMsg(UserName & " fue expulsado del clan.", FontTypeNames.FONTTYPE_GUILD))
118             Call SendData(SendTarget.ToGuildMembers, GuildIndex, PrepareMessagePlayWave(45, NO_3D_SOUND, NO_3D_SOUND))
            Else
120             Call WriteConsoleMsg(UserIndex, "No podés expulsar ese personaje del clan.", FontTypeNames.FONTTYPE_GUILD)

            End If
        
            'If we got here then packet is complete, copy data back to original queue
122         Call .incomingData.CopyBuffer(Buffer)

        End With
    
ErrHandler:

        Dim Error As Long

124     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
126     Set Buffer = Nothing
    
128     If Error <> 0 Then Err.raise Error

End Sub

''
' Handles the "GuildUpdateNews" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleGuildUpdateNews(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
110         Call modGuilds.ActualizarNoticias(UserIndex, Buffer.ReadASCIIString())
        
            'If we got here then packet is complete, copy data back to original queue
112         Call .incomingData.CopyBuffer(Buffer)

        End With
    
ErrHandler:

        Dim Error As Long

114     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
116     Set Buffer = Nothing
    
118     If Error <> 0 Then Err.raise Error

End Sub

''
' Handles the "GuildMemberInfo" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleGuildMemberInfo(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
110         Call modGuilds.SendDetallesPersonaje(UserIndex, Buffer.ReadASCIIString())
        
            'If we got here then packet is complete, copy data back to original queue
112         Call .incomingData.CopyBuffer(Buffer)

        End With
    
ErrHandler:

        Dim Error As Long

114     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
116     Set Buffer = Nothing
    
118     If Error <> 0 Then Err.raise Error

End Sub

''
' Handles the "GuildOpenElections" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleGuildOpenElections(ByVal UserIndex As Integer)
        
        On Error GoTo HandleGuildOpenElections_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     With UserList(UserIndex)
            'Remove packet ID
102         Call .incomingData.ReadByte
        
            Dim Error As String
        
104         If Not modGuilds.v_AbrirElecciones(UserIndex, Error) Then
106             Call WriteConsoleMsg(UserIndex, Error, FontTypeNames.FONTTYPE_GUILD)
            Else
108             Call SendData(SendTarget.ToGuildMembers, .GuildIndex, PrepareMessageConsoleMsg("¡Han comenzado las elecciones del clan! Puedes votar escribiendo /VOTO seguido del nombre del personaje, por ejemplo: /VOTO " & .name, FontTypeNames.FONTTYPE_GUILD))

            End If

        End With

        
        Exit Sub

HandleGuildOpenElections_Err:
110     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleGuildOpenElections", Erl)
112     Resume Next
        
End Sub

''
' Handles the "GuildRequestMembership" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleGuildRequestMembership(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 5 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            Dim guild       As String

            Dim application As String

            Dim errorStr    As String
        
110         guild = Buffer.ReadASCIIString()
112         application = Buffer.ReadASCIIString()
        
114         If Not modGuilds.a_NuevoAspirante(UserIndex, guild, application, errorStr) Then
116             Call WriteConsoleMsg(UserIndex, errorStr, FontTypeNames.FONTTYPE_GUILD)
            Else
118             Call WriteConsoleMsg(UserIndex, "Tu solicitud ha sido enviada. Espera prontas noticias del líder de " & guild & ".", FontTypeNames.FONTTYPE_GUILD)

            End If
        
            'If we got here then packet is complete, copy data back to original queue
120         Call .incomingData.CopyBuffer(Buffer)

        End With
    
ErrHandler:

        Dim Error As Long

122     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
124     Set Buffer = Nothing
    
126     If Error <> 0 Then Err.raise Error

End Sub

''
' Handles the "GuildRequestDetails" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleGuildRequestDetails(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
110         Call modGuilds.SendGuildDetails(UserIndex, Buffer.ReadASCIIString())
        
            'If we got here then packet is complete, copy data back to original queue
112         Call .incomingData.CopyBuffer(Buffer)

        End With
    
ErrHandler:

        Dim Error As Long

114     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
116     Set Buffer = Nothing
    
118     If Error <> 0 Then Err.raise Error

End Sub

''
' Handles the "Online" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleOnline(ByVal UserIndex As Integer)
        
        On Error GoTo HandleOnline_Err
        

        '***************************************************
        'Ladder 17/12/20 : Envio records de usuarios y uptime
        Dim i     As Long

        Dim Count As Long
        
        Dim Time      As Long
    
        Dim UpTimeStr As String
    
100     With UserList(UserIndex)
            'Remove packet ID
102         Call .incomingData.ReadByte

            Dim nombres As String
        
104         For i = 1 To LastUser

106             If UserList(i).flags.UserLogged Then
108                 If UserList(i).flags.Privilegios And (PlayerType.user Or PlayerType.Consejero) Then
110                     nombres = nombres & " - " & UserList(i).name
                    End If
112                 Count = Count + 1

                End If

114         Next i

        
            'Get total time in seconds
116      Time = ((GetTickCount()) - tInicioServer) \ 1000
        
            'Get times in dd:hh:mm:ss format
118      UpTimeStr = (Time Mod 60) & " segundos."
120      Time = Time \ 60
        
122      UpTimeStr = (Time Mod 60) & " minutos, " & UpTimeStr
124      Time = Time \ 60
        
126      UpTimeStr = (Time Mod 24) & " horas, " & UpTimeStr
128      Time = Time \ 24
        
130      If Time = 1 Then
132          UpTimeStr = Time & " día, " & UpTimeStr
            Else
134          UpTimeStr = Time & " días, " & UpTimeStr
    
            End If
    
136  Call WriteConsoleMsg(UserIndex, "Server Online: " & UpTimeStr, FontTypeNames.FONTTYPE_INFO)


138         If .flags.Privilegios And PlayerType.user Then
140             Call WriteConsoleMsg(UserIndex, "Número de usuarios: " & CStr(Count) & " conectados.", FontTypeNames.FONTTYPE_INFOIAO)
142             Call WriteConsoleMsg(UserIndex, "Tiempo en línea: " & UpTimeStr & " Record de usuarios en simultaneo: " & RecordUsuarios & ".", FontTypeNames.FONTTYPE_INFOIAO)
            Else
144             Call WriteConsoleMsg(UserIndex, "Número de usuarios: " & CStr(Count) & " conectados: " & nombres & ".", FontTypeNames.FONTTYPE_INFOIAO)
146             Call WriteConsoleMsg(UserIndex, "Tiempo en línea: " & UpTimeStr & " Record de usuarios en simultaneo: " & RecordUsuarios & ".", FontTypeNames.FONTTYPE_INFOIAO)
            End If

        End With

        
        Exit Sub

HandleOnline_Err:
148     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleOnline", Erl)
150     Resume Next
        
End Sub

''
' Handles the "Quit" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleQuit(ByVal UserIndex As Integer)
        
        On Error GoTo HandleQuit_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 04/15/2008 (NicoNZ)
        'If user is invisible, it automatically becomes
        'visible before doing the countdown to exit
        '04/15/2008 - No se reseteaban los contadores de invi ni de ocultar. (NicoNZ)
        '***************************************************
        Dim tUser        As Integer
        Dim isNotVisible As Boolean
    
100     With UserList(UserIndex)
            'Remove packet ID
102         Call .incomingData.ReadByte
        
104         If .flags.Paralizado = 1 Then
106             Call WriteConsoleMsg(UserIndex, "No podés salir estando paralizado.", FontTypeNames.FONTTYPE_WARNING)
                Exit Sub

            End If
        
            'exit secure commerce
108         If .ComUsu.DestUsu > 0 Then
110             tUser = .ComUsu.DestUsu
            
112             If UserList(tUser).flags.UserLogged Then
114                 If UserList(tUser).ComUsu.DestUsu = UserIndex Then
116                     Call WriteConsoleMsg(tUser, "Comercio cancelado por el otro usuario", FontTypeNames.FONTTYPE_TALK)
118                     Call FinComerciarUsu(tUser)

                    End If

                End If
            
120             Call WriteConsoleMsg(UserIndex, "Comercio cancelado. ", FontTypeNames.FONTTYPE_TALK)
122             Call FinComerciarUsu(UserIndex)

            End If
        
124         isNotVisible = (.flags.Oculto Or .flags.invisible)

126         If isNotVisible And .flags.AdminInvisible = 0 Then
128             .flags.Oculto = 0
130             .flags.invisible = 0

132             .Counters.Invisibilidad = 0
134             .Counters.TiempoOculto = 0
                
                'Call WriteConsoleMsg(UserIndex, "Has vuelto a ser visible.", FontTypeNames.FONTTYPE_INFO)
136             Call WriteLocaleMsg(UserIndex, "307", FontTypeNames.FONTTYPE_INFO)
138             Call SendData(SendTarget.ToPCArea, UserIndex, PrepareMessageSetInvisible(.Char.CharIndex, False))

            End If
        
            Rem   Call WritePersonajesDeCuenta(UserIndex, .Cuenta)
140         Call Cerrar_Usuario(UserIndex)

        End With

        
        Exit Sub

HandleQuit_Err:
142     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleQuit", Erl)
144     Resume Next
        
End Sub

''
' Handles the "GuildLeave" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleGuildLeave(ByVal UserIndex As Integer)
        
        On Error GoTo HandleGuildLeave_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
        Dim GuildIndex As Integer
    
100     With UserList(UserIndex)
            'Remove packet ID
102         Call .incomingData.ReadByte
        
            'obtengo el guildindex
104         GuildIndex = m_EcharMiembroDeClan(UserIndex, .name)
        
106         If GuildIndex > 0 Then
108             Call WriteConsoleMsg(UserIndex, "Dejas el clan.", FontTypeNames.FONTTYPE_GUILD)
110             Call SendData(SendTarget.ToGuildMembers, GuildIndex, PrepareMessageConsoleMsg(.name & " deja el clan.", FontTypeNames.FONTTYPE_GUILD))
            Else
112             Call WriteConsoleMsg(UserIndex, "Tu no podés salir de ningún clan.", FontTypeNames.FONTTYPE_GUILD)

            End If

        End With

        
        Exit Sub

HandleGuildLeave_Err:
114     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleGuildLeave", Erl)
116     Resume Next
        
End Sub

''
' Handles the "RequestAccountState" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleRequestAccountState(ByVal UserIndex As Integer)
        
        On Error GoTo HandleRequestAccountState_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
        Dim earnings   As Integer

        Dim percentage As Integer
    
100     With UserList(UserIndex)
            'Remove packet ID
102         Call .incomingData.ReadByte
        
            'Dead people can't check their accounts
104         If .flags.Muerto = 1 Then
106             Call WriteConsoleMsg(UserIndex, "¡¡Estás muerto!!", FontTypeNames.FONTTYPE_INFO)
                Exit Sub

            End If
        
            'Validate target NPC
108         If .flags.TargetNPC = 0 Then
110             Call WriteConsoleMsg(UserIndex, "Primero tenes que seleccionar un personaje, hace click izquierdo sobre él.", FontTypeNames.FONTTYPE_INFO)
                Exit Sub

            End If
        
112         If Distancia(NpcList(.flags.TargetNPC).Pos, .Pos) > 3 Then
114             Call WriteLocaleMsg(UserIndex, "8", FontTypeNames.FONTTYPE_INFO)
                'Call WriteConsoleMsg(UserIndex, "Estís demasiado lejos del vendedor.", FontTypeNames.FONTTYPE_INFO)
                Exit Sub

            End If
        
116         Select Case NpcList(.flags.TargetNPC).NPCtype

                Case eNPCType.Banquero
118                 Call WriteChatOverHead(UserIndex, "Tenes " & PonerPuntos(.Stats.Banco) & " monedas de oro en tu cuenta.", NpcList(.flags.TargetNPC).Char.CharIndex, vbWhite)
            
120             Case eNPCType.Timbero

122                 If Not .flags.Privilegios And PlayerType.user Then
124                     earnings = Apuestas.Ganancias - Apuestas.Perdidas
                    
126                     If earnings >= 0 And Apuestas.Ganancias <> 0 Then
128                         percentage = Int(earnings * 100 / Apuestas.Ganancias)

                        End If
                    
130                     If earnings < 0 And Apuestas.Perdidas <> 0 Then
132                         percentage = Int(earnings * 100 / Apuestas.Perdidas)

                        End If
                    
134                     Call WriteConsoleMsg(UserIndex, "Entradas: " & PonerPuntos(Apuestas.Ganancias) & " Salida: " & PonerPuntos(Apuestas.Perdidas) & " Ganancia Neta: " & PonerPuntos(earnings) & " (" & percentage & "%) Jugadas: " & Apuestas.Jugadas, FontTypeNames.FONTTYPE_INFO)

                    End If

            End Select

        End With

        
        Exit Sub

HandleRequestAccountState_Err:
136     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleRequestAccountState", Erl)
138     Resume Next
        
End Sub

''
' Handles the "PetStand" message.
'
' @param    userIndex The index of the user sending the message.

Private Sub HandlePetStand(ByVal UserIndex As Integer)
    '***************************************************
    'Author: Juan Martín Sotuyo Dodero (Maraxus)
    'Last Modification: 05/17/06
    '
    '***************************************************
        
        On Error GoTo HandlePetStand_Err
    
        
100     With UserList(UserIndex)
            'Remove packet ID
102         Call .incomingData.ReadByte
        
            'Dead people can't use pets
104         If .flags.Muerto = 1 Then
106             Call WriteConsoleMsg(UserIndex, "¡¡Estás muerto!!", FontTypeNames.FONTTYPE_INFO)
                Exit Sub
            End If
        
            'Validate target NPC
108         If .flags.TargetNPC = 0 Then
110             Call WriteConsoleMsg(UserIndex, "Primero tenés que seleccionar un personaje, hace click izquierdo sobre él.", FontTypeNames.FONTTYPE_INFO)
                Exit Sub
            End If
        
            'Make sure it's close enough
112         If Distancia(NpcList(.flags.TargetNPC).Pos, .Pos) > 10 Then
114             Call WriteConsoleMsg(UserIndex, "Estás demasiado lejos.", FontTypeNames.FONTTYPE_INFO)
                Exit Sub
            End If
        
            'Make sure it's his pet
116         If NpcList(.flags.TargetNPC).MaestroUser <> UserIndex Then Exit Sub
        
            'Do it!
118         NpcList(.flags.TargetNPC).Movement = TipoAI.ESTATICO
        
120         Call Expresar(.flags.TargetNPC, UserIndex)
        End With
        
        Exit Sub

HandlePetStand_Err:
122     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandlePetStand", Erl)

        
End Sub

''
' Handles the "PetFollow" message.
'
' @param    userIndex The index of the user sending the message.

Private Sub HandlePetFollow(ByVal UserIndex As Integer)
    '***************************************************
    'Author: Juan Martín Sotuyo Dodero (Maraxus)
    'Last Modification: 05/17/06
    '
    '***************************************************
        
        On Error GoTo HandlePetFollow_Err
    
        
100     With UserList(UserIndex)
            'Remove packet ID
102         Call .incomingData.ReadByte
        
            'Dead users can't use pets
104         If .flags.Muerto = 1 Then
106             Call WriteConsoleMsg(UserIndex, "¡¡Estás muerto!!", FontTypeNames.FONTTYPE_INFO)
                Exit Sub
            End If
        
            'Validate target NPC
108         If .flags.TargetNPC = 0 Then
110             Call WriteConsoleMsg(UserIndex, "Primero tenés que seleccionar un personaje, hace click izquierdo sobre él.", FontTypeNames.FONTTYPE_INFO)
                Exit Sub
            End If
        
            'Make sure it's close enough
112         If Distancia(NpcList(.flags.TargetNPC).Pos, .Pos) > 10 Then
114             Call WriteConsoleMsg(UserIndex, "Estás demasiado lejos.", FontTypeNames.FONTTYPE_INFO)
                Exit Sub
            End If
        
            'Make usre it's the user's pet
116         If NpcList(.flags.TargetNPC).MaestroUser <> UserIndex Then Exit Sub
        
            'Do it
118         Call FollowAmo(.flags.TargetNPC)
        
120         Call Expresar(.flags.TargetNPC, UserIndex)
        End With
        
        Exit Sub

HandlePetFollow_Err:
122     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandlePetFollow", Erl)

        
End Sub

''
' Handles the "PetLeave" message.
'
' @param    userIndex The index of the user sending the message.

Private Sub HandlePetLeave(ByVal UserIndex As Integer)
    '***************************************************
        
        On Error GoTo HandlePetLeave_Err
    
        
100     With UserList(UserIndex)
            'Remove packet ID
102         Call .incomingData.ReadByte
        
            'Dead users can't use pets
104         If .flags.Muerto = 1 Then
106             Call WriteConsoleMsg(UserIndex, "¡¡Estás muerto!!", FontTypeNames.FONTTYPE_INFO)
                Exit Sub
            End If
        
            'Validate target NPC
108         If .flags.TargetNPC = 0 Then
110             Call WriteConsoleMsg(UserIndex, "Primero tenés que seleccionar un personaje, hace click izquierdo sobre él.", FontTypeNames.FONTTYPE_INFO)
                Exit Sub
            End If
        
            'Make usre it's the user's pet
112         If NpcList(.flags.TargetNPC).MaestroUser <> UserIndex Then Exit Sub

114         Call QuitarNPC(.flags.TargetNPC)
        End With
        
        Exit Sub

HandlePetLeave_Err:
116     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandlePetLeave", Erl)

        
End Sub

''
' Handles the "GrupoMsg" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleGrupoMsg(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            Dim chat As String
        
110         chat = Buffer.ReadASCIIString()
        
112         If LenB(chat) <> 0 Then
                'Analize chat...
114             Call Statistics.ParseChat(chat)
            
116             If .Grupo.EnGrupo = True Then

                    Dim i As Byte
         
118                 For i = 1 To UserList(.Grupo.Lider).Grupo.CantidadMiembros
                    
                        'Call WriteConsoleMsg(UserList(.Grupo.Lider).Grupo.Miembros(i), "[" & .Name & "] " & chat, FontTypeNames.FONTTYPE_New_Amarillo_Verdoso)
120                     Call WriteConsoleMsg(UserList(.Grupo.Lider).Grupo.Miembros(i), .name & "> " & chat, FontTypeNames.FONTTYPE_New_Amarillo_Verdoso)
122                     Call WriteChatOverHead(UserList(.Grupo.Lider).Grupo.Miembros(i), chat, UserList(UserIndex).Char.CharIndex, &HFF8000)
                  
124                 Next i
            
                Else
                    'Call WriteConsoleMsg(UserIndex, "[" & .Name & "] " & chat, FontTypeNames.FONTTYPE_New_GRUPO)
126                 Call WriteConsoleMsg(UserIndex, "Grupo> No estas en ningun grupo.", FontTypeNames.FONTTYPE_New_GRUPO)

                End If

            End If
        
            'If we got here then packet is complete, copy data back to original queue
128         Call .incomingData.CopyBuffer(Buffer)

        End With
    
ErrHandler:

        Dim Error As Long

130     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
132     Set Buffer = Nothing
    
134     If Error <> 0 Then Err.raise Error

End Sub

''
' Handles the "TrainList" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleTrainList(ByVal UserIndex As Integer)
        
        On Error GoTo HandleTrainList_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     With UserList(UserIndex)
            'Remove packet ID
102         Call .incomingData.ReadByte
        
            'Dead users can't use pets
104         If .flags.Muerto = 1 Then
106             Call WriteConsoleMsg(UserIndex, "¡¡Estás muerto!!", FontTypeNames.FONTTYPE_INFO)
                Exit Sub

            End If
        
            'Validate target NPC
108         If .flags.TargetNPC = 0 Then
110             Call WriteConsoleMsg(UserIndex, "Primero tenés que seleccionar un personaje, hace click izquierdo sobre él.", FontTypeNames.FONTTYPE_INFO)
                Exit Sub

            End If
        
            'Make sure it's close enough
112         If Distancia(NpcList(.flags.TargetNPC).Pos, .Pos) > 10 Then
114             Call WriteLocaleMsg(UserIndex, "8", FontTypeNames.FONTTYPE_INFO)
                'Call WriteConsoleMsg(UserIndex, "Estís demasiado lejos.", FontTypeNames.FONTTYPE_INFO)
                Exit Sub

            End If
        
            'Make sure it's the trainer
116         If NpcList(.flags.TargetNPC).NPCtype <> eNPCType.Entrenador Then Exit Sub
        
118         Call WriteTrainerCreatureList(UserIndex, .flags.TargetNPC)

        End With

        
        Exit Sub

HandleTrainList_Err:
120     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleTrainList", Erl)
122     Resume Next
        
End Sub

''
' Handles the "Rest" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleRest(ByVal UserIndex As Integer)
        
        On Error GoTo HandleRest_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     With UserList(UserIndex)
            'Remove packet ID
102         Call .incomingData.ReadByte
        
            'Dead users can't use pets
104         If .flags.Muerto = 1 Then
106             Call WriteConsoleMsg(UserIndex, "¡¡Estás muerto!! Solo podés usar items cuando estás vivo.", FontTypeNames.FONTTYPE_INFO)
                Exit Sub

            End If
        
108         If HayOBJarea(.Pos, FOGATA) Then
110             Call WriteRestOK(UserIndex)
            
112             If Not .flags.Descansar Then
114                 Call WriteConsoleMsg(UserIndex, "Te acomodás junto a la fogata y comenzís a descansar.", FontTypeNames.FONTTYPE_INFO)
                Else
116                 Call WriteConsoleMsg(UserIndex, "Te levantas.", FontTypeNames.FONTTYPE_INFO)

                End If
            
118             .flags.Descansar = Not .flags.Descansar
            Else

120             If .flags.Descansar Then
122                 Call WriteRestOK(UserIndex)
124                 Call WriteConsoleMsg(UserIndex, "Te levantas.", FontTypeNames.FONTTYPE_INFO)
                
126                 .flags.Descansar = False
                    Exit Sub

                End If
            
128             Call WriteConsoleMsg(UserIndex, "No hay ninguna fogata junto a la cual descansar.", FontTypeNames.FONTTYPE_INFO)

            End If

        End With

        
        Exit Sub

HandleRest_Err:
130     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleRest", Erl)
132     Resume Next
        
End Sub

''
' Handles the "Meditate" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleMeditate(ByVal UserIndex As Integer)
        
        On Error GoTo HandleMeditate_Err

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 04/15/08 (NicoNZ)
        'Arreglí un bug que mandaba un index de la meditacion diferente
        'al que decia el server.
        '***************************************************
        
100     With UserList(UserIndex)

            'Remove packet ID
102         Call .incomingData.ReadByte
            
            'Si ya tiene el mana completo, no lo dejamos meditar.
104         If .Stats.MinMAN = .Stats.MaxMAN Then Exit Sub
                           
            'Las clases NO MAGICAS no meditan...
106         If .clase = eClass.Hunter Or _
               .clase = eClass.Trabajador Or _
               .clase = eClass.Warrior Or _
               .clase = eClass.Pirat Or _
               .clase = eClass.Thief Then Exit Sub

108         If .flags.Muerto = 1 Then
110             Call WriteLocaleMsg(UserIndex, "77", FontTypeNames.FONTTYPE_INFO)
                Exit Sub
            End If
        
112         If .flags.Montado = 1 Then
114             Call WriteConsoleMsg(UserIndex, "No podes meditar estando montado.", FontTypeNames.FONTTYPE_INFO)
                Exit Sub
            End If

116         .flags.Meditando = Not .flags.Meditando

118         If .flags.Meditando Then

120             .Counters.TimerMeditar = 0

122             Select Case .Stats.ELV

                    Case 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14
124                     .Char.FX = Meditaciones.MeditarInicial

126                 Case 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29
128                     .Char.FX = Meditaciones.MeditarMayor15

130                 Case 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44
132                     .Char.FX = Meditaciones.MeditarMayor30

134                 Case 45, 46
136                     .Char.FX = Meditaciones.MeditarMayor45

                    Case Else
                        .Char.FX = Meditaciones.MeditarMayor47

                End Select
            Else
138             .Char.FX = 0
                'Call WriteLocaleMsg(UserIndex, "123", FontTypeNames.FONTTYPE_INFO)
            End If

140         Call SendData(SendTarget.ToPCArea, UserIndex, PrepareMessageMeditateToggle(.Char.CharIndex, .Char.FX))

        End With

        
        Exit Sub

HandleMeditate_Err:
142     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleMeditate", Erl)
144     Resume Next
        
End Sub

''
' Handles the "Resucitate" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleResucitate(ByVal UserIndex As Integer)
        
        On Error GoTo HandleResucitate_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     With UserList(UserIndex)
            'Remove packet ID
102         Call .incomingData.ReadByte
        
            'Se asegura que el target es un npc
104         If .flags.TargetNPC = 0 Then
106             Call WriteConsoleMsg(UserIndex, "Primero tenés que seleccionar un personaje, hace click izquierdo sobre él.", FontTypeNames.FONTTYPE_INFO)
                Exit Sub

            End If
        
            'Validate NPC and make sure player is dead
108         If (NpcList(.flags.TargetNPC).NPCtype <> eNPCType.Revividor And (NpcList(.flags.TargetNPC).NPCtype <> eNPCType.ResucitadorNewbie Or Not EsNewbie(UserIndex))) Or .flags.Muerto = 0 Then Exit Sub
        
            'Make sure it's close enough
110         If Distancia(.Pos, NpcList(.flags.TargetNPC).Pos) > 10 Then
112             Call WriteLocaleMsg(UserIndex, "8", FontTypeNames.FONTTYPE_INFO)
                'Call WriteConsoleMsg(UserIndex, "El sacerdote no puede resucitarte debido a que estás demasiado lejos.", FontTypeNames.FONTTYPE_INFO)
                Exit Sub

            End If
        
114         Call RevivirUsuario(UserIndex)
116         Call SendData(SendTarget.ToPCArea, UserIndex, PrepareMessageParticleFX(UserList(UserIndex).Char.CharIndex, ParticulasIndex.Curar, 100, False))
118         Call SendData(SendTarget.ToPCArea, UserIndex, PrepareMessagePlayWave("104", UserList(UserIndex).Pos.X, UserList(UserIndex).Pos.Y))
120         Call WriteConsoleMsg(UserIndex, "¡Has sido resucitado!", FontTypeNames.FONTTYPE_INFO)

        End With

        
        Exit Sub

HandleResucitate_Err:
122     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleResucitate", Erl)
124     Resume Next
        
End Sub

''
' Handles the "Heal" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleHeal(ByVal UserIndex As Integer)
        
        On Error GoTo HandleHeal_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     With UserList(UserIndex)
            'Remove packet ID
102         Call .incomingData.ReadByte
        
            'Se asegura que el target es un npc
104         If .flags.TargetNPC = 0 Then
106             Call WriteConsoleMsg(UserIndex, "Primero tenés que seleccionar un personaje, hace click izquierdo sobre él.", FontTypeNames.FONTTYPE_INFO)
                Exit Sub

            End If
        
108         If (NpcList(.flags.TargetNPC).NPCtype <> eNPCType.Revividor And NpcList(.flags.TargetNPC).NPCtype <> eNPCType.ResucitadorNewbie) Or .flags.Muerto <> 0 Then Exit Sub
        
110         If Distancia(.Pos, NpcList(.flags.TargetNPC).Pos) > 10 Then
112             Call WriteLocaleMsg(UserIndex, "8", FontTypeNames.FONTTYPE_INFO)
                'Call WriteConsoleMsg(UserIndex, "El sacerdote no puede curarte debido a que estás demasiado lejos.", FontTypeNames.FONTTYPE_INFO)
                Exit Sub

            End If
        
114         .Stats.MinHp = .Stats.MaxHp
        
116         Call WriteUpdateHP(UserIndex)
        
118         Call WriteConsoleMsg(UserIndex, "ííHas sido curado!!", FontTypeNames.FONTTYPE_INFO)

        End With

        
        Exit Sub

HandleHeal_Err:
120     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleHeal", Erl)
122     Resume Next
        
End Sub

''
' Handles the "RequestStats" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleRequestStats(ByVal UserIndex As Integer)
        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
        'Remove packet ID
        
        On Error GoTo HandleRequestStats_Err
        
100     Call UserList(UserIndex).incomingData.ReadByte
    
102     Call SendUserStatsTxt(UserIndex, UserIndex)

        
        Exit Sub

HandleRequestStats_Err:
104     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleRequestStats", Erl)
106     Resume Next
        
End Sub

''
' Handles the "Help" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleHelp(ByVal UserIndex As Integer)
        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
        'Remove packet ID
        
        On Error GoTo HandleHelp_Err
        
100     Call UserList(UserIndex).incomingData.ReadByte
    
102     Call SendHelp(UserIndex)

        
        Exit Sub

HandleHelp_Err:
104     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleHelp", Erl)
106     Resume Next
        
End Sub

''
' Handles the "CommerceStart" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleCommerceStart(ByVal UserIndex As Integer)
        
        On Error GoTo HandleCommerceStart_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     With UserList(UserIndex)

            'Remove packet ID
102         Call .incomingData.ReadByte

            'Dead people can't commerce
104         If .flags.Muerto = 1 Then
                'Call WriteConsoleMsg(UserIndex, "¡¡Estás muerto!!", FontTypeNames.FONTTYPE_INFO)
106             Call WriteLocaleMsg(UserIndex, "77", FontTypeNames.FONTTYPE_INFO)
                Exit Sub

            End If
        
            'Is it already in commerce mode??
108         If .flags.Comerciando Then
110             Call WriteConsoleMsg(UserIndex, "Ya estás comerciando", FontTypeNames.FONTTYPE_INFO)
                Exit Sub

            End If
        
            'Validate target NPC
112         If .flags.TargetNPC > 0 Then
                
                'VOS, como GM, NO podes COMERCIAR con NPCs. (excepto Dioses y Admins)
114             If (.flags.Privilegios And (PlayerType.user Or PlayerType.Dios Or PlayerType.Admin)) = 0 Then
116                 Call WriteConsoleMsg(UserIndex, "No podés vender items.", FontTypeNames.FONTTYPE_WARNING)
                    Exit Sub

                End If
                
                'Does the NPC want to trade??
118             If NpcList(.flags.TargetNPC).Comercia = 0 Then
120                 If LenB(NpcList(.flags.TargetNPC).Desc) <> 0 Then
122                     Call WriteChatOverHead(UserIndex, "No tengo ningún interés en comerciar.", NpcList(.flags.TargetNPC).Char.CharIndex, vbWhite)

                    End If
                
                    Exit Sub

                End If
            
124             If Distancia(NpcList(.flags.TargetNPC).Pos, .Pos) > 3 Then
126                 Call WriteLocaleMsg(UserIndex, "8", FontTypeNames.FONTTYPE_INFO)
                    'Call WriteConsoleMsg(UserIndex, "Estís demasiado lejos del vendedor.", FontTypeNames.FONTTYPE_INFO)
                    Exit Sub

                End If
            
                'Start commerce....
128             Call IniciarComercioNPC(UserIndex)
                
130         ElseIf .flags.TargetUser > 0 Then

                ' **********************  Comercio con Usuarios  *********************
                
                'VOS, como GM, NO podes COMERCIAR con usuarios. (excepto Dioses y Admins)
132             If (.flags.Privilegios And (PlayerType.user Or PlayerType.Dios Or PlayerType.Admin)) = 0 Then
134                 Call WriteConsoleMsg(UserIndex, "No podés vender items.", FontTypeNames.FONTTYPE_WARNING)
                    Exit Sub

                End If
                
                'NO podes COMERCIAR CON un GM. (excepto Dioses y Admins)
136             If (UserList(.flags.TargetUser).flags.Privilegios And (PlayerType.user Or PlayerType.Dios Or PlayerType.Admin)) = 0 Then
138                 Call WriteConsoleMsg(UserIndex, "No podés vender items a este usuario.", FontTypeNames.FONTTYPE_WARNING)
                    Exit Sub

                End If
                
                'Is the other one dead??
140             If UserList(.flags.TargetUser).flags.Muerto = 1 Then
142                 Call WriteConsoleMsg(UserIndex, "¡¡No podés comerciar con los muertos!!", FontTypeNames.FONTTYPE_INFO)
                    Exit Sub

                End If
            
                'Is it me??
144             If .flags.TargetUser = UserIndex Then
146                 Call WriteConsoleMsg(UserIndex, "No podés comerciar con vos mismo...", FontTypeNames.FONTTYPE_INFO)
                    Exit Sub

                End If
            
                'Check distance
148             If Distancia(UserList(.flags.TargetUser).Pos, .Pos) > 3 Then
150                 Call WriteLocaleMsg(UserIndex, "8", FontTypeNames.FONTTYPE_INFO)
                    'Call WriteConsoleMsg(UserIndex, "Estís demasiado lejos del usuario.", FontTypeNames.FONTTYPE_INFO)
                    Exit Sub

                End If
            
                'Is he already trading?? is it with me or someone else??
152             If UserList(.flags.TargetUser).flags.Comerciando = True And UserList(.flags.TargetUser).ComUsu.DestUsu <> UserIndex Then
154                 Call WriteConsoleMsg(UserIndex, "No podés comerciar con el usuario en este momento.", FontTypeNames.FONTTYPE_INFO)
                    Exit Sub

                End If
            
                'Initialize some variables...
156             .ComUsu.DestUsu = .flags.TargetUser
158             .ComUsu.DestNick = UserList(.flags.TargetUser).name
160             .ComUsu.cant = 0
162             .ComUsu.Objeto = 0
164             .ComUsu.Acepto = False
            
                'Rutina para comerciar con otro usuario
166             Call IniciarComercioConUsuario(UserIndex, .flags.TargetUser)

            Else
168             Call WriteConsoleMsg(UserIndex, "Primero haz click izquierdo sobre el personaje.", FontTypeNames.FONTTYPE_INFO)

            End If

        End With

        
        Exit Sub

HandleCommerceStart_Err:
170     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleCommerceStart", Erl)
172     Resume Next
        
End Sub

''
' Handles the "BankStart" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleBankStart(ByVal UserIndex As Integer)
        
        On Error GoTo HandleBankStart_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     With UserList(UserIndex)
            'Remove packet ID
102         Call .incomingData.ReadByte
        
            'Dead people can't commerce
104         If .flags.Muerto = 1 Then
106             Call WriteLocaleMsg(UserIndex, "77", FontTypeNames.FONTTYPE_INFO)
                'Call WriteConsoleMsg(UserIndex, "¡¡Estás muerto!!", FontTypeNames.FONTTYPE_INFO)
                Exit Sub

            End If
        
108         If .flags.Comerciando Then
110             Call WriteConsoleMsg(UserIndex, "Ya estás comerciando", FontTypeNames.FONTTYPE_INFO)
                Exit Sub

            End If
        
            'Validate target NPC
112         If .flags.TargetNPC > 0 Then
114             If Distancia(NpcList(.flags.TargetNPC).Pos, .Pos) > 6 Then
116                 Call WriteLocaleMsg(UserIndex, "8", FontTypeNames.FONTTYPE_INFO)
                    'Call WriteConsoleMsg(UserIndex, "Estís demasiado lejos del vendedor.", FontTypeNames.FONTTYPE_INFO)
                    Exit Sub

                End If
            
                'If it's the banker....
118             If NpcList(.flags.TargetNPC).NPCtype = eNPCType.Banquero Then
120                 Call IniciarDeposito(UserIndex)

                End If

            Else
122             Call WriteConsoleMsg(UserIndex, "Primero haz click izquierdo sobre el personaje.", FontTypeNames.FONTTYPE_INFO)

            End If

        End With

        
        Exit Sub

HandleBankStart_Err:
124     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleBankStart", Erl)
126     Resume Next
        
End Sub

''
' Handles the "Enlist" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleEnlist(ByVal UserIndex As Integer)
        
        On Error GoTo HandleEnlist_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     With UserList(UserIndex)
            'Remove packet ID
102         Call .incomingData.ReadByte
        
            'Validate target NPC
104         If .flags.TargetNPC = 0 Then
106             Call WriteConsoleMsg(UserIndex, "Primero tenés que seleccionar un personaje, hacé click izquierdo sobre él.", FontTypeNames.FONTTYPE_INFO)
                Exit Sub

            End If
        
108         If NpcList(.flags.TargetNPC).NPCtype <> eNPCType.Enlistador Or .flags.Muerto <> 0 Then Exit Sub
        
110         If Distancia(.Pos, NpcList(.flags.TargetNPC).Pos) > 4 Then
112             Call WriteConsoleMsg(UserIndex, "Debes acercarte mís.", FontTypeNames.FONTTYPE_INFO)
                Exit Sub

            End If
        
114         If NpcList(.flags.TargetNPC).flags.Faccion = 0 Then
116             Call EnlistarArmadaReal(UserIndex)
            Else
118             Call EnlistarCaos(UserIndex)

            End If

        End With

        
        Exit Sub

HandleEnlist_Err:
120     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleEnlist", Erl)
122     Resume Next
        
End Sub

''
' Handles the "Information" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleInformation(ByVal UserIndex As Integer)
        
        On Error GoTo HandleInformation_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     With UserList(UserIndex)
            'Remove packet ID
102         Call .incomingData.ReadByte
        
            'Validate target NPC
104         If .flags.TargetNPC = 0 Then
106             Call WriteConsoleMsg(UserIndex, "Primero tenés que seleccionar un personaje, hacé click izquierdo sobre él.", FontTypeNames.FONTTYPE_INFO)
                Exit Sub

            End If
        
108         If NpcList(.flags.TargetNPC).NPCtype <> eNPCType.Enlistador Or .flags.Muerto <> 0 Then Exit Sub
        
110         If Distancia(.Pos, NpcList(.flags.TargetNPC).Pos) > 4 Then
112             Call WriteLocaleMsg(UserIndex, "8", FontTypeNames.FONTTYPE_INFO)
                'Call WriteConsoleMsg(UserIndex, "Estís demasiado lejos.", FontTypeNames.FONTTYPE_INFO)
                Exit Sub

            End If
        
114         If NpcList(.flags.TargetNPC).flags.Faccion = 0 Then
116             If .Faccion.ArmadaReal = 0 Then
118                 Call WriteChatOverHead(UserIndex, "No perteneces a las tropas reales!!!", NpcList(.flags.TargetNPC).Char.CharIndex, vbWhite)
                    Exit Sub

                End If

120             Call WriteChatOverHead(UserIndex, "Tu deber es combatir criminales, cada 100 criminales que derrotes te darí una recompensa.", NpcList(.flags.TargetNPC).Char.CharIndex, vbWhite)
            Else

122             If .Faccion.FuerzasCaos = 0 Then
124                 Call WriteChatOverHead(UserIndex, "No perteneces a la legiín oscura!!!", NpcList(.flags.TargetNPC).Char.CharIndex, vbWhite)
                    Exit Sub

                End If

126             Call WriteChatOverHead(UserIndex, "Tu deber es sembrar el caos y la desesperanza, cada 100 ciudadanos que derrotes te darí una recompensa.", NpcList(.flags.TargetNPC).Char.CharIndex, vbWhite)

            End If

        End With

        
        Exit Sub

HandleInformation_Err:
128     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleInformation", Erl)
130     Resume Next
        
End Sub

''
' Handles the "Reward" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleReward(ByVal UserIndex As Integer)
        
        On Error GoTo HandleReward_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     With UserList(UserIndex)
            'Remove packet ID
102         Call .incomingData.ReadByte
        
            'Validate target NPC
104         If .flags.TargetNPC = 0 Then
106             Call WriteConsoleMsg(UserIndex, "Primero tenés que seleccionar un personaje, hacé click izquierdo sobre él.", FontTypeNames.FONTTYPE_INFO)
                Exit Sub

            End If
        
108         If NpcList(.flags.TargetNPC).NPCtype <> eNPCType.Enlistador Or .flags.Muerto <> 0 Then Exit Sub
        
110         If Distancia(.Pos, NpcList(.flags.TargetNPC).Pos) > 4 Then
112             Call WriteLocaleMsg(UserIndex, "8", FontTypeNames.FONTTYPE_INFO)
                'Call WriteConsoleMsg(UserIndex, "Estís demasiado lejos.", FontTypeNames.FONTTYPE_INFO)
                Exit Sub

            End If
        
114         If NpcList(.flags.TargetNPC).flags.Faccion = 0 Then
116             If .Faccion.ArmadaReal = 0 Then
118                 Call WriteChatOverHead(UserIndex, "No perteneces a las tropas reales!!!", NpcList(.flags.TargetNPC).Char.CharIndex, vbWhite)
                    Exit Sub

                End If

120             Call RecompensaArmadaReal(UserIndex)
            Else

122             If .Faccion.FuerzasCaos = 0 Then
124                 Call WriteChatOverHead(UserIndex, "No perteneces a la legiín oscura!!!", NpcList(.flags.TargetNPC).Char.CharIndex, vbWhite)
                    Exit Sub

                End If

126             Call RecompensaCaos(UserIndex)

            End If

        End With

        
        Exit Sub

HandleReward_Err:
128     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleReward", Erl)
130     Resume Next
        
End Sub

''
' Handles the "RequestMOTD" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleRequestMOTD(ByVal UserIndex As Integer)
        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
        'Remove packet ID
        
        On Error GoTo HandleRequestMOTD_Err
        
100     Call UserList(UserIndex).incomingData.ReadByte
    
102     Call SendMOTD(UserIndex)

        
        Exit Sub

HandleRequestMOTD_Err:
104     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleRequestMOTD", Erl)
106     Resume Next
        
End Sub

''
' Handles the "UpTime" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleUpTime(ByVal UserIndex As Integer)
        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 01/10/08
        '01/10/2008 - Marcos Martinez (ByVal) - Automatic restart removed from the server along with all their assignments and varibles
        '***************************************************
        'Remove packet ID
        
        On Error GoTo HandleUpTime_Err
        
100     Call UserList(UserIndex).incomingData.ReadByte
    
        Dim Time      As Long

        Dim UpTimeStr As String
    
        'Get total time in seconds
102     Time = ((GetTickCount()) - tInicioServer) \ 1000
    
        'Get times in dd:hh:mm:ss format
104     UpTimeStr = (Time Mod 60) & " segundos."
106     Time = Time \ 60
    
108     UpTimeStr = (Time Mod 60) & " minutos, " & UpTimeStr
110     Time = Time \ 60
    
112     UpTimeStr = (Time Mod 24) & " horas, " & UpTimeStr
114     Time = Time \ 24
    
116     If Time = 1 Then
118         UpTimeStr = Time & " día, " & UpTimeStr
        Else
120         UpTimeStr = Time & " días, " & UpTimeStr

        End If
    
122     Call WriteConsoleMsg(UserIndex, "Server Online: " & UpTimeStr, FontTypeNames.FONTTYPE_INFO)

        
        Exit Sub

HandleUpTime_Err:
124     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleUpTime", Erl)
126     Resume Next
        
End Sub

''
' Handles the "Inquiry" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleInquiry(ByVal UserIndex As Integer)
        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
        'Remove packet ID
        
        On Error GoTo HandleInquiry_Err
        
100     Call UserList(UserIndex).incomingData.ReadByte
    
102     ConsultaPopular.SendInfoEncuesta (UserIndex)

        
        Exit Sub

HandleInquiry_Err:
104     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleInquiry", Erl)
106     Resume Next
        
End Sub

''
' Handles the "GuildMessage" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleGuildMessage(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            Dim chat As String
        
110         chat = Buffer.ReadASCIIString()
        
112         If LenB(chat) <> 0 Then
                'Analize chat...
114             Call Statistics.ParseChat(chat)

                ' WyroX: Foto-denuncias - Push message
                Dim i As Integer
                For i = 1 To UBound(.flags.ChatHistory) - 1
                    .flags.ChatHistory(i) = .flags.ChatHistory(i + 1)
                Next
                .flags.ChatHistory(UBound(.flags.ChatHistory)) = chat
            
116             If .GuildIndex > 0 Then
118                 Call SendData(SendTarget.ToDiosesYclan, .GuildIndex, PrepareMessageGuildChat(.name & "> " & chat))

                    'TODO : Con la 0.12.1 se debe definir si esto vuelve o se borra (/CMSG overhead)
                    'Call SendData(SendTarget.ToClanArea, UserIndex, UserList(UserIndex).Pos.Map, "||" & vbYellow & "í< " & rData & " >í" & CStr(UserList(UserIndex).Char.CharIndex))
                End If

            End If
        
            'If we got here then packet is complete, copy data back to original queue
120         Call .incomingData.CopyBuffer(Buffer)

        End With
    
ErrHandler:

        Dim Error As Long

122     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
124     Set Buffer = Nothing
    
126     If Error <> 0 Then Err.raise Error

End Sub

''
' Handles the "CentinelReport" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleCentinelReport(ByVal UserIndex As Integer)
        
        On Error GoTo HandleCentinelReport_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
104     With UserList(UserIndex)
            'Remove packet ID
106         Call .incomingData.ReadByte
        
108         Call CentinelaCheckClave(UserIndex, .incomingData.ReadInteger())

        End With

        
        Exit Sub

HandleCentinelReport_Err:
110     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleCentinelReport", Erl)
112     Resume Next
        
End Sub

''
' Handles the "GuildOnline" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleGuildOnline(ByVal UserIndex As Integer)
        
        On Error GoTo HandleGuildOnline_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     With UserList(UserIndex)
            'Remove packet ID
102         Call .incomingData.ReadByte
        
            Dim onlineList As String
        
104         onlineList = modGuilds.m_ListaDeMiembrosOnline(UserIndex, .GuildIndex)
        
106         If .GuildIndex <> 0 Then
108             Call WriteConsoleMsg(UserIndex, "Compaíeros de tu clan conectados: " & onlineList, FontTypeNames.FONTTYPE_GUILDMSG)
            Else
110             Call WriteConsoleMsg(UserIndex, "No pertences a ningún clan.", FontTypeNames.FONTTYPE_GUILDMSG)

            End If

        End With

        
        Exit Sub

HandleGuildOnline_Err:
112     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleGuildOnline", Erl)
114     Resume Next
        
End Sub

''
' Handles the "CouncilMessage" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleCouncilMessage(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            Dim chat As String
        
110         chat = Buffer.ReadASCIIString()
        
112         If LenB(chat) <> 0 Then
                'Analize chat...
114             Call Statistics.ParseChat(chat)

                ' WyroX: Foto-denuncias - Push message
                Dim i As Integer
                For i = 1 To UBound(.flags.ChatHistory) - 1
                    .flags.ChatHistory(i) = .flags.ChatHistory(i + 1)
                Next
                .flags.ChatHistory(UBound(.flags.ChatHistory)) = chat
            
116             If .flags.Privilegios And PlayerType.RoyalCouncil Then
118                 Call SendData(SendTarget.ToConsejo, UserIndex, PrepareMessageConsoleMsg("(Consejero) " & .name & "> " & chat, FontTypeNames.FONTTYPE_CONSEJO))
120             ElseIf .flags.Privilegios And PlayerType.ChaosCouncil Then
122                 Call SendData(SendTarget.ToConsejoCaos, UserIndex, PrepareMessageConsoleMsg("(Consejero) " & .name & "> " & chat, FontTypeNames.FONTTYPE_CONSEJOCAOS))

                End If

            End If
        
            'If we got here then packet is complete, copy data back to original queue
124         Call .incomingData.CopyBuffer(Buffer)

        End With
    
ErrHandler:

        Dim Error As Long

126     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
128     Set Buffer = Nothing
    
130     If Error <> 0 Then Err.raise Error

End Sub

''
' Handles the "RoleMasterRequest" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleRoleMasterRequest(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            Dim request As String
        
110         request = Buffer.ReadASCIIString()
        
112         If LenB(request) <> 0 Then
114             Call WriteConsoleMsg(UserIndex, "Su solicitud ha sido enviada", FontTypeNames.FONTTYPE_INFO)
116             Call SendData(SendTarget.ToRolesMasters, 0, PrepareMessageConsoleMsg(.name & " PREGUNTA ROL: " & request, FontTypeNames.FONTTYPE_GUILDMSG))

            End If
        
            'If we got here then packet is complete, copy data back to original queue
118         Call .incomingData.CopyBuffer(Buffer)

        End With
    
ErrHandler:

        Dim Error As Long

120     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
122     Set Buffer = Nothing
    
124     If Error <> 0 Then Err.raise Error

End Sub

''
' Handles the "GMRequest" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleGMRequest(ByVal UserIndex As Integer)
        
        On Error GoTo HandleGMRequest_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     With UserList(UserIndex)
            'Remove packet ID
102         Call .incomingData.ReadByte
        
104         If Not Ayuda.Existe(.name) Then
106             Call WriteConsoleMsg(UserIndex, "El mensaje ha sido entregado, ahora sílo debes esperar que se desocupe algín GM.", FontTypeNames.FONTTYPE_INFO)
                'Call Ayuda.Push(.name)
            Else
                'Call Ayuda.Quitar(.name)
                'Call Ayuda.Push(.name)
108             Call WriteConsoleMsg(UserIndex, "Ya habías mandado un mensaje, tu mensaje ha sido movido al final de la cola de mensajes.", FontTypeNames.FONTTYPE_INFO)

            End If

        End With

        
        Exit Sub

HandleGMRequest_Err:
110     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleGMRequest", Erl)
112     Resume Next
        
End Sub

''
' Handles the "ChangeDescription" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleChangeDescription(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            Dim Description As String
        
110         Description = Buffer.ReadASCIIString()
        
112         If .flags.Muerto = 1 Then
114             Call WriteConsoleMsg(UserIndex, "No podés cambiar la descripción estando muerto.", FontTypeNames.FONTTYPE_INFOIAO)
            Else
116             If Len(Description) > 128 Then
118                 Call WriteConsoleMsg(UserIndex, "La descripción es muy larga.", FontTypeNames.FONTTYPE_INFOIAO)

120             ElseIf Not DescripcionValida(Description) Then
122                 Call WriteConsoleMsg(UserIndex, "La descripción tiene carácteres inválidos.", FontTypeNames.FONTTYPE_INFOIAO)
                Else
124                 .Desc = Trim$(Description)
126                 Call WriteConsoleMsg(UserIndex, "La descripción a cambiado.", FontTypeNames.FONTTYPE_INFOIAO)

                End If

            End If
        
            'If we got here then packet is complete, copy data back to original queue
128         Call .incomingData.CopyBuffer(Buffer)

        End With
    
ErrHandler:

        Dim Error As Long

130     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
132     Set Buffer = Nothing
    
134     If Error <> 0 Then Err.raise Error

End Sub

''
' Handles the "GuildVote" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleGuildVote(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            Dim vote     As String

            Dim errorStr As String
        
110         vote = Buffer.ReadASCIIString()
        
112         If Not modGuilds.v_UsuarioVota(UserIndex, vote, errorStr) Then
114             Call WriteConsoleMsg(UserIndex, "Voto NO contabilizado: " & errorStr, FontTypeNames.FONTTYPE_GUILD)
            Else
116             Call WriteConsoleMsg(UserIndex, "Voto contabilizado.", FontTypeNames.FONTTYPE_GUILD)

            End If
        
            'If we got here then packet is complete, copy data back to original queue
118         Call .incomingData.CopyBuffer(Buffer)

        End With
    
ErrHandler:

        Dim Error As Long

120     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
122     Set Buffer = Nothing
    
124     If Error <> 0 Then Err.raise Error

End Sub

''
' Handles the "Punishments" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandlePunishments(ByVal UserIndex As Integer)

    '***************************************************
    'Author: Juan Martín Sotuyo Dodero (Maraxus)
    'Last Modification: 05/17/06
    '
    '***************************************************
    If UserList(UserIndex).incomingData.Length < 3 Then
        Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
        Exit Sub

    End If
    
    On Error GoTo ErrHandler

    With UserList(UserIndex)

        'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
        Dim Buffer As New clsByteQueue
        Call Buffer.CopyBuffer(.incomingData)
        
        'Remove packet ID
        Call Buffer.ReadByte
        
        Dim name As String
        name = Buffer.ReadASCIIString()
        
        'If we got here then packet is complete, copy data back to original queue
        Call .incomingData.CopyBuffer(Buffer)
        
        ' Si un GM usa este comando, me fijo que me haya dado el nick del PJ a analizar.
        If EsGM(UserIndex) And LenB(name) = 0 Then Exit Sub
        
        Dim Count As Integer

        If (InStrB(name, "\") <> 0) Then
            name = Replace(name, "\", vbNullString)

        End If

        If (InStrB(name, "/") <> 0) Then
            name = Replace(name, "/", vbNullString)

        End If

        If (InStrB(name, ":") <> 0) Then
            name = Replace(name, ":", vbNullString)

        End If

        If (InStrB(name, "|") <> 0) Then
            name = Replace(name, "|", vbNullString)

        End If
           
        Dim TargetUserName As String

        If EsGM(UserIndex) Then
        
            If PersonajeExiste(name) Then
                TargetUserName = name
                
            Else
                Call WriteConsoleMsg(UserIndex, "El personaje " & TargetUserName & " no existe.", FontTypeNames.FONTTYPE_INFO)
                Exit Sub

            End If
            
        Else
        
            TargetUserName = .name
            
        End If

        If Database_Enabled Then
            Count = GetUserAmountOfPunishmentsDatabase(TargetUserName)
                
        Else
            Count = val(GetVar(CharPath & name & ".chr", "PENAS", "Cant"))

        End If

        If Count = 0 Then
            Call WriteConsoleMsg(UserIndex, "Sin prontuario..", FontTypeNames.FONTTYPE_INFO)

        Else
                
            If Database_Enabled Then
                Call SendUserPunishmentsDatabase(UserIndex, TargetUserName)
                        
            Else
                        
                While Count > 0
                    Call WriteConsoleMsg(UserIndex, Count & " - " & GetVar(CharPath & TargetUserName & ".chr", "PENAS", "P" & Count), FontTypeNames.FONTTYPE_INFO)
                    Count = Count - 1
                Wend
                            
            End If

        End If

    End With
    
    Exit Sub
    
ErrHandler:

    Dim Error As Long

    Error = Err.Number

    On Error GoTo 0
    
    'Destroy auxiliar buffer
    Set Buffer = Nothing
    
    If Error <> 0 Then Err.raise Error

End Sub

''
' Handles the "ChangePassword" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleChangePassword(ByVal UserIndex As Integer)
        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Creation Date: 10/10/07
        'Last Modified By: Ladder
        'Ahora cambia la password de la cuenta y no del PJ.
        '***************************************************

100     If UserList(UserIndex).incomingData.Length < 5 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            Dim oldPass  As String

            Dim newPass  As String

            Dim oldPass2 As String
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
110         oldPass = Buffer.ReadASCIIString()
112         newPass = Buffer.ReadASCIIString()

114         If Database_Enabled Then
116             Call ChangePasswordDatabase(UserIndex, SDesencriptar(oldPass), SDesencriptar(newPass))
        
            Else

118             If LenB(SDesencriptar(newPass)) = 0 Then
120                 Call WriteConsoleMsg(UserIndex, "Debe especificar una contraseña nueva, inténtelo de nuevo.", FontTypeNames.FONTTYPE_INFO)
                Else
122                 oldPass2 = GetVar(CuentasPath & UserList(UserIndex).Cuenta & ".act", "INIT", "PASSWORD")
                
124                 If SDesencriptar(oldPass2) <> SDesencriptar(oldPass) Then
126                     Call WriteConsoleMsg(UserIndex, "La contraseña actual proporcionada no es correcta. La contraseña no ha sido cambiada, inténtelo de nuevo.", FontTypeNames.FONTTYPE_INFO)
                    Else
128                     Call WriteVar(CuentasPath & UserList(UserIndex).Cuenta & ".act", "INIT", "PASSWORD", newPass)
130                     Call WriteConsoleMsg(UserIndex, "La contraseña de su cuenta fue cambiada con éxito.", FontTypeNames.FONTTYPE_INFO)

                    End If

                End If

            End If
        
            'If we got here then packet is complete, copy data back to original queue
132         Call .incomingData.CopyBuffer(Buffer)

        End With
    
ErrHandler:

        Dim Error As Long

134     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
136     Set Buffer = Nothing
    
138     If Error <> 0 Then Err.raise Error

End Sub

''
' Handles the "Gamble" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleGamble(ByVal UserIndex As Integer)
        
        On Error GoTo HandleGamble_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
104     With UserList(UserIndex)
            'Remove packet ID
106         Call .incomingData.ReadByte
        
            Dim Amount As Integer
        
108         Amount = .incomingData.ReadInteger()
        
110         If .flags.Muerto = 1 Then
112             Call WriteLocaleMsg(UserIndex, "77", FontTypeNames.FONTTYPE_INFO)
                'Call WriteConsoleMsg(UserIndex, "¡¡Estás muerto!!", FontTypeNames.FONTTYPE_INFO)
114         ElseIf .flags.TargetNPC = 0 Then
                'Validate target NPC
116             Call WriteConsoleMsg(UserIndex, "Primero tenés que seleccionar un personaje, haz click izquierdo sobre él.", FontTypeNames.FONTTYPE_INFO)
118         ElseIf Distancia(NpcList(.flags.TargetNPC).Pos, .Pos) > 10 Then
120             Call WriteLocaleMsg(UserIndex, "8", FontTypeNames.FONTTYPE_INFO)
                ' Call WriteConsoleMsg(UserIndex, "Estís demasiado lejos.", FontTypeNames.FONTTYPE_INFO)
122         ElseIf NpcList(.flags.TargetNPC).NPCtype <> eNPCType.Timbero Then
124             Call WriteChatOverHead(UserIndex, "No tengo ningún interés en apostar.", NpcList(.flags.TargetNPC).Char.CharIndex, vbWhite)
126         ElseIf Amount < 1 Then
128             Call WriteChatOverHead(UserIndex, "El mínimo de apuesta es 1 moneda.", NpcList(.flags.TargetNPC).Char.CharIndex, vbWhite)
130         ElseIf Amount > 10000 Then
132             Call WriteChatOverHead(UserIndex, "El máximo de apuesta es 10.000 monedas.", NpcList(.flags.TargetNPC).Char.CharIndex, vbWhite)
134         ElseIf .Stats.GLD < Amount Then
136             Call WriteChatOverHead(UserIndex, "No tienes esa cantidad.", NpcList(.flags.TargetNPC).Char.CharIndex, vbWhite)
            Else

138             If RandomNumber(1, 100) <= 45 Then
140                 .Stats.GLD = .Stats.GLD + Amount
142                 Call WriteChatOverHead(UserIndex, "¡Felicidades! Has ganado " & PonerPuntos(Amount) & " monedas de oro!", NpcList(.flags.TargetNPC).Char.CharIndex, vbWhite)
                
144                 Apuestas.Perdidas = Apuestas.Perdidas + Amount
146                 Call WriteVar(DatPath & "apuestas.dat", "Main", "Perdidas", CStr(Apuestas.Perdidas))
                Else
148                 .Stats.GLD = .Stats.GLD - Amount
150                 Call WriteChatOverHead(UserIndex, "Lo siento, has perdido " & PonerPuntos(Amount) & " monedas de oro.", NpcList(.flags.TargetNPC).Char.CharIndex, vbWhite)
                
152                 Apuestas.Ganancias = Apuestas.Ganancias + Amount
154                 Call WriteVar(DatPath & "apuestas.dat", "Main", "Ganancias", CStr(Apuestas.Ganancias))

                End If
            
156             Apuestas.Jugadas = Apuestas.Jugadas + 1
            
158             Call WriteVar(DatPath & "apuestas.dat", "Main", "Jugadas", CStr(Apuestas.Jugadas))
            
160             Call WriteUpdateGold(UserIndex)

            End If

        End With

        
        Exit Sub

HandleGamble_Err:
162     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleGamble", Erl)
164     Resume Next
        
End Sub

''
' Handles the "InquiryVote" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleInquiryVote(ByVal UserIndex As Integer)
        
        On Error GoTo HandleInquiryVote_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 2 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
104     With UserList(UserIndex)
            'Remove packet ID
106         Call .incomingData.ReadByte
        
            Dim opt As Byte
        
108         opt = .incomingData.ReadByte()
        
110         Call WriteConsoleMsg(UserIndex, ConsultaPopular.doVotar(UserIndex, opt), FontTypeNames.FONTTYPE_GUILD)

        End With

        
        Exit Sub

HandleInquiryVote_Err:
112     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleInquiryVote", Erl)
114     Resume Next
        
End Sub

''
' Handles the "BankExtractGold" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleBankExtractGold(ByVal UserIndex As Integer)
        
        On Error GoTo HandleBankExtractGold_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 5 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
104     With UserList(UserIndex)
            'Remove packet ID
106         Call .incomingData.ReadByte
        
            Dim Amount As Long
        
108         Amount = .incomingData.ReadLong()
        
            'Dead people can't leave a faction.. they can't talk...
110         If .flags.Muerto = 1 Then
112             Call WriteLocaleMsg(UserIndex, "77", FontTypeNames.FONTTYPE_INFO)
                'Call WriteConsoleMsg(UserIndex, "¡¡Estás muerto!!", FontTypeNames.FONTTYPE_INFO)
                Exit Sub

            End If
        
            'Validate target NPC
114         If .flags.TargetNPC = 0 Then
116             Call WriteConsoleMsg(UserIndex, "Primero tenés que seleccionar un personaje, haz click izquierdo sobre él.", FontTypeNames.FONTTYPE_INFO)
                Exit Sub

            End If
        
118         If NpcList(.flags.TargetNPC).NPCtype <> eNPCType.Banquero Then Exit Sub
        
120         If Distancia(.Pos, NpcList(.flags.TargetNPC).Pos) > 10 Then
122             Call WriteLocaleMsg(UserIndex, "8", FontTypeNames.FONTTYPE_INFO)
                'Call WriteConsoleMsg(UserIndex, "Estís demasiado lejos.", FontTypeNames.FONTTYPE_INFO)
                Exit Sub

            End If
        
124         If Amount > 0 And Amount <= .Stats.Banco Then
126             .Stats.Banco = .Stats.Banco - Amount
128             .Stats.GLD = .Stats.GLD + Amount
                'Call WriteChatOverHead(UserIndex, "Tenés " & .Stats.Banco & " monedas de oro en tu cuenta.", NpcList(.flags.TargetNPC).Char.CharIndex, vbWhite)

130             Call WriteUpdateGold(UserIndex)
132             Call WriteGoliathInit(UserIndex)
            Else
134             Call WriteChatOverHead(UserIndex, "No tenés esa cantidad.", NpcList(.flags.TargetNPC).Char.CharIndex, vbWhite)

            End If

        End With

        
        Exit Sub

HandleBankExtractGold_Err:
136     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleBankExtractGold", Erl)
138     Resume Next
        
End Sub

''
' Handles the "LeaveFaction" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleLeaveFaction(ByVal UserIndex As Integer)
        
        On Error GoTo HandleLeaveFaction_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     With UserList(UserIndex)
            'Remove packet ID
102         Call .incomingData.ReadByte
        
            'Dead people can't leave a faction.. they can't talk...
104         If .flags.Muerto = 1 Then
106             Call WriteLocaleMsg(UserIndex, "77", FontTypeNames.FONTTYPE_INFO)
                'Call WriteConsoleMsg(UserIndex, "¡¡Estás muerto!!", FontTypeNames.FONTTYPE_INFO)
                Exit Sub

            End If
        
108         If .Faccion.ArmadaReal = 0 And .Faccion.FuerzasCaos = 0 Then
110             If .Faccion.Status = 1 Then
112                 Call VolverCriminal(UserIndex)
114                 Call WriteConsoleMsg(UserIndex, "Ahora sos un criminal.", FontTypeNames.FONTTYPE_INFOIAO)
                    Exit Sub

                End If

            Else

                ' Call WriteConsoleMsg(UserIndex, "Ya sos un criminal.", FontTypeNames.FONTTYPE_INFOIAO)
                ' Exit Sub
            End If
        
            'Validate target NPC
116         If .flags.TargetNPC = 0 Then
118             If .Faccion.ArmadaReal = 1 Then
120                 Call WriteConsoleMsg(UserIndex, "Para salir del ejercito debes ir a visitar al rey.", FontTypeNames.FONTTYPE_INFOIAO)
                    Exit Sub
122             ElseIf .Faccion.FuerzasCaos = 1 Then
124                 Call WriteConsoleMsg(UserIndex, "Para salir de la legion debes ir a visitar al diablo.", FontTypeNames.FONTTYPE_INFOIAO)
                    Exit Sub

                End If

            End If
        
126         If .flags.TargetNPC = 0 Then Exit Sub
        
128         If NpcList(.flags.TargetNPC).NPCtype = eNPCType.Enlistador Then

                'Quit the Royal Army?
130             If .Faccion.ArmadaReal = 1 Then
132                 If NpcList(.flags.TargetNPC).flags.Faccion = 0 Then
134                     Call ExpulsarFaccionReal(UserIndex)
136                     Call WriteChatOverHead(UserIndex, "Serís bienvenido a las fuerzas imperiales si deseas regresar.", NpcList(.flags.TargetNPC).Char.CharIndex, vbWhite)
                        Exit Sub
                    Else
138                     Call WriteChatOverHead(UserIndex, "¡¡¡Sal de aquí bufón!!!", NpcList(.flags.TargetNPC).Char.CharIndex, vbWhite)
                   
                    End If

                    'Quit the Chaos Legion??
140             ElseIf .Faccion.FuerzasCaos = 1 Then

142                 If NpcList(.flags.TargetNPC).flags.Faccion = 1 Then
144                     Call ExpulsarFaccionCaos(UserIndex)
146                     Call WriteChatOverHead(UserIndex, "Ya volverís arrastrandote.", NpcList(.flags.TargetNPC).Char.CharIndex, vbWhite)
                    Else
148                     Call WriteChatOverHead(UserIndex, "Sal de aquí maldito criminal", NpcList(.flags.TargetNPC).Char.CharIndex, vbWhite)

                    End If

                Else
150                 Call WriteChatOverHead(UserIndex, "¡No perteneces a ninguna facción!", NpcList(.flags.TargetNPC).Char.CharIndex, vbWhite)

                End If

            End If
    
        End With

        
        Exit Sub

HandleLeaveFaction_Err:
152     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleLeaveFaction", Erl)
154     Resume Next
        
End Sub

''
' Handles the "BankDepositGold" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleBankDepositGold(ByVal UserIndex As Integer)
        
        On Error GoTo HandleBankDepositGold_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 5 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
104     With UserList(UserIndex)
            'Remove packet ID
106         Call .incomingData.ReadByte
        
            Dim Amount As Long
        
108         Amount = .incomingData.ReadLong()
        
            'Dead people can't leave a faction.. they can't talk...
110         If .flags.Muerto = 1 Then
112             Call WriteLocaleMsg(UserIndex, "77", FontTypeNames.FONTTYPE_INFO)
                'Call WriteConsoleMsg(UserIndex, "¡¡Estás muerto!!", FontTypeNames.FONTTYPE_INFO)
                Exit Sub

            End If
        
            'Validate target NPC
114         If .flags.TargetNPC = 0 Then
116             Call WriteConsoleMsg(UserIndex, "Primero tenés que seleccionar un personaje, haz click izquierdo sobre él.", FontTypeNames.FONTTYPE_INFO)
                Exit Sub

            End If
            
            If NpcList(.flags.TargetNPC).NPCtype <> eNPCType.Banquero Then Exit Sub
        
118         If Distancia(NpcList(.flags.TargetNPC).Pos, .Pos) > 10 Then
120             Call WriteLocaleMsg(UserIndex, "8", FontTypeNames.FONTTYPE_INFO)
                'Call WriteConsoleMsg(UserIndex, "Estís demasiado lejos.", FontTypeNames.FONTTYPE_INFO)
                Exit Sub

            End If
        
124         If Amount > 0 And Amount <= .Stats.GLD Then
126             .Stats.Banco = .Stats.Banco + Amount
128             .Stats.GLD = .Stats.GLD - Amount
                'Call WriteChatOverHead(UserIndex, "Tenés " & .Stats.Banco & " monedas de oro en tu cuenta.", NpcList(.flags.TargetNPC).Char.CharIndex, vbWhite)
            
130             Call WriteUpdateGold(UserIndex)
132             Call WriteGoliathInit(UserIndex)
            Else
134             Call WriteChatOverHead(UserIndex, "No tenés esa cantidad.", NpcList(.flags.TargetNPC).Char.CharIndex, vbWhite)

            End If

        End With

        
        Exit Sub

HandleBankDepositGold_Err:
136     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleBankDepositGold", Erl)
138     Resume Next
        
End Sub

''
' Handles the "Denounce" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleFinEvento(ByVal UserIndex As Integer)
        
        On Error GoTo HandleDenounce_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     With UserList(UserIndex)
            'Remove packet ID
102         Call .incomingData.ReadByte

104         If .flags.Privilegios And (PlayerType.user Or PlayerType.Consejero Or PlayerType.RoleMaster) Then Exit Sub
106         If EventoActivo Then
108             Call FinalizarEvento
            Else
110             Call WriteConsoleMsg(UserIndex, "No hay ningun evento activo.", FontTypeNames.FONTTYPE_New_Eventos)
        
            End If
        
        End With

        
        Exit Sub

HandleDenounce_Err:
112     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleDenounce", Erl)
114     Resume Next
        
End Sub ''
' Handles the "GuildMemberList" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleGuildMemberList(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            Dim guild       As String

            Dim memberCount As Integer

            Dim i           As Long

            Dim UserName    As String
        
110         guild = Buffer.ReadASCIIString()
        
112         If .flags.Privilegios And (PlayerType.Admin Or PlayerType.Dios) Then
114             If (InStrB(guild, "\") <> 0) Then
116                 guild = Replace(guild, "\", "")

                End If

118             If (InStrB(guild, "/") <> 0) Then
120                 guild = Replace(guild, "/", "")

                End If
            
122             If Not FileExist(App.Path & "\guilds\" & guild & "-members.mem") Then
124                 Call WriteConsoleMsg(UserIndex, "No existe el clan: " & guild, FontTypeNames.FONTTYPE_INFO)
                Else
126                 memberCount = val(GetVar(App.Path & "\Guilds\" & guild & "-Members" & ".mem", "INIT", "NroMembers"))
                
128                 For i = 1 To memberCount
130                     UserName = GetVar(App.Path & "\Guilds\" & guild & "-Members" & ".mem", "Members", "Member" & i)
                    
132                     Call WriteConsoleMsg(UserIndex, UserName & "<" & guild & ">", FontTypeNames.FONTTYPE_INFO)
134                 Next i

                End If

            End If
        
            'If we got here then packet is complete, copy data back to original queue
136         Call .incomingData.CopyBuffer(Buffer)

        End With
    
ErrHandler:

        Dim Error As Long

138     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
140     Set Buffer = Nothing
    
142     If Error <> 0 Then Err.raise Error

End Sub

''
' Handles the "GMMessage" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleGMMessage(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 01/08/07
        'Last Modification by: (liquid)
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            Dim message As String
        
110         message = Buffer.ReadASCIIString()
        
112         If Not .flags.Privilegios And PlayerType.user Then
114             Call LogGM(.name, "Mensaje a Gms:" & message)
        
116             If LenB(message) <> 0 Then
                    'Analize chat...
118                 Call Statistics.ParseChat(message)
            
120                 Call SendData(SendTarget.ToAdmins, 0, PrepareMessageConsoleMsg(.name & "> " & message, FontTypeNames.FONTTYPE_GMMSG))

                End If

            End If
        
            'If we got here then packet is complete, copy data back to original queue
122         Call .incomingData.CopyBuffer(Buffer)

        End With
    
ErrHandler:

        Dim Error As Long

124     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
126     Set Buffer = Nothing
    
128     If Error <> 0 Then Err.raise Error

End Sub

''
' Handles the "ShowName" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleShowName(ByVal UserIndex As Integer)
        
        On Error GoTo HandleShowName_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     With UserList(UserIndex)
            'Remove packet ID
102         Call .incomingData.ReadByte
        
104         If .flags.Privilegios And (PlayerType.Dios Or PlayerType.Admin Or PlayerType.RoleMaster) Then
106             .showName = Not .showName 'Show / Hide the name
            
108             Call RefreshCharStatus(UserIndex)

            End If

        End With

        
        Exit Sub

HandleShowName_Err:
110     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleShowName", Erl)
112     Resume Next
        
End Sub

''
' Handles the "OnlineRoyalArmy" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleOnlineRoyalArmy(ByVal UserIndex As Integer)
        
        On Error GoTo HandleOnlineRoyalArmy_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     With UserList(UserIndex)
            'Remove packet ID
102         .incomingData.ReadByte
        
104         If .flags.Privilegios And PlayerType.user Then Exit Sub
    
            Dim i    As Long

            Dim list As String

106         For i = 1 To LastUser

108             If UserList(i).ConnID <> -1 Then
110                 If UserList(i).Faccion.ArmadaReal = 1 Then
112                     If UserList(i).flags.Privilegios And (PlayerType.user Or PlayerType.Consejero Or PlayerType.SemiDios) Or .flags.Privilegios And (PlayerType.Dios Or PlayerType.Admin) Then
114                         list = list & UserList(i).name & ", "

                        End If

                    End If

                End If

116         Next i

        End With
    
118     If Len(list) > 0 Then
120         Call WriteConsoleMsg(UserIndex, "Armadas conectados: " & Left$(list, Len(list) - 2), FontTypeNames.FONTTYPE_INFO)
        Else
122         Call WriteConsoleMsg(UserIndex, "No hay Armadas conectados", FontTypeNames.FONTTYPE_INFO)

        End If

        
        Exit Sub

HandleOnlineRoyalArmy_Err:
124     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleOnlineRoyalArmy", Erl)
126     Resume Next
        
End Sub

''
' Handles the "OnlineChaosLegion" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleOnlineChaosLegion(ByVal UserIndex As Integer)
        
        On Error GoTo HandleOnlineChaosLegion_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     With UserList(UserIndex)
            'Remove packet ID
102         .incomingData.ReadByte
        
104         If .flags.Privilegios And PlayerType.user Then Exit Sub
    
            Dim i    As Long

            Dim list As String

106         For i = 1 To LastUser

108             If UserList(i).ConnID <> -1 Then
110                 If UserList(i).Faccion.FuerzasCaos = 1 Then
112                     If UserList(i).flags.Privilegios And (PlayerType.user Or PlayerType.Consejero Or PlayerType.SemiDios) Or .flags.Privilegios And (PlayerType.Dios Or PlayerType.Admin) Then
114                         list = list & UserList(i).name & ", "

                        End If

                    End If

                End If

116         Next i

        End With

118     If Len(list) > 0 Then
120         Call WriteConsoleMsg(UserIndex, "Caos conectados: " & Left$(list, Len(list) - 2), FontTypeNames.FONTTYPE_INFO)
        Else
122         Call WriteConsoleMsg(UserIndex, "No hay Caos conectados", FontTypeNames.FONTTYPE_INFO)

        End If

        
        Exit Sub

HandleOnlineChaosLegion_Err:
124     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleOnlineChaosLegion", Erl)
126     Resume Next
        
End Sub

''
' Handles the "GoNearby" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleGoNearby(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 01/10/07
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            Dim UserName As String
        
110         UserName = Buffer.ReadASCIIString()
        
            Dim tIndex As Integer

            Dim X      As Long

            Dim Y      As Long

            Dim i      As Long

            Dim found  As Boolean
        
112         tIndex = NameIndex(UserName)
        
            'Check the user has enough powers
114         If .flags.Privilegios And (PlayerType.Admin Or PlayerType.Dios Or PlayerType.SemiDios Or PlayerType.Consejero) Then

                'Si es dios o Admins no podemos salvo que nosotros tambiín lo seamos
116             If Not (EsDios(UserName) Or EsAdmin(UserName)) Or (.flags.Privilegios And (PlayerType.Dios Or PlayerType.Admin)) Then
118                 If tIndex <= 0 Then 'existe el usuario destino?
120                     Call WriteConsoleMsg(UserIndex, "Usuario offline.", FontTypeNames.FONTTYPE_INFO)
                    Else

122                     For i = 2 To 5 'esto for sirve ir cambiando la distancia destino
124                         For X = UserList(tIndex).Pos.X - i To UserList(tIndex).Pos.X + i
126                             For Y = UserList(tIndex).Pos.Y - i To UserList(tIndex).Pos.Y + i

128                                 If MapData(UserList(tIndex).Pos.Map, X, Y).UserIndex = 0 Then
130                                     If LegalPos(UserList(tIndex).Pos.Map, X, Y, True, True) Then
132                                         Call WarpUserChar(UserIndex, UserList(tIndex).Pos.Map, X, Y, True)
134                                         found = True
                                            Exit For

                                        End If

                                    End If

136                             Next Y
                            
138                             If found Then Exit For  ' Feo, pero hay que abortar 3 fors sin usar GoTo
140                         Next X
                        
142                         If found Then Exit For  ' Feo, pero hay que abortar 3 fors sin usar GoTo
144                     Next i
                    
                        'No space found??
146                     If Not found Then
148                         Call WriteConsoleMsg(UserIndex, "Todos los lugares estín ocupados.", FontTypeNames.FONTTYPE_INFO)

                        End If

                    End If

                End If

            End If
        
            'If we got here then packet is complete, copy data back to original queue
150         Call .incomingData.CopyBuffer(Buffer)

        End With
    
ErrHandler:

        Dim Error As Long

152     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
154     Set Buffer = Nothing
    
156     If Error <> 0 Then Err.raise Error

End Sub

''
' Handles the "Comment" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleComment(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            Dim comment As String

110         comment = Buffer.ReadASCIIString()
        
112         If Not .flags.Privilegios And PlayerType.user Then
114             Call LogGM(.name, "Comentario: " & comment)
116             Call WriteConsoleMsg(UserIndex, "Comentario salvado...", FontTypeNames.FONTTYPE_INFO)

            End If
        
            'If we got here then packet is complete, copy data back to original queue
118         Call .incomingData.CopyBuffer(Buffer)

        End With
    
ErrHandler:

        Dim Error As Long

120     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
122     Set Buffer = Nothing
    
124     If Error <> 0 Then Err.raise Error

End Sub

''
' Handles the "ServerTime" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleServerTime(ByVal UserIndex As Integer)
        
        On Error GoTo HandleServerTime_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 01/08/07
        'Last Modification by: (liquid)
        '***************************************************
100     With UserList(UserIndex)
            'Remove packet ID
102         Call .incomingData.ReadByte
    
104         If .flags.Privilegios And PlayerType.user Then Exit Sub
    
106         Call LogGM(.name, "Hora.")

        End With
    
108     Call modSendData.SendData(SendTarget.ToAll, 0, PrepareMessageConsoleMsg("Hora: " & Time & " " & Date, FontTypeNames.FONTTYPE_INFO))

        
        Exit Sub

HandleServerTime_Err:
110     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleServerTime", Erl)
112     Resume Next
        
End Sub

''
' Handles the "Where" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleWhere(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            Dim UserName As String

            Dim tUser    As Integer
        
110         UserName = Buffer.ReadASCIIString()
        
112         If Not .flags.Privilegios And PlayerType.user Then
114             tUser = NameIndex(UserName)

116             If tUser <= 0 Then
118                 Call WriteConsoleMsg(UserIndex, "Usuario offline.", FontTypeNames.FONTTYPE_INFO)
                Else

120                 If (UserList(tUser).flags.Privilegios And (PlayerType.user Or PlayerType.Consejero Or PlayerType.SemiDios)) <> 0 Or ((UserList(tUser).flags.Privilegios And (PlayerType.Dios Or PlayerType.Admin) <> 0) And (.flags.Privilegios And (PlayerType.Dios Or PlayerType.Admin)) <> 0) Then
122                     Call WriteConsoleMsg(UserIndex, "Ubicación  " & UserName & ": " & UserList(tUser).Pos.Map & ", " & UserList(tUser).Pos.X & ", " & UserList(tUser).Pos.Y & ".", FontTypeNames.FONTTYPE_INFO)
124                     Call LogGM(.name, "/Donde " & UserName)

                    End If

                End If

            End If
        
            'If we got here then packet is complete, copy data back to original queue
126         Call .incomingData.CopyBuffer(Buffer)

        End With
    
ErrHandler:

        Dim Error As Long

128     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
130     Set Buffer = Nothing
    
132     If Error <> 0 Then Err.raise Error

End Sub

''
' Handles the "CreaturesInMap" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleCreaturesInMap(ByVal UserIndex As Integer)
        
        On Error GoTo HandleCreaturesInMap_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 30/07/06
        'Pablo (ToxicWaste): modificaciones generales para simplificar la visualizaciín.
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
104     With UserList(UserIndex)
            'Remove packet ID
106         Call .incomingData.ReadByte
        
            Dim Map As Integer

            Dim i, j As Long

            Dim NPCcount1, NPCcount2 As Integer

            Dim NPCcant1() As Integer

            Dim NPCcant2() As Integer

            Dim List1()    As String

            Dim List2()    As String
        
108         Map = .incomingData.ReadInteger()
        
110         If .flags.Privilegios And PlayerType.user Then Exit Sub
        
112         If MapaValido(Map) Then

114             For i = 1 To LastNPC

                    'VB isn't lazzy, so we put more restrictive condition first to speed up the process
116                 If NpcList(i).Pos.Map = Map Then

                        'íesta vivo?
118                     If NpcList(i).flags.NPCActive And NpcList(i).Hostile = 1 And NpcList(i).Stats.Alineacion = 2 Then
120                         If NPCcount1 = 0 Then
122                             ReDim List1(0) As String
124                             ReDim NPCcant1(0) As Integer
126                             NPCcount1 = 1
128                             List1(0) = NpcList(i).name & ": (" & NpcList(i).Pos.X & "," & NpcList(i).Pos.Y & ")"
130                             NPCcant1(0) = 1
                            Else

132                             For j = 0 To NPCcount1 - 1

134                                 If Left$(List1(j), Len(NpcList(i).name)) = NpcList(i).name Then
136                                     List1(j) = List1(j) & ", (" & NpcList(i).Pos.X & "," & NpcList(i).Pos.Y & ")"
138                                     NPCcant1(j) = NPCcant1(j) + 1
                                        Exit For

                                    End If

140                             Next j

142                             If j = NPCcount1 Then
144                                 ReDim Preserve List1(0 To NPCcount1) As String
146                                 ReDim Preserve NPCcant1(0 To NPCcount1) As Integer
148                                 NPCcount1 = NPCcount1 + 1
150                                 List1(j) = NpcList(i).name & ": (" & NpcList(i).Pos.X & "," & NpcList(i).Pos.Y & ")"
152                                 NPCcant1(j) = 1

                                End If

                            End If

                        Else

154                         If NPCcount2 = 0 Then
156                             ReDim List2(0) As String
158                             ReDim NPCcant2(0) As Integer
160                             NPCcount2 = 1
162                             List2(0) = NpcList(i).name & ": (" & NpcList(i).Pos.X & "," & NpcList(i).Pos.Y & ")"
164                             NPCcant2(0) = 1
                            Else

166                             For j = 0 To NPCcount2 - 1

168                                 If Left$(List2(j), Len(NpcList(i).name)) = NpcList(i).name Then
170                                     List2(j) = List2(j) & ", (" & NpcList(i).Pos.X & "," & NpcList(i).Pos.Y & ")"
172                                     NPCcant2(j) = NPCcant2(j) + 1
                                        Exit For

                                    End If

174                             Next j

176                             If j = NPCcount2 Then
178                                 ReDim Preserve List2(0 To NPCcount2) As String
180                                 ReDim Preserve NPCcant2(0 To NPCcount2) As Integer
182                                 NPCcount2 = NPCcount2 + 1
184                                 List2(j) = NpcList(i).name & ": (" & NpcList(i).Pos.X & "," & NpcList(i).Pos.Y & ")"
186                                 NPCcant2(j) = 1

                                End If

                            End If

                        End If

                    End If

188             Next i
            
190             Call WriteConsoleMsg(UserIndex, "Npcs Hostiles en mapa: ", FontTypeNames.FONTTYPE_WARNING)

192             If NPCcount1 = 0 Then
194                 Call WriteConsoleMsg(UserIndex, "No hay NPCS Hostiles", FontTypeNames.FONTTYPE_INFO)
                Else

196                 For j = 0 To NPCcount1 - 1
198                     Call WriteConsoleMsg(UserIndex, NPCcant1(j) & " " & List1(j), FontTypeNames.FONTTYPE_INFO)
200                 Next j

                End If

202             Call WriteConsoleMsg(UserIndex, "Otros Npcs en mapa: ", FontTypeNames.FONTTYPE_WARNING)

204             If NPCcount2 = 0 Then
206                 Call WriteConsoleMsg(UserIndex, "No hay mís NPCS", FontTypeNames.FONTTYPE_INFO)
                Else

208                 For j = 0 To NPCcount2 - 1
210                     Call WriteConsoleMsg(UserIndex, NPCcant2(j) & " " & List2(j), FontTypeNames.FONTTYPE_INFO)
212                 Next j

                End If

214             Call LogGM(.name, "Numero enemigos en mapa " & Map)

            End If

        End With

        
        Exit Sub

HandleCreaturesInMap_Err:
216     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleCreaturesInMap", Erl)
218     Resume Next
        
End Sub

''
' Handles the "WarpMeToTarget" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleWarpMeToTarget(ByVal UserIndex As Integer)
        
        On Error GoTo HandleWarpMeToTarget_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     With UserList(UserIndex)
            'Remove packet ID
102         Call .incomingData.ReadByte
        
104         If .flags.Privilegios And PlayerType.user Then Exit Sub
        
106         Call WarpUserChar(UserIndex, .flags.TargetMap, .flags.TargetX, .flags.TargetY, True)
108         Call LogGM(.name, "/TELEPLOC a x:" & .flags.TargetX & " Y:" & .flags.TargetY & " Map:" & .Pos.Map)

        End With

        
        Exit Sub

HandleWarpMeToTarget_Err:
110     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleWarpMeToTarget", Erl)
112     Resume Next
        
End Sub

''
' Handles the "WarpChar" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleWarpChar(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 7 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue
106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            Dim UserName As String
            Dim Map      As Integer
            Dim X        As Byte
            Dim Y        As Byte
            Dim tUser    As Integer
        
110         UserName = Buffer.ReadASCIIString()
112         Map = Buffer.ReadInteger()
114         X = Buffer.ReadByte()
116         Y = Buffer.ReadByte()

            'If we got here then packet is complete, copy data back to original queue
118         Call .incomingData.CopyBuffer(Buffer)
            
120         If Not EsGM(UserIndex) Then Exit Sub
            
            '¿Para que te vas a transportar a la misma posicion?
122         If .Pos.Map = Map And .Pos.X = X And .Pos.Y = Y Then Exit Sub
            
124         If MapaValido(Map) And LenB(UserName) <> 0 Then

126             If UCase$(UserName) <> "YO" Then

128                 If Not .flags.Privilegios And PlayerType.Consejero Then
130                     tUser = NameIndex(UserName)
                    End If

                Else
132                 tUser = UserIndex

                End If
            
134             If tUser <= 0 Then
136                 Call WriteConsoleMsg(UserIndex, "Usuario offline.", FontTypeNames.FONTTYPE_INFO)

138             ElseIf InMapBounds(Map, X, Y) Then
140                 Call FindLegalPos(tUser, Map, X, Y)
142                 Call WarpUserChar(tUser, Map, X, Y, True)

144                 If tUser <> UserIndex Then
146                     Call LogGM(.name, "Transportó a " & UserList(tUser).name & " hacia " & "Mapa" & Map & " X:" & X & " Y:" & Y)
                    End If
                        
                End If

            End If

        End With
        
        Exit Sub
        
ErrHandler:

        Dim Error As Long
148         Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
150     Set Buffer = Nothing
    
152     If Error <> 0 Then Err.raise Error

End Sub

''
' Handles the "Silence" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleSilence(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            Dim UserName As String

            Dim tUser    As Integer
        
110         UserName = Buffer.ReadASCIIString()
        
112         If Not .flags.Privilegios And PlayerType.user Then
114             tUser = NameIndex(UserName)
        
116             If tUser <= 0 Then
118                 Call WriteConsoleMsg(UserIndex, "Usuario offline.", FontTypeNames.FONTTYPE_INFO)
                Else

120                 If UserList(tUser).flags.Silenciado = 0 Then
122                     UserList(tUser).flags.Silenciado = 1
124                     Call WriteConsoleMsg(UserIndex, "Usuario silenciado.", FontTypeNames.FONTTYPE_INFO)
126                     Call WriteShowMessageBox(tUser, "ESTIMADO USUARIO, ud ha sido silenciado por los administradores. Sus denuncias serán ignoradas por el servidor de aquí en mís. Utilice /GM para contactar un administrador.")
128                     Call LogGM(.name, "/silenciar " & UserList(tUser).name)
                
                        'Flush the other user's buffer
                    
                    Else
130                     UserList(tUser).flags.Silenciado = 0
132                     Call WriteConsoleMsg(UserIndex, "Usuario des silenciado.", FontTypeNames.FONTTYPE_INFO)
134                     Call LogGM(.name, "/DESsilenciar " & UserList(tUser).name)

                    End If

                End If

            End If
        
            'If we got here then packet is complete, copy data back to original queue
136         Call .incomingData.CopyBuffer(Buffer)

        End With
    
ErrHandler:

        Dim Error As Long

138     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
140     Set Buffer = Nothing
    
142     If Error <> 0 Then Err.raise Error

End Sub

''
' Handles the "SOSShowList" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleSOSShowList(ByVal UserIndex As Integer)
        
        On Error GoTo HandleSOSShowList_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     With UserList(UserIndex)
            'Remove packet ID
102         Call .incomingData.ReadByte
        
104         If .flags.Privilegios And PlayerType.user Then Exit Sub
106         Call WriteShowSOSForm(UserIndex)

        End With

        
        Exit Sub

HandleSOSShowList_Err:
108     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleSOSShowList", Erl)
110     Resume Next
        
End Sub

''
' Handles the "SOSRemove" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleSOSRemove(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            Dim UserName As String

110         UserName = Buffer.ReadASCIIString()
        
112         If Not .flags.Privilegios And PlayerType.user Then Call Ayuda.Quitar(UserName)
        
            'If we got here then packet is complete, copy data back to original queue
114         Call .incomingData.CopyBuffer(Buffer)

        End With
    
ErrHandler:

        Dim Error As Long

116     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
118     Set Buffer = Nothing
    
120     If Error <> 0 Then Err.raise Error

End Sub

''
' Handles the "GoToChar" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleGoToChar(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            Dim UserName As String

            Dim tUser    As Integer

            Dim X        As Byte

            Dim Y        As Byte
        
110         UserName = Buffer.ReadASCIIString()

            'If we got here then packet is complete, copy data back to original queue
112         Call .incomingData.CopyBuffer(Buffer)
        
114         If EsGM(UserIndex) Then

116             If LenB(UserName) <> 0 Then
118                 tUser = NameIndex(UserName)
                    
120                 If tUser <= 0 Then
122                     Call WriteConsoleMsg(UserIndex, "El jugador no está online.", FontTypeNames.FONTTYPE_INFO)
                        Exit Sub
                    End If
                Else
124                 tUser = .flags.TargetUser

126                 If tUser <= 0 Then Exit Sub
                End If
      
128             If CompararPrivilegios(tUser, UserIndex) > 0 Then
130                 Call WriteConsoleMsg(UserIndex, "Se le ha avisado a " & UserList(tUser).name & " que quieres ir a su posición.", FontTypeNames.FONTTYPE_INFO)
132                 Call WriteConsoleMsg(tUser, .name & " quiere transportarse a tu ubicación. Escribe /sum " & .name & " para traerlo.", FontTypeNames.FONTTYPE_INFO)
                    Exit Sub
                End If

134             X = UserList(tUser).Pos.X
136             Y = UserList(tUser).Pos.Y + 1

138             Call FindLegalPos(UserIndex, UserList(tUser).Pos.Map, X, Y)
                
140             Call WarpUserChar(UserIndex, UserList(tUser).Pos.Map, X, Y, True)
                    
142             If .flags.AdminInvisible = 0 Then
144                 Call WriteConsoleMsg(tUser, .name & " se ha trasportado hacia donde te encuentras.", FontTypeNames.FONTTYPE_INFO)
                End If
                
146             Call WriteConsoleMsg(UserIndex, "Te has transportado hacia " & UserList(tUser).name & ".", FontTypeNames.FONTTYPE_INFO)
                    
148             Call LogGM(.name, "/IRA " & UserName & " Mapa:" & UserList(tUser).Pos.Map & " X:" & UserList(tUser).Pos.X & " Y:" & UserList(tUser).Pos.Y)

            End If

        End With
    
ErrHandler:

        Dim Error As Long

150     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
152     Set Buffer = Nothing
    
154     If Error <> 0 Then Err.raise Error

End Sub

Private Sub HandleDesbuggear(ByVal UserIndex As Integer)

        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            Dim UserName As String, tUser As Integer, i As Long, Count As Long
        
110         UserName = Buffer.ReadASCIIString()
        
112         If EsGM(UserIndex) Then
114             If Len(UserName) > 0 Then
116                 tUser = NameIndex(UserName)
                
118                 If tUser > 0 Then
120                     Call WriteConsoleMsg(UserIndex, "El usuario debe estar offline.", FontTypeNames.FONTTYPE_INFO)
                    Else

                        Dim AccountId As Long, AccountOnline As Boolean
                    
122                     AccountId = GetAccountIDDatabase(UserName)
                    
124                     If AccountId >= 0 Then

126                         For i = 1 To LastUser

128                             If UserList(i).flags.UserLogged Then
130                                 If UserList(i).AccountId = AccountId Then
132                                     AccountOnline = True

                                    End If

134                                 Count = Count + 1

                                End If

136                         Next i
                        
138                         NumUsers = Count
140                         Call MostrarNumUsers
                        
142                         If AccountOnline Then
144                             Call WriteConsoleMsg(UserIndex, "Hay un usuario de la cuenta conectado. Se actualizaron solo los usuarios online.", FontTypeNames.FONTTYPE_INFO)
                            Else
146                             Call ResetLoggedDatabase(AccountId)
148                             Call WriteConsoleMsg(UserIndex, "Cuenta del personaje desbuggeada y usuarios online actualizados.", FontTypeNames.FONTTYPE_INFO)

                            End If
    
150                         Call LogGM(.name, "/DESBUGGEAR " & UserName)
                        Else
152                         Call WriteConsoleMsg(UserIndex, "El usuario no existe.", FontTypeNames.FONTTYPE_INFO)

                        End If

                    End If

                Else

154                 For i = 1 To LastUser

156                     If UserList(i).flags.UserLogged Then
158                         Count = Count + 1

                        End If

160                 Next i
                
162                 NumUsers = Count
164                 Call MostrarNumUsers
                
166                 Call WriteConsoleMsg(UserIndex, "Se actualizaron los usuarios online.", FontTypeNames.FONTTYPE_INFO)

                End If

            End If
        
            'If we got here then packet is complete, copy data back to original queue
168         Call .incomingData.CopyBuffer(Buffer)

        End With
    
ErrHandler:

        Dim Error As Long

170     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
172     Set Buffer = Nothing
    
174     If Error <> 0 Then Err.raise Error

End Sub

Private Sub HandleDarLlaveAUsuario(ByVal UserIndex As Integer)

        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 5 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub
        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            Dim UserName As String, tUser As Integer, Llave As Integer
        
110         UserName = Buffer.ReadASCIIString()
112         Llave = Buffer.ReadInteger()
        
            ' Solo dios o admin
114         If .flags.Privilegios And (PlayerType.Dios Or PlayerType.Admin) Then
                ' Me aseguro que esté activada la db
116             If Not Database_Enabled Then
118                 Call WriteConsoleMsg(UserIndex, "Es necesario que el juego esté corriendo con base de datos.", FontTypeNames.FONTTYPE_INFO)
            
                ' Me aseguro que el objeto sea una llave válida
120             ElseIf Llave < 1 Or Llave > NumObjDatas Then
122                 Call WriteConsoleMsg(UserIndex, "El número ingresado no es el de una llave válida.", FontTypeNames.FONTTYPE_INFO)
124             ElseIf ObjData(Llave).OBJType <> eOBJType.otLlaves Then ' vb6 no tiene short-circuit evaluation :(
126                 Call WriteConsoleMsg(UserIndex, "El número ingresado no es el de una llave válida.", FontTypeNames.FONTTYPE_INFO)
                Else
128                 tUser = NameIndex(UserName)
                
130                 If tUser > 0 Then
                        ' Es un user online, guardamos la llave en la db
132                     If DarLlaveAUsuarioDatabase(UserName, Llave) Then
                            ' Actualizamos su llavero
134                         If MeterLlaveEnLLavero(tUser, Llave) Then
136                             Call WriteConsoleMsg(UserIndex, "Llave número " & Llave & " entregada a " & UserList(tUser).name & ".", FontTypeNames.FONTTYPE_INFO)
                            Else
138                             Call WriteConsoleMsg(UserIndex, "No se pudo entregar la llave. El usuario no tiene más espacio en su llavero.", FontTypeNames.FONTTYPE_INFO)
                            End If
                        Else
140                         Call WriteConsoleMsg(UserIndex, "No se pudo entregar la llave. Asegúrese de que la llave esté disponible.", FontTypeNames.FONTTYPE_INFO)
                        End If
                    Else
                        ' No es un usuario online, nos fijamos si es un email
142                     If CheckMailString(UserName) Then
                            ' Es un email, intentamos guardarlo en la db
144                         If DarLlaveACuentaDatabase(UserName, Llave) Then
146                             Call WriteConsoleMsg(UserIndex, "Llave número " & Llave & " entregada a " & LCase$(UserName) & ".", FontTypeNames.FONTTYPE_INFO)
                            Else
148                             Call WriteConsoleMsg(UserIndex, "No se pudo entregar la llave. Asegúrese de que la llave esté disponible y que el email sea correcto.", FontTypeNames.FONTTYPE_INFO)
                            End If
                        Else
150                         Call WriteConsoleMsg(UserIndex, "El usuario no está online. Ingrese el email de la cuenta para otorgar la llave offline.", FontTypeNames.FONTTYPE_INFO)
                        End If
    
                    End If
                
152                 Call LogGM(.name, "/DARLLAVE " & UserName & " " & Llave)
                End If
            End If
        
            'If we got here then packet is complete, copy data back to original queue
154         Call .incomingData.CopyBuffer(Buffer)

        End With
    
ErrHandler:

        Dim Error As Long

156     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
158     Set Buffer = Nothing
    
160     If Error <> 0 Then Err.raise Error

End Sub

Private Sub HandleSacarLlave(ByVal UserIndex As Integer)
        
        On Error GoTo HandleSacarLlave_Err
    
        

        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub
        End If

104     With UserList(UserIndex)

            'Remove packet ID
106         Call .incomingData.ReadByte
        
            Dim Llave As Integer
        
108         Llave = .incomingData.ReadInteger()
        
            ' Solo dios o admin
110         If .flags.Privilegios And (PlayerType.Dios Or PlayerType.Admin) Then
                ' Me aseguro que esté activada la db
112             If Not Database_Enabled Then
114                 Call WriteConsoleMsg(UserIndex, "Es necesario que el juego esté corriendo con base de datos.", FontTypeNames.FONTTYPE_INFO)

                Else
                    ' Intento borrarla de la db
116                 If SacarLlaveDatabase(Llave) Then
118                     Call WriteConsoleMsg(UserIndex, "La llave " & Llave & " fue removida.", FontTypeNames.FONTTYPE_INFO)
                    Else
120                     Call WriteConsoleMsg(UserIndex, "No se pudo sacar la llave. Asegúrese de que esté en uso.", FontTypeNames.FONTTYPE_INFO)
                    End If

122                 Call LogGM(.name, "/SACARLLAVE " & Llave)
                End If
            End If

        End With

        
        Exit Sub

HandleSacarLlave_Err:
124     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleSacarLlave", Erl)

        
End Sub

Private Sub HandleVerLlaves(ByVal UserIndex As Integer)
        
        On Error GoTo HandleVerLlaves_Err
    
        

100     With UserList(UserIndex)
    
102         Call .incomingData.ReadByte

            ' Sólo GMs
104         If Not (.flags.Privilegios And PlayerType.user) Then
                ' Me aseguro que esté activada la db
106             If Not Database_Enabled Then
108                 Call WriteConsoleMsg(UserIndex, "Es necesario que el juego esté corriendo con base de datos.", FontTypeNames.FONTTYPE_INFO)
                    Exit Sub
                End If
            
                ' Leo y muestro todas las llaves usadas
110             Call VerLlavesDatabase(UserIndex)
            End If
                
        End With

        
        Exit Sub

HandleVerLlaves_Err:
112     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleVerLlaves", Erl)

        
End Sub

Private Sub HandleUseKey(ByVal UserIndex As Integer)
        
        On Error GoTo HandleUseKey_Err
    
        

100     If UserList(UserIndex).incomingData.Length < 2 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub
        End If

104     With UserList(UserIndex)
    
106         Call .incomingData.ReadByte
        
            Dim slot As Byte
108         slot = .incomingData.ReadByte

110         Call UsarLlave(UserIndex, slot)
                
        End With

        
        Exit Sub

HandleUseKey_Err:
112     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleUseKey", Erl)

        
End Sub

''
' Handles the "Invisible" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleInvisible(ByVal UserIndex As Integer)
        
        On Error GoTo HandleInvisible_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     With UserList(UserIndex)
            'Remove packet ID
102         Call .incomingData.ReadByte
        
104         If .flags.Privilegios And PlayerType.user Then Exit Sub
        
106         Call DoAdminInvisible(UserIndex)

        End With

        
        Exit Sub

HandleInvisible_Err:
108     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleInvisible", Erl)
110     Resume Next
        
End Sub

''
' Handles the "GMPanel" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleGMPanel(ByVal UserIndex As Integer)
        
        On Error GoTo HandleGMPanel_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     With UserList(UserIndex)
            'Remove packet ID
102         Call .incomingData.ReadByte
        
104         If .flags.Privilegios And PlayerType.user Then Exit Sub
        
106         Call WriteShowGMPanelForm(UserIndex)

        End With

        
        Exit Sub

HandleGMPanel_Err:
108     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleGMPanel", Erl)
110     Resume Next
        
End Sub

''
' Handles the "GMPanel" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleRequestUserList(ByVal UserIndex As Integer)
        
        On Error GoTo HandleRequestUserList_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 01/09/07
        'Last modified by: Lucas Tavolaro Ortiz (Tavo)
        'I haven`t found a solution to split, so i make an array of names
        '***************************************************
        Dim i       As Long

        Dim names() As String

        Dim Count   As Long
    
100     With UserList(UserIndex)
            'Remove packet ID
102         Call .incomingData.ReadByte
        
104         If .flags.Privilegios And (PlayerType.user Or PlayerType.RoleMaster) Then Exit Sub
        
106         ReDim names(1 To LastUser) As String
108         Count = 1
        
110         For i = 1 To LastUser

112             If (LenB(UserList(i).name) <> 0) Then
                
114                 names(Count) = UserList(i).name
116                 Count = Count + 1
 
                End If

118         Next i
        
120         If Count > 1 Then Call WriteUserNameList(UserIndex, names(), Count - 1)

        End With

        
        Exit Sub

HandleRequestUserList_Err:
122     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleRequestUserList", Erl)
124     Resume Next
        
End Sub

''
' Handles the "Working" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleWorking(ByVal UserIndex As Integer)
        
        On Error GoTo HandleWorking_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
        Dim i     As Long

        Dim Users As String
    
100     With UserList(UserIndex)
            'Remove packet ID
102         Call .incomingData.ReadByte
        
104         If .flags.Privilegios And (PlayerType.user Or PlayerType.RoleMaster) Then Exit Sub
        
106         For i = 1 To LastUser

108             If UserList(i).flags.UserLogged And UserList(i).Counters.Trabajando > 0 Then
110                 Users = Users & ", " & UserList(i).name
                
                    ' Display the user being checked by the centinel
112                 If modCentinela.Centinela.RevisandoUserIndex = i Then Users = Users & " (*)"

                End If

114         Next i
        
116         If LenB(Users) <> 0 Then
118             Users = Right$(Users, Len(Users) - 2)
120             Call WriteConsoleMsg(UserIndex, "Usuarios trabajando: " & Users, FontTypeNames.FONTTYPE_INFO)
            Else
122             Call WriteConsoleMsg(UserIndex, "No hay usuarios trabajando", FontTypeNames.FONTTYPE_INFO)

            End If

        End With

        
        Exit Sub

HandleWorking_Err:
124     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleWorking", Erl)
126     Resume Next
        
End Sub

''
' Handles the "Hiding" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleHiding(ByVal UserIndex As Integer)
        
        On Error GoTo HandleHiding_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
        Dim i     As Long

        Dim Users As String
    
100     With UserList(UserIndex)
            'Remove packet ID
102         Call .incomingData.ReadByte
        
104         If .flags.Privilegios And (PlayerType.user Or PlayerType.RoleMaster) Then Exit Sub
        
106         For i = 1 To LastUser

108             If (LenB(UserList(i).name) <> 0) And UserList(i).Counters.Ocultando > 0 Then
110                 Users = Users & UserList(i).name & ", "

                End If

112         Next i
        
114         If LenB(Users) <> 0 Then
116             Users = Left$(Users, Len(Users) - 2)
118             Call WriteConsoleMsg(UserIndex, "Usuarios ocultandose: " & Users, FontTypeNames.FONTTYPE_INFO)
            Else
120             Call WriteConsoleMsg(UserIndex, "No hay usuarios ocultandose", FontTypeNames.FONTTYPE_INFO)

            End If

        End With

        
        Exit Sub

HandleHiding_Err:
122     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleHiding", Erl)
124     Resume Next
        
End Sub

''
' Handles the "Jail" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleJail(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 6 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            Dim UserName As String

            Dim Reason   As String

            Dim jailTime As Byte

            Dim Count    As Byte

            Dim tUser    As Integer
        
110         UserName = Buffer.ReadASCIIString()
112         Reason = Buffer.ReadASCIIString()
114         jailTime = Buffer.ReadByte()
        
116         If InStr(1, UserName, "+") Then
118             UserName = Replace(UserName, "+", " ")

            End If
        
            '/carcel nick@motivo@<tiempo>
120         If (Not .flags.Privilegios And PlayerType.RoleMaster) <> 0 And (Not .flags.Privilegios And PlayerType.user) <> 0 Then
122             If LenB(UserName) = 0 Or LenB(Reason) = 0 Then
124                 Call WriteConsoleMsg(UserIndex, "Utilice /carcel nick@motivo@tiempo", FontTypeNames.FONTTYPE_INFO)
                Else
126                 tUser = NameIndex(UserName)
                
128                 If tUser <= 0 Then
130                     Call WriteConsoleMsg(UserIndex, "El usuario no está online.", FontTypeNames.FONTTYPE_INFO)
                    Else

132                     If EsGM(tUser) Then
134                         Call WriteConsoleMsg(UserIndex, "No podés encarcelar a administradores.", FontTypeNames.FONTTYPE_INFO)
                    
136                     ElseIf jailTime > 60 Then
138                         Call WriteConsoleMsg(UserIndex, "No podés encarcelar por más de 60 minutos.", FontTypeNames.FONTTYPE_INFO)
                        Else

140                         If (InStrB(UserName, "\") <> 0) Then
142                             UserName = Replace(UserName, "\", "")

                            End If

144                         If (InStrB(UserName, "/") <> 0) Then
146                             UserName = Replace(UserName, "/", "")

                            End If
                        
148                         If PersonajeExiste(UserName) Then
150                             If Database_Enabled Then
152                                 Call SavePenaDatabase(UserName, .name & ": CARCEL " & jailTime & "m, MOTIVO: " & Reason & " " & Date & " " & Time)
                                Else
154                                 Count = val(GetVar(CharPath & UserName & ".chr", "PENAS", "Cant"))
156                                 Call WriteVar(CharPath & UserName & ".chr", "PENAS", "Cant", Count + 1)
158                                 Call WriteVar(CharPath & UserName & ".chr", "PENAS", "P" & Count + 1, LCase$(.name) & ": CARCEL " & jailTime & "m, MOTIVO: " & LCase$(Reason) & " " & Date & " " & Time)

                                End If

                            End If
                        
160                         Call Encarcelar(tUser, jailTime, .name)
162                         Call LogGM(.name, " encarceló a " & UserName)

                        End If

                    End If

                End If

            End If
        
            'If we got here then packet is complete, copy data back to original queue
164         Call .incomingData.CopyBuffer(Buffer)

        End With
    
ErrHandler:

        Dim Error As Long

166     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
168     Set Buffer = Nothing
    
170     If Error <> 0 Then Err.raise Error

End Sub

''
' Handles the "KillNPC" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleKillNPC(ByVal UserIndex As Integer)
        
        On Error GoTo HandleKillNPC_Err

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        '
        '***************************************************
100     With UserList(UserIndex)
    
            'Remove packet ID
102         Call .incomingData.ReadByte
        
104         If .flags.Privilegios And PlayerType.user Then Exit Sub

            'Si estamos en el mapa pretoriano...
106         If .Pos.Map = MAPA_PRETORIANO Then

                '... solo los Dioses y Administradores pueden usar este comando en el mapa pretoriano.
108             If .flags.Privilegios And (PlayerType.Admin Or PlayerType.Dios) = 0 Then
                
110                 Call WriteConsoleMsg(UserIndex, "Solo los Administradores y Dioses pueden usar este comando en el mapa pretoriano.", FontTypeNames.FONTTYPE_INFO)
                    Exit Sub

                End If

            End If
        
112         Dim tNPC As Integer: tNPC = .flags.TargetNPC
        
114         If tNPC > 0 Then

116             Call WriteConsoleMsg(UserIndex, "RMatas (con posible respawn) a: " & NpcList(tNPC).name, FontTypeNames.FONTTYPE_INFO)
            
118             Dim auxNPC As npc: auxNPC = NpcList(tNPC)
            
120             Call QuitarNPC(tNPC)
122             Call ReSpawnNpc(auxNPC)
            
            Else
124             Call WriteConsoleMsg(UserIndex, "Debes hacer click sobre el NPC antes", FontTypeNames.FONTTYPE_INFO)

            End If

        End With
        
        Exit Sub

HandleKillNPC_Err:
126     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleKillNPC", Erl)

128     Resume Next
        
End Sub

''
' Handles the "WarnUser" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleWarnUser(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Nicolas Matias Gonzalez (NIGO)
        'Last Modification: 12/26/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 5 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode

            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            Dim UserName As String
            Dim Reason   As String

110         UserName = Buffer.ReadASCIIString()
112         Reason = Buffer.ReadASCIIString()
            
            'If we got here then packet is complete, copy data back to original queue
114         Call .incomingData.CopyBuffer(Buffer)
        
            ' Tenes que ser Admin, Dios o Semi-Dios
116         If (.flags.Privilegios And (PlayerType.Admin Or PlayerType.Dios Or PlayerType.SemiDios)) = 0 Then Exit Sub
        
            ' Me fijo que esten todos los parametros.
118         If Len(UserName) = 0 Or Len(Trim$(Reason)) = 0 Then
120             Call WriteConsoleMsg(UserIndex, "Formato inválido. /advertencia nick@motivo", FontTypeNames.FONTTYPE_INFO)
                Exit Sub

            End If
        
122         Dim tUser As Integer: tUser = NameIndex(UserName)
        
            ' No advertir a GM's
124         If EsGM(tUser) Then
126             Call WriteConsoleMsg(UserIndex, "No podes advertir a Game Masters.", FontTypeNames.FONTTYPE_INFO)
                Exit Sub

            End If
        
128         If (InStrB(UserName, "\") <> 0) Then
130             UserName = Replace(UserName, "\", "")

            End If

132         If (InStrB(UserName, "/") <> 0) Then
134             UserName = Replace(UserName, "/", "")

            End If
                    
136         If PersonajeExiste(UserName) Then

138             If Database_Enabled Then
140                 Call SaveWarnDatabase(UserName, "ADVERTENCIA: " & Reason & " " & Date & " " & Time, .name)
 
                Else
                
                    Dim Count As Integer
142                     Count = val(GetVar(CharPath & UserName & ".chr", "PENAS", "Cant"))
                
144                 Call WriteVar(CharPath & UserName & ".chr", "PENAS", "Cant", Count + 1)
146                 Call WriteVar(CharPath & UserName & ".chr", "PENAS", "P" & Count + 1, LCase$(.name) & ": ADVERTENCIA por: " & LCase$(Reason) & " " & Date & " " & Time)

                End If
            
                ' Para el GM
148             Call WriteConsoleMsg(UserIndex, "Has advertido a " & UserName, FontTypeNames.FONTTYPE_CENTINELA)
150             Call SendData(SendTarget.ToAdmins, 0, PrepareMessageConsoleMsg(.name & " ha advertido a " & UserName & " por " & Reason, FontTypeNames.FONTTYPE_GM))
152             Call LogGM(.name, " advirtio a " & UserName & " por " & Reason)

                ' Si esta online...
154             If tUser >= 0 Then
                    ' Actualizo el valor en la memoria.
156                 UserList(tUser).Stats.Advertencias = UserList(tUser).Stats.Advertencias + 1
                
                    ' Para el usuario advertido
158                 Call WriteConsoleMsg(tUser, "Has sido advertido por " & Reason, FontTypeNames.FONTTYPE_CENTINELA)
160                 Call WriteConsoleMsg(tUser, "Tenés " & UserList(tUser).Stats.Advertencias & " advertencias actualmente.", FontTypeNames.FONTTYPE_CENTINELA)
                
                    ' Cuando acumulas cierta cantidad de advertencias...
162                 Select Case UserList(tUser).Stats.Advertencias
                
                        Case 3
164                         Call Encarcelar(tUser, 30, "Servidor")
                    
166                     Case 5
                            ' TODO: Banear PJ alv.
                    
                    End Select
                
                End If

            End If
        
        End With
    
        Exit Sub
    
ErrHandler:

        Dim Error As Long
168         Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
170     Set Buffer = Nothing
    
172     If Error <> 0 Then Err.raise Error

End Sub

Private Sub HandleMensajeUser(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Ladder
        'Last Modification: 04/jul/2014
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 6 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadInteger
        
            Dim UserName As String

            Dim Mensaje  As String

            Dim privs    As PlayerType

            Dim Count    As Byte

            Dim tUser    As Integer
        
110         UserName = Buffer.ReadASCIIString()
112         Mensaje = Buffer.ReadASCIIString()
        
114         tUser = NameIndex(UserName)
        
116         If (Not .flags.Privilegios And PlayerType.RoleMaster) <> 0 And (Not .flags.Privilegios And PlayerType.user) <> 0 Then
118             If LenB(UserName) = 0 Or LenB(Mensaje) = 0 Then
120                 Call WriteConsoleMsg(UserIndex, "Utilice /MENSAJEINFORMACION nick@mensaje", FontTypeNames.FONTTYPE_INFO)
                Else
122                 privs = UserDarPrivilegioLevel(UserName)
                
124                 If (InStrB(UserName, "\") <> 0) Then
126                     UserName = Replace(UserName, "\", "")

                    End If

128                 If (InStrB(UserName, "/") <> 0) Then
130                     UserName = Replace(UserName, "/", "")

                    End If
                    
132                 AddCorreo UserIndex, UserName, LCase$(Mensaje), 0, 0
                    
                    ' If tUser <= 0 Then
          
                    ' If FileExist(CharPath & UserName & ".chr", vbNormal) Then
                    '   Call WriteVar(CharPath & UserName & ".chr", "INIT", "MENSAJEINFORMACION", .name & " te ha dejado un mensaje: " & Mensaje)
                    '   Call WriteConsoleMsg(UserIndex, "El usuario estaba offline. El mensaje fue grabado en el charfile.", FontTypeNames.FONTTYPE_INFO)
                    '   Call LogGM(.name, " envio el siguiente mensaje ha " & UCase$(UserName) & ": " & LCase$(Mensaje))
                    '  Else
                    '  Call WriteConsoleMsg(UserIndex, "El usuario no existe.", FontTypeNames.FONTTYPE_INFO)
                    ' End If
                    ' Else
                    ' Call WriteConsoleMsg(tUser, .name & " te ha dejado un mensaje: " & Mensaje, FontTypeNames.FONTTYPE_CENTINELA)
                    ' Call WriteConsoleMsg(UserIndex, "El mensaje fue enviado.", FontTypeNames.FONTTYPE_INFO)
                    ' End If
                End If

            End If
        
            'If we got here then packet is complete, copy data back to original queue
134         Call .incomingData.CopyBuffer(Buffer)

        End With
    
ErrHandler:

        Dim Error As Long

136     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
138     Set Buffer = Nothing
    
140     If Error <> 0 Then Err.raise Error

End Sub

Private Sub HandleTraerBoveda(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Ladder
        'Last Modification: 04/jul/2014
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 2 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadInteger
110         Call UpdateUserHechizos(True, UserIndex, 0)
       
112         Call UpdateUserInv(True, UserIndex, 0)
            'If we got here then packet is complete, copy data back to original queue
114         Call .incomingData.CopyBuffer(Buffer)

        End With
    
ErrHandler:

        Dim Error As Long

116     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
118     Set Buffer = Nothing
    
120     If Error <> 0 Then Err.raise Error

End Sub

Private Sub HandleEditChar(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Nicolas Matias Gonzalez (NIGO)
        'Last Modification: 12/28/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 8 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            Dim UserName      As String
            Dim tUser         As Integer

            Dim opcion        As Byte
            Dim Arg1          As String
            Dim Arg2          As String

            Dim valido        As Boolean

            Dim LoopC         As Byte
            Dim commandString As String
            Dim n             As Byte
            Dim tmpLong       As Long
        
110         UserName = Replace(Buffer.ReadASCIIString(), "+", " ")
        
112         If UCase$(UserName) = "YO" Then
114             tUser = UserIndex
            
            Else
116             tUser = NameIndex(UserName)

            End If
        
118         opcion = Buffer.ReadByte()
120         Arg1 = Buffer.ReadASCIIString()
122         Arg2 = Buffer.ReadASCIIString()
        
            'If we got here then packet is complete, copy data back to original queue
124         Call .incomingData.CopyBuffer(Buffer)
        
            ' Si no es GM, no hacemos nada.
126         If Not EsGM(UserIndex) Then Exit Sub
        
            ' Si NO sos Dios o Admin,
128         If (.flags.Privilegios And PlayerType.Admin) = 0 Then

                ' Si te editas a vos mismo esta bien ;)
130             If UserIndex <> tUser Then Exit Sub
            
            End If
        
132         Select Case opcion

                Case eEditOptions.eo_Gold

134                 If tUser <= 0 Then
136                     Call WriteConsoleMsg(UserIndex, "Usuario offline: " & UserName, FontTypeNames.FONTTYPE_INFO)
                    Else
138                     UserList(tUser).Stats.GLD = val(Arg1)
140                     Call WriteUpdateGold(tUser)

                    End If
                
142             Case eEditOptions.eo_Experience

144                 If tUser <= 0 Then
146                     Call WriteConsoleMsg(UserIndex, "Usuario offline: " & UserName, FontTypeNames.FONTTYPE_INFO)
                    Else

148                     If UserList(tUser).Stats.ELV < STAT_MAXELV Then
150                         UserList(tUser).Stats.Exp = UserList(tUser).Stats.Exp + val(Arg1)
152                         Call CheckUserLevel(tUser)
154                         Call WriteUpdateExp(tUser)
                            
                        Else
156                         Call WriteConsoleMsg(UserIndex, "El usuario es nivel máximo.", FontTypeNames.FONTTYPE_INFO)

                        End If

                    End If
                
158             Case eEditOptions.eo_Body

160                 If tUser <= 0 Then
                    
162                     If Database_Enabled Then
164                         Call SaveUserBodyDatabase(UserName, val(Arg1))
                        Else
166                         Call WriteVar(CharPath & UserName & ".chr", "INIT", "Body", Arg1)

                        End If

168                     Call WriteConsoleMsg(UserIndex, "Usuario Offline Alterado: " & UserName, FontTypeNames.FONTTYPE_INFO)
                    Else
170                     Call ChangeUserChar(tUser, val(Arg1), UserList(tUser).Char.Head, UserList(tUser).Char.Heading, UserList(tUser).Char.WeaponAnim, UserList(tUser).Char.ShieldAnim, UserList(tUser).Char.CascoAnim)

                    End If
                   
172             Case eEditOptions.eo_Arma
                
174                 If tUser <= 0 Then
                       
176                     If Database_Enabled Then
                           'Call SaveUserBodyDatabase(UserName, val(Arg1))
                           Else
                            'Call WriteVar(CharPath & UserName & ".chr", "INIT", "Arma", Arg1)
                    
                           End If
                    
178                         Call WriteConsoleMsg(UserIndex, "Usuario Offline Alterado: " & UserName, FontTypeNames.FONTTYPE_INFO)
                        Else
180                         Call ChangeUserChar(tUser, UserList(tUser).Char.Body, UserList(tUser).Char.Head, UserList(tUser).Char.Heading, val(Arg1), UserList(tUser).Char.ShieldAnim, UserList(tUser).Char.CascoAnim)
                    
                       End If
                       
182             Case eEditOptions.eo_Escudo
                
184                 If tUser <= 0 Then
                       
186                     If Database_Enabled Then
                           'Call SaveUserBodyDatabase(UserName, val(Arg1))
                           Else
                            'Call WriteVar(CharPath & UserName & ".chr", "INIT", "Arma", Arg1)
                    
                           End If
                    
188                         Call WriteConsoleMsg(UserIndex, "Usuario Offline Alterado: " & UserName, FontTypeNames.FONTTYPE_INFO)
                        Else
190                         Call ChangeUserChar(tUser, UserList(tUser).Char.Body, UserList(tUser).Char.Head, UserList(tUser).Char.Heading, UserList(tUser).Char.WeaponAnim, val(Arg1), UserList(tUser).Char.CascoAnim)
                    
                       End If
                       
192             Case eEditOptions.eo_Casco
                
194                 If tUser <= 0 Then
                       
196                     If Database_Enabled Then
                           'Call SaveUserBodyDatabase(UserName, val(Arg1))
                           Else
                            'Call WriteVar(CharPath & UserName & ".chr", "INIT", "Arma", Arg1)
                    
                           End If
                    
198                         Call WriteConsoleMsg(UserIndex, "Usuario Offline Alterado: " & UserName, FontTypeNames.FONTTYPE_INFO)
                        Else
200                         Call ChangeUserChar(tUser, UserList(tUser).Char.Body, UserList(tUser).Char.Head, UserList(tUser).Char.Heading, UserList(tUser).Char.WeaponAnim, UserList(tUser).Char.ShieldAnim, val(Arg1))
                    
                       End If
                       
202             Case eEditOptions.eo_Particula
                
204                 If tUser <= 0 Then
                       
206                     If Database_Enabled Then
                           'Call SaveUserBodyDatabase(UserName, val(Arg1))
                           Else
                            'Call WriteVar(CharPath & UserName & ".chr", "INIT", "Arma", Arg1)
                    
                           End If
                    
208                         Call WriteConsoleMsg(UserIndex, "Usuario Offline Alterado: " & UserName, FontTypeNames.FONTTYPE_INFO)
                        Else
                            'Call ChangeUserChar(tUser, UserList(tUser).Char.Body, UserList(tUser).Char.Head, UserList(tUser).Char.Heading, UserList(tUser).Char.WeaponAnim, UserList(tUser).Char.ShieldAnim, val(Arg1))
210                         Call SendData(SendTarget.ToPCArea, UserIndex, PrepareMessageParticleFX(.Char.CharIndex, val(Arg1), 9999, False))
212                         .Char.ParticulaFx = val(Arg1)
214                         .Char.loops = 9999
                       End If
                       
                       
                
216             Case eEditOptions.eo_Head

218                 If tUser <= 0 Then
                    
220                     If Database_Enabled Then
222                         Call SaveUserHeadDatabase(UserName, val(Arg1))
                        Else
224                         Call WriteVar(CharPath & UserName & ".chr", "INIT", "Head", Arg1)

                        End If

226                     Call WriteConsoleMsg(UserIndex, "Usuario Offline Alterado: " & UserName, FontTypeNames.FONTTYPE_INFO)
                    Else
228                     Call ChangeUserChar(tUser, UserList(tUser).Char.Body, val(Arg1), UserList(tUser).Char.Heading, UserList(tUser).Char.WeaponAnim, UserList(tUser).Char.ShieldAnim, UserList(tUser).Char.CascoAnim)

                    End If
                
230             Case eEditOptions.eo_CriminalsKilled

232                 If tUser <= 0 Then
234                     Call WriteConsoleMsg(UserIndex, "Usuario offline: " & UserName, FontTypeNames.FONTTYPE_INFO)
                    Else

236                     If val(Arg1) > MAXUSERMATADOS Then
238                         UserList(tUser).Faccion.CriminalesMatados = MAXUSERMATADOS
                        Else
240                         UserList(tUser).Faccion.CriminalesMatados = val(Arg1)

                        End If

                    End If
                
242             Case eEditOptions.eo_CiticensKilled

244                 If tUser <= 0 Then
246                     Call WriteConsoleMsg(UserIndex, "Usuario offline: " & UserName, FontTypeNames.FONTTYPE_INFO)
                    Else

248                     If val(Arg1) > MAXUSERMATADOS Then
250                         UserList(tUser).Faccion.ciudadanosMatados = MAXUSERMATADOS
                        Else
252                         UserList(tUser).Faccion.ciudadanosMatados = val(Arg1)

                        End If

                    End If
                
254             Case eEditOptions.eo_Level

256                 If tUser <= 0 Then
258                     Call WriteConsoleMsg(UserIndex, "Usuario offline: " & UserName, FontTypeNames.FONTTYPE_INFO)
                    Else

260                     If val(Arg1) > STAT_MAXELV Then
262                         Arg1 = CStr(STAT_MAXELV)
264                         Call WriteConsoleMsg(UserIndex, "No podés tener un nivel superior a " & STAT_MAXELV & ".", FONTTYPE_INFO)

                        End If
                        
266                     UserList(tUser).Stats.ELV = val(Arg1)

                    End If
                    
268                 Call WriteUpdateUserStats(UserIndex)
                
270             Case eEditOptions.eo_Class

272                 If tUser <= 0 Then
274                     Call WriteConsoleMsg(UserIndex, "Usuario offline: " & UserName, FontTypeNames.FONTTYPE_INFO)
                    Else

276                     For LoopC = 1 To NUMCLASES

278                         If Tilde(ListaClases(LoopC)) = Tilde(Arg1) Then Exit For
280                     Next LoopC
                        
282                     If LoopC > NUMCLASES Then
284                         Call WriteConsoleMsg(UserIndex, "Clase desconocida. Intente nuevamente.", FontTypeNames.FONTTYPE_INFO)
                        Else
286                         UserList(tUser).clase = LoopC

                        End If

                    End If
                
288             Case eEditOptions.eo_Skills

290                 For LoopC = 1 To NUMSKILLS

292                     If Tilde(Replace$(SkillsNames(LoopC), " ", "+")) = Tilde(Arg1) Then Exit For
294                 Next LoopC
                    
296                 If LoopC > NUMSKILLS Then
298                     Call WriteConsoleMsg(UserIndex, "Skill Inexistente!", FontTypeNames.FONTTYPE_INFO)
                    Else

300                     If tUser <= 0 Then
                        
302                         If Database_Enabled Then
304                             Call SaveUserSkillDatabase(UserName, LoopC, val(Arg2))
                            Else
306                             Call WriteVar(CharPath & UserName & ".chr", "Skills", "SK" & LoopC, Arg2)

                            End If

308                         Call WriteConsoleMsg(UserIndex, "Usuario Offline Alterado: " & UserName, FontTypeNames.FONTTYPE_INFO)
                        Else
310                         UserList(tUser).Stats.UserSkills(LoopC) = val(Arg2)

                        End If

                    End If
                
312             Case eEditOptions.eo_SkillPointsLeft

314                 If tUser <= 0 Then
                    
316                     If Database_Enabled Then
318                         Call SaveUserSkillsLibres(UserName, val(Arg1))
                        Else
320                         Call WriteVar(CharPath & UserName & ".chr", "STATS", "SkillPtsLibres", Arg1)

                        End If
                        
322                     Call WriteConsoleMsg(UserIndex, "Usuario Offline Alterado: " & UserName, FontTypeNames.FONTTYPE_INFO)
                    Else
324                     UserList(tUser).Stats.SkillPts = val(Arg1)

                    End If
                
326             Case eEditOptions.eo_Sex

328                 If tUser <= 0 Then
330                     Call WriteConsoleMsg(UserIndex, "Usuario offline: " & UserName, FontTypeNames.FONTTYPE_INFO)
                    
                    Else
332                     Arg1 = UCase$(Arg1)

334                     If (Arg1 = "MUJER") Then
336                         UserList(tUser).genero = eGenero.Mujer
                        
338                     ElseIf (Arg1 = "HOMBRE") Then
340                         UserList(tUser).genero = eGenero.Hombre

                        End If

                    End If
                
342             Case eEditOptions.eo_Raza

344                 If tUser <= 0 Then
346                     Call WriteConsoleMsg(UserIndex, "Usuario offline: " & UserName, FontTypeNames.FONTTYPE_INFO)
                        
                    Else
                    
348                     Arg1 = UCase$(Arg1)

350                     If (Arg1 = "HUMANO") Then
352                         UserList(tUser).raza = eRaza.Humano
                            
354                     ElseIf (Arg1 = "ELFO") Then
356                         UserList(tUser).raza = eRaza.Elfo
                            
358                     ElseIf (Arg1 = "DROW") Then
360                         UserList(tUser).raza = eRaza.Drow
                            
362                     ElseIf (Arg1 = "ENANO") Then
364                         UserList(tUser).raza = eRaza.Enano
                            
366                     ElseIf (Arg1 = "GNOMO") Then
368                         UserList(tUser).raza = eRaza.Gnomo
                            
370                     ElseIf (Arg1 = "ORCO") Then
372                         UserList(tUser).raza = eRaza.Orco

                        End If

                    End If
                    
374             Case eEditOptions.eo_Vida
376                 If tUser <= 0 Then
378                     Call WriteConsoleMsg(UserIndex, "Usuario offline: " & UserName, FontTypeNames.FONTTYPE_INFO)
                    
                    Else
380                     tmpLong = val(Arg1)
                        
382                     If tmpLong > 0 Then
384                         UserList(tUser).Stats.MaxHp = min(tmpLong, STAT_MAXHP)
386                         UserList(tUser).Stats.MinHp = UserList(tUser).Stats.MaxHp
                            
388                         Call WriteUpdateUserStats(tUser)
                        End If
                    End If
                    
390             Case eEditOptions.eo_Mana
392                 If tUser <= 0 Then
394                     Call WriteConsoleMsg(UserIndex, "Usuario offline: " & UserName, FontTypeNames.FONTTYPE_INFO)
                    
                    Else
396                     tmpLong = val(Arg1)
                        
398                     If tmpLong > 0 Then
400                         UserList(tUser).Stats.MaxMAN = min(tmpLong, STAT_MAXMP)
402                         UserList(tUser).Stats.MinMAN = UserList(tUser).Stats.MaxMAN
                            
404                         Call WriteUpdateUserStats(tUser)
                        End If
                    End If
                    
406             Case eEditOptions.eo_Energia
408                 If tUser <= 0 Then
410                     Call WriteConsoleMsg(UserIndex, "Usuario offline: " & UserName, FontTypeNames.FONTTYPE_INFO)
                    
                    Else
412                     tmpLong = val(Arg1)
                        
414                     If tmpLong > 0 Then
416                         UserList(tUser).Stats.MaxSta = min(tmpLong, STAT_MAXSTA)
418                         UserList(tUser).Stats.MinSta = UserList(tUser).Stats.MaxSta
                            
420                         Call WriteUpdateUserStats(tUser)
                        End If
                    End If
                        
422             Case eEditOptions.eo_MinHP
424                 If tUser <= 0 Then
426                     Call WriteConsoleMsg(UserIndex, "Usuario offline: " & UserName, FontTypeNames.FONTTYPE_INFO)
                    
                    Else
428                     tmpLong = val(Arg1)
                        
430                     If tmpLong >= 0 Then
432                         UserList(tUser).Stats.MinHp = min(tmpLong, STAT_MAXHP)
                            
434                         Call WriteUpdateHP(tUser)
                        End If
                    End If
                    
436             Case eEditOptions.eo_MinMP
438                 If tUser <= 0 Then
440                     Call WriteConsoleMsg(UserIndex, "Usuario offline: " & UserName, FontTypeNames.FONTTYPE_INFO)
                    
                    Else
442                     tmpLong = val(Arg1)
                        
444                     If tmpLong >= 0 Then
446                         UserList(tUser).Stats.MinMAN = min(tmpLong, STAT_MAXMP)
                            
448                         Call WriteUpdateMana(tUser)
                        End If
                    End If
                    
450             Case eEditOptions.eo_Hit
452                 If tUser <= 0 Then
454                     Call WriteConsoleMsg(UserIndex, "Usuario offline: " & UserName, FontTypeNames.FONTTYPE_INFO)
                    
                    Else
456                     tmpLong = val(Arg1)
                        
458                     If tmpLong >= 0 Then
460                         UserList(tUser).Stats.MaxHit = min(tmpLong, STAT_MAXHIT)
462                         UserList(tUser).Stats.MinHIT = UserList(tUser).Stats.MaxHit
                        End If
                    End If
                    
464             Case eEditOptions.eo_MinHit
466                 If tUser <= 0 Then
468                     Call WriteConsoleMsg(UserIndex, "Usuario offline: " & UserName, FontTypeNames.FONTTYPE_INFO)
                    
                    Else
470                     tmpLong = val(Arg1)
                        
472                     If tmpLong >= 0 Then
474                         UserList(tUser).Stats.MinHIT = min(tmpLong, STAT_MAXHIT)
                        End If
                    End If
                    
476             Case eEditOptions.eo_MaxHit
478                 If tUser <= 0 Then
480                     Call WriteConsoleMsg(UserIndex, "Usuario offline: " & UserName, FontTypeNames.FONTTYPE_INFO)
                    
                    Else
482                     tmpLong = val(Arg1)
                        
484                     If tmpLong >= 0 Then
486                         UserList(tUser).Stats.MaxHit = min(tmpLong, STAT_MAXHIT)
                        End If
                    End If
                    
488             Case eEditOptions.eo_Desc
490                 If tUser <= 0 Then
492                     Call WriteConsoleMsg(UserIndex, "Usuario offline: " & UserName, FontTypeNames.FONTTYPE_INFO)
                    
494                 ElseIf DescripcionValida(Arg1) Then
496                     UserList(tUser).Desc = Arg1
                        
                    Else
498                     Call WriteConsoleMsg(UserIndex, "Caracteres inválidos en la descripción.", FontTypeNames.FONTTYPE_INFO)
                    End If
                    
500             Case eEditOptions.eo_Intervalo
502                 If tUser <= 0 Then
504                     Call WriteConsoleMsg(UserIndex, "Usuario offline: " & UserName, FontTypeNames.FONTTYPE_INFO)
                    Else
506                     Arg1 = UCase$(Arg1)
                        
508                     tmpLong = val(Arg2)
                        
510                     If tmpLong >= 0 Then
                    
512                         Select Case Arg1
                                Case "USAR"
514                                 UserList(tUser).Intervals.UsarClic = tmpLong
516                                 UserList(tUser).Intervals.UsarU = tmpLong
                                    
518                             Case "USAR_U", "USAR+U", "USAR-U"
520                                 UserList(tUser).Intervals.UsarU = tmpLong
                                    
522                             Case "USAR_CLIC", "USAR+CLIC", "USAR-CLIC", "USAR_CLICK", "USAR+CLICK", "USAR-CLICK"
524                                 UserList(tUser).Intervals.UsarClic = tmpLong
                                    
526                             Case "ARCO", "PROYECTILES"
528                                 UserList(tUser).Intervals.Arco = tmpLong
                                    
530                             Case "GOLPE", "GOLPES", "GOLPEAR"
532                                 UserList(tUser).Intervals.Golpe = tmpLong
                                    
534                             Case "MAGIA", "HECHIZO", "HECHIZOS", "LANZAR"
536                                 UserList(tUser).Intervals.magia = tmpLong

538                             Case "COMBO"
540                                 UserList(tUser).Intervals.GolpeMagia = tmpLong
542                                 UserList(tUser).Intervals.MagiaGolpe = tmpLong

544                             Case "GOLPE-MAGIA", "GOLPE-HECHIZO"
546                                 UserList(tUser).Intervals.GolpeMagia = tmpLong

548                             Case "MAGIA-GOLPE", "HECHIZO-GOLPE"
550                                 UserList(tUser).Intervals.MagiaGolpe = tmpLong
                                    
552                             Case "GOLPE-USAR"
554                                 UserList(tUser).Intervals.GolpeUsar = tmpLong
                                    
556                             Case "TRABAJAR", "WORK", "TRABAJO"
558                                 UserList(tUser).Intervals.TrabajarConstruir = tmpLong
560                                 UserList(tUser).Intervals.TrabajarExtraer = tmpLong
                                    
562                             Case "TRABAJAR_EXTRAER", "EXTRAER", "TRABAJO_EXTRAER"
564                                 UserList(tUser).Intervals.TrabajarExtraer = tmpLong
                                    
566                             Case "TRABAJAR_CONSTRUIR", "CONSTRUIR", "TRABAJO_CONSTRUIR"
568                                 UserList(tUser).Intervals.TrabajarConstruir = tmpLong
                                    
570                             Case Else
                                    Exit Sub
                            End Select
                            
572                         Call WriteIntervals(tUser)
                            
                        End If
                    End If
                    
574             Case eEditOptions.eo_Hogar
576                 If tUser <= 0 Then
578                     Call WriteConsoleMsg(UserIndex, "Usuario offline: " & UserName, FontTypeNames.FONTTYPE_INFO)
                    Else
580                     Arg1 = UCase$(Arg1)
                    
582                     Select Case Arg1
                            Case "NIX"
584                             UserList(tUser).Hogar = eCiudad.cNix
586                         Case "ULLA", "ULLATHORPE"
588                             UserList(tUser).Hogar = eCiudad.cUllathorpe
590                         Case "BANDER", "BANDERBILL"
592                             UserList(tUser).Hogar = eCiudad.cBanderbill
594                         Case "LINDOS"
596                             UserList(tUser).Hogar = eCiudad.cLindos
598                         Case "ARGHAL"
600                             UserList(tUser).Hogar = eCiudad.cArghal
602                         Case "ARKHEIN"
604                             UserList(tUser).Hogar = eCiudad.cArkhein
                        End Select
                    End If
                
606             Case Else
                
608                 Call WriteConsoleMsg(UserIndex, "Comando no permitido.", FontTypeNames.FONTTYPE_INFO)

            End Select

            'Log it!
610         commandString = "/MOD "
        
612         Select Case opcion

                Case eEditOptions.eo_Gold
614                 commandString = commandString & "ORO "
            
616             Case eEditOptions.eo_Experience
618                 commandString = commandString & "EXP "
            
620             Case eEditOptions.eo_Body
622                 commandString = commandString & "BODY "
            
624             Case eEditOptions.eo_Head
626                 commandString = commandString & "HEAD "
            
628             Case eEditOptions.eo_CriminalsKilled
630                 commandString = commandString & "CRI "
            
632             Case eEditOptions.eo_CiticensKilled
634                 commandString = commandString & "CIU "
            
636             Case eEditOptions.eo_Level
638                 commandString = commandString & "LEVEL "
            
640             Case eEditOptions.eo_Class
642                 commandString = commandString & "CLASE "
            
644             Case eEditOptions.eo_Skills
646                 commandString = commandString & "SKILLS "
            
648             Case eEditOptions.eo_SkillPointsLeft
650                 commandString = commandString & "SKILLSLIBRES "
                
652             Case eEditOptions.eo_Sex
654                 commandString = commandString & "SEX "
                
656             Case eEditOptions.eo_Raza
658                 commandString = commandString & "RAZA "

660             Case eEditOptions.eo_Vida
662                 commandString = commandString & "VIDA "
                    
664             Case eEditOptions.eo_Mana
666                 commandString = commandString & "MANA "
                    
668             Case eEditOptions.eo_Energia
670                 commandString = commandString & "ENERGIA "
                    
672             Case eEditOptions.eo_MinHP
674                 commandString = commandString & "MINHP "
                    
676             Case eEditOptions.eo_MinMP
678                 commandString = commandString & "MINMP "
                    
680            Case eEditOptions.eo_Hit
682                 commandString = commandString & "HIT "
                    
684             Case eEditOptions.eo_MinHit
686                 commandString = commandString & "MINHIT "
                    
688             Case eEditOptions.eo_MaxHit
690                 commandString = commandString & "MAXHIT "
                    
692             Case eEditOptions.eo_Desc
694                 commandString = commandString & "DESC "
                    
696             Case eEditOptions.eo_Intervalo
698                 commandString = commandString & "INTERVALO "
                    
700             Case eEditOptions.eo_Hogar
702                 commandString = commandString & "HOGAR "
                
704             Case Else
706                 commandString = commandString & "UNKOWN "

            End Select
        
708         commandString = commandString & Arg1 & " " & Arg2
        
710         Call LogGM(.name, commandString & " " & UserName)

        End With

ErrHandler:

        Dim Error As Long

712     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
714     Set Buffer = Nothing
    
716     If Error <> 0 Then Err.raise Error

End Sub

''
' Handles the "RequestCharInfo" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleRequestCharInfo(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Fredy Horacio Treboux (liquid)
        'Last Modification: 01/08/07
        'Last Modification by: (liquid).. alto bug zapallo..
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
                
            Dim targetName  As String

            Dim targetIndex As Integer
        
110         targetName = Replace$(Buffer.ReadASCIIString(), "+", " ")
112         targetIndex = NameIndex(targetName)
        
114         If .flags.Privilegios And (PlayerType.Admin Or PlayerType.Dios Or PlayerType.SemiDios) Then

                'is the player offline?
116             If targetIndex <= 0 Then

                    'don't allow to retrieve administrator's info
118                 If Not (EsDios(targetName) Or EsAdmin(targetName)) Then
120                     Call WriteConsoleMsg(UserIndex, "Usuario offline, Buscando en Charfile.", FontTypeNames.FONTTYPE_INFO)
122                     Call SendUserStatsTxtOFF(UserIndex, targetName)

                    End If

                Else

                    'don't allow to retrieve administrator's info
124                 If UserList(targetIndex).flags.Privilegios And (PlayerType.user Or PlayerType.Consejero Or PlayerType.SemiDios) Then
126                     Call SendUserStatsTxt(UserIndex, targetIndex)

                    End If

                End If

            End If
        
            'If we got here then packet is complete, copy data back to original queue
128         Call .incomingData.CopyBuffer(Buffer)

        End With
    
ErrHandler:

        Dim Error As Long

130     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
132     Set Buffer = Nothing
    
134     If Error <> 0 Then Err.raise Error

End Sub

''
' Handles the "RequestCharStats" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleRequestCharStats(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Nicolas Matias Gonzalez (NIGO)
        'Last Modification: 12/29/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            Dim UserName As String

            Dim tUser    As Integer

110         UserName = Buffer.ReadASCIIString()
        
112         If (Not .flags.Privilegios And PlayerType.RoleMaster) <> 0 And (.flags.Privilegios And (PlayerType.Admin Or PlayerType.Dios Or PlayerType.SemiDios)) <> 0 Then
114             Call LogGM(.name, "/STAT " & UserName)
            
116             tUser = NameIndex(UserName)
            
118             If tUser <= 0 Then
120                 Call WriteConsoleMsg(UserIndex, "Usuario offline. Leyendo Charfile... ", FontTypeNames.FONTTYPE_INFO)
                
122                 Call SendUserMiniStatsTxtFromChar(UserIndex, UserName)
                Else
124                 Call SendUserMiniStatsTxt(UserIndex, tUser)

                End If

            End If
        
            'If we got here then packet is complete, copy data back to original queue
126         Call .incomingData.CopyBuffer(Buffer)

        End With

ErrHandler:

        Dim Error As Long

128     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
130     Set Buffer = Nothing
    
132     If Error <> 0 Then Err.raise Error

End Sub

''
' Handles the "RequestCharGold" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleRequestCharGold(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Nicolas Matias Gonzalez (NIGO)
        'Last Modification: 12/29/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            Dim UserName As String

            Dim tUser    As Integer
        
110         UserName = Buffer.ReadASCIIString()
112         tUser = NameIndex(UserName)
        
114         If (.flags.Privilegios And (PlayerType.Admin Or PlayerType.Dios Or PlayerType.SemiDios)) Then
116             Call LogGM(.name, "/BAL " & UserName)
            
118             If tUser <= 0 Then
120                 Call WriteConsoleMsg(UserIndex, "Usuario offline. Leyendo charfile... ", FontTypeNames.FONTTYPE_TALK)
                
122                 Call SendUserOROTxtFromChar(UserIndex, UserName)
                Else
124                 Call WriteConsoleMsg(UserIndex, "El usuario " & UserName & " tiene " & UserList(tUser).Stats.Banco & " en el banco", FontTypeNames.FONTTYPE_TALK)

                End If

            End If
        
            'If we got here then packet is complete, copy data back to original queue
126         Call .incomingData.CopyBuffer(Buffer)

        End With

ErrHandler:

        Dim Error As Long

128     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
130     Set Buffer = Nothing
    
132     If Error <> 0 Then Err.raise Error

End Sub

''
' Handles the "RequestCharInventory" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleRequestCharInventory(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Nicolas Matias Gonzalez (NIGO)
        'Last Modification: 12/29/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            Dim UserName As String

            Dim tUser    As Integer
        
110         UserName = Buffer.ReadASCIIString()
112         tUser = NameIndex(UserName)
        
114         If (.flags.Privilegios And (PlayerType.Admin Or PlayerType.Dios Or PlayerType.SemiDios)) Then
116             Call LogGM(.name, "/INV " & UserName)
            
118             If tUser <= 0 Then
120                 Call WriteConsoleMsg(UserIndex, "Usuario offline. Leyendo del charfile...", FontTypeNames.FONTTYPE_TALK)
                
122                 Call SendUserInvTxtFromChar(UserIndex, UserName)
                Else
124                 Call SendUserInvTxt(UserIndex, tUser)

                End If

            End If
        
            'If we got here then packet is complete, copy data back to original queue
126         Call .incomingData.CopyBuffer(Buffer)

        End With

ErrHandler:

        Dim Error As Long

128     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
130     Set Buffer = Nothing
    
132     If Error <> 0 Then Err.raise Error

End Sub

''
' Handles the "RequestCharBank" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleRequestCharBank(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Nicolas Matias Gonzalez (NIGO)
        'Last Modification: 12/29/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            Dim UserName As String

            Dim tUser    As Integer
        
110         UserName = Buffer.ReadASCIIString()
112         tUser = NameIndex(UserName)
        
114         If (.flags.Privilegios And (PlayerType.Admin Or PlayerType.Dios Or PlayerType.SemiDios)) Then
116             Call LogGM(.name, "/BOV " & UserName)
            
118             If tUser <= 0 Then
120                 Call WriteConsoleMsg(UserIndex, "Usuario offline. Leyendo charfile... ", FontTypeNames.FONTTYPE_TALK)
                
122                 Call SendUserBovedaTxtFromChar(UserIndex, UserName)
                Else
124                 Call SendUserBovedaTxt(UserIndex, tUser)

                End If

            End If
        
            'If we got here then packet is complete, copy data back to original queue
126         Call .incomingData.CopyBuffer(Buffer)

        End With

ErrHandler:

        Dim Error As Long

128     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
130     Set Buffer = Nothing
    
132     If Error <> 0 Then Err.raise Error

End Sub

''
' Handles the "RequestCharSkills" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleRequestCharSkills(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Nicolas Matias Gonzalez (NIGO)
        'Last Modification: 12/29/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            Dim UserName As String

            Dim tUser    As Integer

            Dim LoopC    As Long

            Dim message  As String
        
110         UserName = Buffer.ReadASCIIString()
112         tUser = NameIndex(UserName)
        
114         If (.flags.Privilegios And (PlayerType.Admin Or PlayerType.Dios Or PlayerType.SemiDios)) Then
116             Call LogGM(.name, "/STATS " & UserName)
            
118             If tUser <= 0 Then
120                 If (InStrB(UserName, "\") <> 0) Then
122                     UserName = Replace(UserName, "\", "")

                    End If

124                 If (InStrB(UserName, "/") <> 0) Then
126                     UserName = Replace(UserName, "/", "")

                    End If
                
128                 For LoopC = 1 To NUMSKILLS
130                     message = message & "CHAR>" & SkillsNames(LoopC) & " = " & GetVar(CharPath & UserName & ".chr", "SKILLS", "SK" & LoopC) & vbCrLf
132                 Next LoopC
                
134                 Call WriteConsoleMsg(UserIndex, message & "CHAR> Libres:" & GetVar(CharPath & UserName & ".chr", "STATS", "SKILLPTSLIBRES"), FontTypeNames.FONTTYPE_INFO)
                Else
136                 Call SendUserSkillsTxt(UserIndex, tUser)

                End If

            End If
        
            'If we got here then packet is complete, copy data back to original queue
138         Call .incomingData.CopyBuffer(Buffer)

        End With

ErrHandler:

        Dim Error As Long

140     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
142     Set Buffer = Nothing
    
144     If Error <> 0 Then Err.raise Error

End Sub

''
' Handles the "ReviveChar" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleReviveChar(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Nicolas Matias Gonzalez (NIGO)
        'Last Modification: 12/29/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            Dim UserName As String

            Dim tUser    As Integer

            Dim LoopC    As Byte
        
110         UserName = Buffer.ReadASCIIString()
        
112         If (.flags.Privilegios And (PlayerType.Admin Or PlayerType.Dios Or PlayerType.SemiDios)) Then
114             If UCase$(UserName) <> "YO" Then
116                 tUser = NameIndex(UserName)
                Else
118                 tUser = UserIndex

                End If
            
120             If tUser <= 0 Then
122                 Call WriteConsoleMsg(UserIndex, "Usuario offline.", FontTypeNames.FONTTYPE_INFO)
                Else

124                 With UserList(tUser)

                        'If dead, show him alive (naked).
126                     If .flags.Muerto = 1 Then
128                         .flags.Muerto = 0
                        
                            'Call DarCuerpoDesnudo(tUser)
                        
                            'Call ChangeUserChar(tUser, .Char.body, .OrigChar.Head, .Char.heading, .Char.WeaponAnim, .Char.ShieldAnim, .Char.CascoAnim)
130                         Call RevivirUsuario(tUser)
                        
132                         Call WriteConsoleMsg(tUser, UserList(UserIndex).name & " te ha resucitado.", FontTypeNames.FONTTYPE_INFO)
                        Else
134                         Call WriteConsoleMsg(tUser, UserList(UserIndex).name & " te ha curado.", FontTypeNames.FONTTYPE_INFO)

                        End If
                    
136                     .Stats.MinHp = .Stats.MaxHp

                    End With
                
                    ' Call WriteHora(tUser)
138                 Call WriteUpdateHP(tUser)
                    Call ActualizarVelocidadDeUsuario(tUser)
144                 Call LogGM(.name, "Resucito a " & UserName)

                End If

            End If
        
            'If we got here then packet is complete, copy data back to original queue
146         Call .incomingData.CopyBuffer(Buffer)

        End With

ErrHandler:

        Dim Error As Long

148     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
150     Set Buffer = Nothing
    
152     If Error <> 0 Then Err.raise Error

End Sub

''
' Handles the "OnlineGM" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleOnlineGM(ByVal UserIndex As Integer)
        
        On Error GoTo HandleOnlineGM_Err
        

        '***************************************************
        'Author: Fredy Horacio Treboux (liquid)
        'Last Modification: 12/28/06
        '
        '***************************************************
        Dim i    As Long

        Dim list As String

        Dim priv As PlayerType
    
100     With UserList(UserIndex)
            'Remove packet ID
102         Call .incomingData.ReadByte
        
104         If .flags.Privilegios And (PlayerType.user Or PlayerType.Consejero) Then Exit Sub

106         priv = PlayerType.Consejero Or PlayerType.SemiDios

108         If .flags.Privilegios And (PlayerType.Dios Or PlayerType.Admin) Then priv = priv Or PlayerType.Dios Or PlayerType.Admin
        
110         For i = 1 To LastUser

112             If UserList(i).flags.UserLogged Then
114                 If UserList(i).flags.Privilegios And priv Then list = list & UserList(i).name & ", "

                End If

116         Next i
        
118         If LenB(list) <> 0 Then
120             list = Left$(list, Len(list) - 2)
122             Call WriteConsoleMsg(UserIndex, list & ".", FontTypeNames.FONTTYPE_INFO)
            Else
124             Call WriteConsoleMsg(UserIndex, "No hay GMs Online.", FontTypeNames.FONTTYPE_INFO)

            End If

        End With

        
        Exit Sub

HandleOnlineGM_Err:
126     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleOnlineGM", Erl)
128     Resume Next
        
End Sub

''
' Handles the "OnlineMap" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleOnlineMap(ByVal UserIndex As Integer)
        
        On Error GoTo HandleOnlineMap_Err
        

        '***************************************************
        'Author: Nicolas Matias Gonzalez (NIGO)
        'Last Modification: 12/29/06
        '
        '***************************************************
100     With UserList(UserIndex)
            'Remove packet ID
102         Call .incomingData.ReadByte
        
104         If .flags.Privilegios And (PlayerType.user Or PlayerType.Consejero) Then Exit Sub
        
            Dim LoopC As Long

            Dim list  As String

            Dim priv  As PlayerType
        
106         priv = PlayerType.user Or PlayerType.Consejero Or PlayerType.SemiDios

108         If .flags.Privilegios And (PlayerType.Dios Or PlayerType.Admin) Then priv = priv + (PlayerType.Dios Or PlayerType.Admin)
        
110         For LoopC = 1 To LastUser

112             If LenB(UserList(LoopC).name) <> 0 And UserList(LoopC).Pos.Map = .Pos.Map Then
114                 If UserList(LoopC).flags.Privilegios And priv Then list = list & UserList(LoopC).name & ", "

                End If

116         Next LoopC
        
118         If Len(list) > 2 Then list = Left$(list, Len(list) - 2)
        
120         Call WriteConsoleMsg(UserIndex, "Usuarios en el mapa: " & list, FontTypeNames.FONTTYPE_INFO)

        End With

        
        Exit Sub

HandleOnlineMap_Err:
122     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleOnlineMap", Erl)
124     Resume Next
        
End Sub

''
' Handles the "Forgive" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleForgive(ByVal UserIndex As Integer)
        
        On Error GoTo HandleForgive_Err
        

        '***************************************************
        'Author: Nicolas Matias Gonzalez (NIGO)
        'Last Modification: 12/29/06
        '
        '***************************************************
100     With UserList(UserIndex)
            'Remove packet ID
102         Call .incomingData.ReadByte
        
            'Se asegura que el target es un npc
104         If .flags.TargetNPC = 0 Then
106             Call WriteConsoleMsg(UserIndex, "Primero tenés que seleccionar al sacerdote.", FontTypeNames.FONTTYPE_INFO)
                Exit Sub

            End If

            'Validate NPC and make sure player is not dead
108         If (NpcList(.flags.TargetNPC).NPCtype <> eNPCType.Revividor And (NpcList(.flags.TargetNPC).NPCtype <> eNPCType.ResucitadorNewbie Or Not EsNewbie(UserIndex))) Or .flags.Muerto = 1 Then Exit Sub
        
            Dim priest As npc
                priest = NpcList(.flags.TargetNPC)

            'Make sure it's close enough
110         If Distancia(.Pos, priest.Pos) > 3 Then
                'Call WriteLocaleMsg(UserIndex, "8", FontTypeNames.FONTTYPE_INFO)
112             Call WriteConsoleMsg(UserIndex, "El sacerdote no puede escuchar tus pecados debido a que estás demasiado lejos.", FontTypeNames.FONTTYPE_INFO)
                Exit Sub
            End If
        
114         If .Faccion.Status = 1 Or .Faccion.ArmadaReal = 1 Then
                'Call WriteLocaleMsg(UserIndex, "8", FontTypeNames.FONTTYPE_INFO)
116             Call WriteChatOverHead(UserIndex, "Tu alma ya esta libre de pecados hijo mio.", priest.Char.CharIndex, vbWhite)
                Exit Sub
            End If
        
118         If .Faccion.FuerzasCaos > 0 Then
120             Call WriteChatOverHead(UserIndex, "¡¡Dios no te perdonará mientras seas fiel al Demonio!!", priest.Char.CharIndex, vbWhite)
                Exit Sub
            End If

            If .GuildIndex <> 0 Then
                If modGuilds.Alineacion(.GuildIndex) = 1 Then
                   Call WriteChatOverHead(UserIndex, "Te encuentras en un clan criminal... debes retirarte para que pueda perdonarte.", priest.Char.CharIndex, vbWhite)
                   Exit Sub

                End If

            End If

            If .Faccion.ciudadanosMatados > 0 Then
                Dim Donacion As Long
                Donacion = .Faccion.ciudadanosMatados * OroMult * CostoPerdonPorCiudadano

                Call WriteChatOverHead(UserIndex, "Has matado a ciudadanos inocentes, Dios no puede perdonarte lo que has hecho. " & _
                        "Pero si haces una generosa donación de, digamos, " & PonerPuntos(Donacion) & " monedas de oro, tal vez cambie de opinión...", priest.Char.CharIndex, vbWhite)
                Exit Sub
            End If

136         Call WriteChatOverHead(UserIndex, "Con estas palabras, te libero de todo tipo de pecados. ¡Que Dios te acompañe hijo mío!", priest.Char.CharIndex, vbYellow)

138         Call SendData(SendTarget.ToPCArea, UserIndex, PrepareMessageParticleFX(UserList(UserIndex).Char.CharIndex, "80", 100, False))
140         Call SendData(SendTarget.ToPCArea, UserIndex, PrepareMessagePlayWave("100", UserList(UserIndex).Pos.X, UserList(UserIndex).Pos.Y))
142         Call VolverCiudadano(UserIndex)

        End With

        
        Exit Sub

HandleForgive_Err:
146     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleForgive", Erl)
148     Resume Next
        
End Sub

''
' Handles the "Kick" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleKick(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Nicolas Matias Gonzalez (NIGO)
        'Last Modification: 12/29/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            Dim UserName As String

            Dim tUser    As Integer

            Dim rank     As Integer
        
110         rank = PlayerType.Admin Or PlayerType.Dios Or PlayerType.SemiDios Or PlayerType.Consejero
        
112         UserName = Buffer.ReadASCIIString()
        
114         If (.flags.Privilegios And (PlayerType.Admin Or PlayerType.Dios Or PlayerType.SemiDios)) Then
116             tUser = NameIndex(UserName)
            
118             If tUser <= 0 Then
120                 Call WriteConsoleMsg(UserIndex, "El usuario no esta online.", FontTypeNames.FONTTYPE_INFO)
                Else

122                 If (UserList(tUser).flags.Privilegios And rank) > (.flags.Privilegios And rank) Then
124                     Call WriteConsoleMsg(UserIndex, "No podes echar a alguien con jerarquia mayor a la tuya.", FontTypeNames.FONTTYPE_INFO)
                    Else
126                     Call SendData(SendTarget.ToAdmins, 0, PrepareMessageConsoleMsg(.name & " echo a " & UserName & ".", FontTypeNames.FONTTYPE_INFO))
128                     Call CloseSocket(tUser)
130                     Call LogGM(.name, "Echo a " & UserName)

                    End If

                End If

            End If
        
            'If we got here then packet is complete, copy data back to original queue
132         Call .incomingData.CopyBuffer(Buffer)

        End With

ErrHandler:

        Dim Error As Long

134     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
136     Set Buffer = Nothing
    
138     If Error <> 0 Then Err.raise Error

End Sub

''
' Handles the "Execute" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleExecute(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Nicolas Matias Gonzalez (NIGO)
        'Last Modification: 12/29/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            Dim UserName As String

            Dim tUser    As Integer
        
110         UserName = Buffer.ReadASCIIString()
        
112         If (Not .flags.Privilegios And PlayerType.RoleMaster) <> 0 And (.flags.Privilegios And (PlayerType.Admin Or PlayerType.Dios Or PlayerType.SemiDios)) <> 0 Then
114             tUser = NameIndex(UserName)
            
116             If tUser > 0 Then
                    'If Not UserList(tUser).flags.Privilegios And PlayerType.User Then
                    'Call WriteConsoleMsg(UserIndex, "Estís loco?? como vas a piíatear un gm!!!! :@", FontTypeNames.FONTTYPE_INFO)
                    'Else
118                 Call UserDie(tUser)
120                 Call SendData(SendTarget.ToAdmins, 0, PrepareMessageConsoleMsg(.name & " ha ejecutado a " & UserList(tUser).name, FontTypeNames.FONTTYPE_EJECUCION))
122                 Call LogGM(.name, " ejecuto a " & UserName)
                    'End If
                Else
124                 Call WriteConsoleMsg(UserIndex, "No está online", FontTypeNames.FONTTYPE_INFO)

                End If

            End If
        
            'If we got here then packet is complete, copy data back to original queue
126         Call .incomingData.CopyBuffer(Buffer)

        End With

ErrHandler:

        Dim Error As Long

128     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
130     Set Buffer = Nothing
    
132     If Error <> 0 Then Err.raise Error

End Sub

''
' Handles the "BanChar" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleBanChar(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Nicolas Matias Gonzalez (NIGO)
        'Last Modification: 12/29/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 5 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            Dim UserName As String

            Dim Reason   As String
        
110         UserName = Buffer.ReadASCIIString()
112         Reason = Buffer.ReadASCIIString()
        
114         If (Not .flags.Privilegios And PlayerType.RoleMaster) <> 0 And (.flags.Privilegios And (PlayerType.Admin Or PlayerType.Dios Or PlayerType.SemiDios)) <> 0 Then
116             Call BanCharacter(UserIndex, UserName, Reason)

            End If
        
            'If we got here then packet is complete, copy data back to original queue
118         Call .incomingData.CopyBuffer(Buffer)

        End With

ErrHandler:

        Dim Error As Long

120     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
122     Set Buffer = Nothing
    
124     If Error <> 0 Then Err.raise Error

End Sub

Private Sub HandleSilenciarUser(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Nicolas Matias Gonzalez (NIGO)
        'Last Modification: 12/29/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 5 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            Dim UserName As String

            Dim Time     As Byte
        
110         UserName = Buffer.ReadASCIIString()
112         Time = Buffer.ReadByte()
    
114         Call SilenciarUserName(UserIndex, UserName, Time)
            'If we got here then packet is complete, copy data back to original queue
116         Call .incomingData.CopyBuffer(Buffer)

        End With

ErrHandler:

        Dim Error As Long

118     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
120     Set Buffer = Nothing
    
122     If Error <> 0 Then Err.raise Error

End Sub

''
' Handles the "UnbanChar" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleUnbanChar(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Nicolas Matias Gonzalez (NIGO)
        'Last Modification: 12/29/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            Dim UserName As String
        
110         UserName = Buffer.ReadASCIIString()
        
112         If (Not .flags.Privilegios And PlayerType.RoleMaster) <> 0 And (.flags.Privilegios And (PlayerType.Admin Or PlayerType.Dios Or PlayerType.SemiDios)) <> 0 Then
114             If (InStrB(UserName, "\") <> 0) Then
116                 UserName = Replace(UserName, "\", "")

                End If

118             If (InStrB(UserName, "/") <> 0) Then
120                 UserName = Replace(UserName, "/", "")

                End If
            
122             If Not PersonajeExiste(UserName) Then
124                 Call WriteConsoleMsg(UserIndex, "Charfile inexistente (no use +)", FontTypeNames.FONTTYPE_INFO)
                Else

126                 If ObtenerBaneo(UserName) Then
128                     Call UnBan(UserName)
                    
130                     If Database_Enabled Then
132                         Call SavePenaDatabase(UserName, .name & ": UNBAN. " & Date & " " & Time)
                        Else

                            'penas
                            Dim cantPenas As Byte

134                         cantPenas = val(GetVar(CharPath & UserName & ".chr", "PENAS", "Cant"))
136                         Call WriteVar(CharPath & UserName & ".chr", "PENAS", "Cant", cantPenas + 1)
138                         Call WriteVar(CharPath & UserName & ".chr", "PENAS", "P" & cantPenas + 1, .name & ": UNBAN. " & Date & " " & Time)

                        End If

140                     Call LogGM(.name, "/UNBAN a " & UserName)
142                     Call WriteConsoleMsg(UserIndex, UserName & " desbaneado.", FontTypeNames.FONTTYPE_INFO)
                    Else
144                     Call WriteConsoleMsg(UserIndex, UserName & " no esta baneado. Imposible unbanear", FontTypeNames.FONTTYPE_INFO)

                    End If

                End If

            End If
        
            'If we got here then packet is complete, copy data back to original queue
146         Call .incomingData.CopyBuffer(Buffer)

        End With

ErrHandler:

        Dim Error As Long

148     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
150     Set Buffer = Nothing
    
152     If Error <> 0 Then Err.raise Error

End Sub

''
' Handles the "NPCFollow" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleNPCFollow(ByVal UserIndex As Integer)
        
        On Error GoTo HandleNPCFollow_Err
        

        '***************************************************
        'Author: Nicolas Matias Gonzalez (NIGO)
        'Last Modification: 12/29/06
        '
        '***************************************************
100     With UserList(UserIndex)
            'Remove packet ID
102         Call .incomingData.ReadByte
        
104         If .flags.Privilegios And (PlayerType.user Or PlayerType.Consejero) Then Exit Sub
        
106         If .flags.TargetNPC > 0 Then
108             Call DoFollow(.flags.TargetNPC, .name)
110             NpcList(.flags.TargetNPC).flags.Inmovilizado = 0
112             NpcList(.flags.TargetNPC).flags.Paralizado = 0
114             NpcList(.flags.TargetNPC).Contadores.Paralisis = 0

            End If

        End With

        
        Exit Sub

HandleNPCFollow_Err:
116     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleNPCFollow", Erl)
118     Resume Next
        
End Sub

''
' Handles the "SummonChar" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleSummonChar(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Nicolas Matias Gonzalez (NIGO)
        'Last Modification: 12/29/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue
106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            Dim UserName As String
            Dim tUser    As Integer
        
110         UserName = Buffer.ReadASCIIString()
            
            'If we got here then packet is complete, copy data back to original queue
112         Call .incomingData.CopyBuffer(Buffer)
            
114         If EsGM(UserIndex) Then

116             If LenB(UserName) <> 0 Then
118                 tUser = NameIndex(UserName)

120                 If tUser <= 0 Then
122                     Call WriteConsoleMsg(UserIndex, "El jugador no está online.", FontTypeNames.FONTTYPE_INFO)
                        Exit Sub
                    End If
                
124             ElseIf .flags.TargetUser > 0 Then
126                 tUser = .flags.TargetUser

                ' Mover NPCs
128             ElseIf .flags.TargetNPC > 0 Then
130                 If NpcList(.flags.TargetNPC).Pos.Map = .Pos.Map Then
132                     Call WarpNpcChar(.flags.TargetNPC, .Pos.Map, .Pos.X, .Pos.Y + 1, True)
134                     Call WriteConsoleMsg(UserIndex, "Has desplazado a la criatura.", FontTypeNames.FONTTYPE_INFO)
                    Else
136                     Call WriteConsoleMsg(UserIndex, "Sólo puedes mover NPCs dentro del mismo mapa.", FontTypeNames.FONTTYPE_INFO)
                    End If
                    Exit Sub

                Else
                    Exit Sub
                End If

138             If CompararPrivilegios(tUser, UserIndex) > 0 Then
140                 Call WriteConsoleMsg(UserIndex, "Se le ha avisado a " & UserList(tUser).name & " que quieres traerlo a tu posición.", FontTypeNames.FONTTYPE_INFO)
142                 Call WriteConsoleMsg(tUser, .name & " quiere transportarte a su ubicación. Escribe /ira " & .name & " para ir.", FontTypeNames.FONTTYPE_INFO)
                    Exit Sub
                End If
                
                Dim NotConsejero As Boolean
144             NotConsejero = (.flags.Privilegios And PlayerType.Consejero) = 0
                
                ' Consejeros sólo pueden traer en el mismo mapa
146             If NotConsejero Or .Pos.Map = UserList(tUser).Pos.Map Then
                    
                    ' Si el admin está invisible no mostramos el nombre
148                 If NotConsejero And .flags.AdminInvisible = 1 Then
150                     Call WriteConsoleMsg(tUser, "Te han trasportado.", FontTypeNames.FONTTYPE_INFO)
                    Else
152                     Call WriteConsoleMsg(tUser, .name & " te ha trasportado.", FontTypeNames.FONTTYPE_INFO)
                    End If

154                 Call WarpToLegalPos(tUser, .Pos.Map, .Pos.X, .Pos.Y + 1, True, True)

156                 Call WriteConsoleMsg(UserIndex, "Has traído a " & UserList(tUser).name & ".", FontTypeNames.FONTTYPE_INFO)
                    
                    Call LogGM(.name, "/SUM " & UserName & " Map:" & .Pos.Map & " X:" & .Pos.X & " Y:" & .Pos.Y)
                
                End If
                
            End If
            
            End With
        
            Exit Sub
        
ErrHandler:

            Dim Error As Long

166         Error = Err.Number

            On Error GoTo 0
    
            'Destroy auxiliar buffer
168         Set Buffer = Nothing
    
170         If Error <> 0 Then Err.raise Error

    End Sub

''
' Handles the "SpawnListRequest" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleSpawnListRequest(ByVal UserIndex As Integer)
        
        On Error GoTo HandleSpawnListRequest_Err
        

        '***************************************************
        'Author: Nicolas Matias Gonzalez (NIGO)
        'Last Modification: 12/29/06
        '
        '***************************************************
100     With UserList(UserIndex)
            'Remove packet ID
102         Call .incomingData.ReadByte
        
104         If .flags.Privilegios And (PlayerType.user Or PlayerType.Consejero) Then Exit Sub
        
106         Call EnviarSpawnList(UserIndex)

        End With

        
        Exit Sub

HandleSpawnListRequest_Err:
108     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleSpawnListRequest", Erl)
110     Resume Next
        
End Sub

''
' Handles the "SpawnCreature" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleSpawnCreature(ByVal UserIndex As Integer)
        
        On Error GoTo HandleSpawnCreature_Err
        

        '***************************************************
        'Author: Nicolas Matias Gonzalez (NIGO)
        'Last Modification: 12/29/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
104     With UserList(UserIndex)
            'Remove packet ID
106         Call .incomingData.ReadByte
        
            Dim npc As Integer

108         npc = .incomingData.ReadInteger()
        
110         If (.flags.Privilegios And (PlayerType.Admin Or PlayerType.Dios Or PlayerType.SemiDios)) Then
112             If npc > 0 And npc <= UBound(Declaraciones.SpawnList()) Then Call SpawnNpc(Declaraciones.SpawnList(npc).NpcIndex, .Pos, True, False)
            
114             Call LogGM(.name, "Sumoneo " & Declaraciones.SpawnList(npc).NpcName)

            End If

        End With

        
        Exit Sub

HandleSpawnCreature_Err:
116     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleSpawnCreature", Erl)
118     Resume Next
        
End Sub

''
' Handles the "ResetNPCInventory" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleResetNPCInventory(ByVal UserIndex As Integer)
        
        On Error GoTo HandleResetNPCInventory_Err
        

        '***************************************************
        'Author: Nicolas Matias Gonzalez (NIGO)
        'Last Modification: 12/29/06
        '
        '***************************************************
100     With UserList(UserIndex)
            'Remove packet ID
102         Call .incomingData.ReadByte
        
104         If .flags.Privilegios And (PlayerType.user Or PlayerType.Consejero Or PlayerType.RoleMaster) Then Exit Sub
106         If .flags.TargetNPC = 0 Then Exit Sub
        
108         Call ResetNpcInv(.flags.TargetNPC)
110         Call LogGM(.name, "/RESETINV " & NpcList(.flags.TargetNPC).name)

        End With

        
        Exit Sub

HandleResetNPCInventory_Err:
112     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleResetNPCInventory", Erl)
114     Resume Next
        
End Sub

''
' Handles the "CleanWorld" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleCleanWorld(ByVal UserIndex As Integer)
        
        On Error GoTo HandleCleanWorld_Err
        

        '***************************************************
        'Author: Nicolas Matias Gonzalez (NIGO)
        'Last Modification: 12/29/06
        '
        '***************************************************
100     With UserList(UserIndex)
            'Remove packet ID
102         Call .incomingData.ReadByte

104         If .flags.Privilegios And (PlayerType.user Or PlayerType.Consejero Or PlayerType.RoleMaster) Then Exit Sub

106         Call LimpiezaForzada
            
108         Call WriteConsoleMsg(UserIndex, "Se han limpiado los items del suelo.", FontTypeNames.FONTTYPE_INFO)
            
        End With

        Exit Sub

HandleCleanWorld_Err:
110     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleCleanWorld", Erl)
112     Resume Next
        
End Sub

''
' Handles the "ServerMessage" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleServerMessage(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Nicolas Matias Gonzalez (NIGO)
        'Last Modification: 12/29/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue
106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            Dim message As String

110         message = Buffer.ReadASCIIString()
        
112         If (.flags.Privilegios And (PlayerType.Admin Or PlayerType.Dios Or PlayerType.SemiDios)) Then
114             If LenB(message) <> 0 Then
116                 Call LogGM(.name, "Mensaje Broadcast:" & message)
118                 Call SendData(SendTarget.ToAll, 0, PrepareMessageConsoleMsg(.name & "> " & message, FontTypeNames.FONTTYPE_SERVER))

                End If

            End If
        
            'If we got here then packet is complete, copy data back to original queue
120         Call .incomingData.CopyBuffer(Buffer)

        End With

ErrHandler:

        Dim Error As Long

122     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
124     Set Buffer = Nothing
    
126     If Error <> 0 Then Err.raise Error

End Sub

''
' Handles the "NickToIP" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleNickToIP(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Nicolas Matias Gonzalez (NIGO)
        'Last Modification: 24/07/07
        'Pablo (ToxicWaste): Agrego para uqe el /nick2ip tambien diga los nicks en esa ip por pedido de la DGM.
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            Dim UserName As String

            Dim tUser    As Integer

            Dim priv     As PlayerType
        
110         UserName = Buffer.ReadASCIIString()
        
112         If (Not .flags.Privilegios And PlayerType.RoleMaster) <> 0 And (.flags.Privilegios And (PlayerType.Admin Or PlayerType.Dios Or PlayerType.SemiDios)) <> 0 Then
114             tUser = NameIndex(UserName)
116             Call LogGM(.name, "NICK2IP Solicito la IP de " & UserName)

118             If .flags.Privilegios And (PlayerType.Dios Or PlayerType.Admin) Then
120                 priv = PlayerType.user Or PlayerType.Consejero Or PlayerType.SemiDios Or PlayerType.Dios Or PlayerType.Admin
                Else
122                 priv = PlayerType.user

                End If
            
124             If tUser > 0 Then
126                 If UserList(tUser).flags.Privilegios And priv Then
128                     Call WriteConsoleMsg(UserIndex, "El ip de " & UserName & " es " & UserList(tUser).ip, FontTypeNames.FONTTYPE_INFO)

                        Dim ip    As String

                        Dim lista As String

                        Dim LoopC As Long

130                     ip = UserList(tUser).ip

132                     For LoopC = 1 To LastUser

134                         If UserList(LoopC).ip = ip Then
136                             If LenB(UserList(LoopC).name) <> 0 And UserList(LoopC).flags.UserLogged Then
138                                 If UserList(LoopC).flags.Privilegios And priv Then
140                                     lista = lista & UserList(LoopC).name & ", "

                                    End If

                                End If

                            End If

142                     Next LoopC

144                     If LenB(lista) <> 0 Then lista = Left$(lista, Len(lista) - 2)
146                     Call WriteConsoleMsg(UserIndex, "Los personajes con ip " & ip & " son: " & lista, FontTypeNames.FONTTYPE_INFO)

                    End If

                Else
148                 Call WriteConsoleMsg(UserIndex, "No hay ningun personaje con ese nick", FontTypeNames.FONTTYPE_INFO)

                End If

            End If
        
            'If we got here then packet is complete, copy data back to original queue
150         Call .incomingData.CopyBuffer(Buffer)

        End With

ErrHandler:

        Dim Error As Long

152     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
154     Set Buffer = Nothing
    
156     If Error <> 0 Then Err.raise Error

End Sub

''
' Handles the "IPToNick" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleIPToNick(ByVal UserIndex As Integer)
        
        On Error GoTo HandleIPToNick_Err
        

        '***************************************************
        'Author: Nicolas Matias Gonzalez (NIGO)
        'Last Modification: 12/29/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 5 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
104     With UserList(UserIndex)
            'Remove packet ID
106         Call .incomingData.ReadByte
        
            Dim ip    As String

            Dim LoopC As Long

            Dim lista As String

            Dim priv  As PlayerType
        
108         ip = .incomingData.ReadByte() & "."
110         ip = ip & .incomingData.ReadByte() & "."
112         ip = ip & .incomingData.ReadByte() & "."
114         ip = ip & .incomingData.ReadByte()
        
116         If .flags.Privilegios And (PlayerType.user Or PlayerType.Consejero Or PlayerType.RoleMaster) Then Exit Sub
        
118         Call LogGM(.name, "IP2NICK Solicito los Nicks de IP " & ip)
        
120         If .flags.Privilegios And (PlayerType.Dios Or PlayerType.Admin) Then
122             priv = PlayerType.user Or PlayerType.Consejero Or PlayerType.SemiDios Or PlayerType.Dios Or PlayerType.Admin
            Else
124             priv = PlayerType.user

            End If

126         For LoopC = 1 To LastUser

128             If UserList(LoopC).ip = ip Then
130                 If LenB(UserList(LoopC).name) <> 0 And UserList(LoopC).flags.UserLogged Then
132                     If UserList(LoopC).flags.Privilegios And priv Then
134                         lista = lista & UserList(LoopC).name & ", "

                        End If

                    End If

                End If

136         Next LoopC
        
138         If LenB(lista) <> 0 Then lista = Left$(lista, Len(lista) - 2)
140         Call WriteConsoleMsg(UserIndex, "Los personajes con ip " & ip & " son: " & lista, FontTypeNames.FONTTYPE_INFO)

        End With

        
        Exit Sub

HandleIPToNick_Err:
142     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleIPToNick", Erl)
144     Resume Next
        
End Sub

''
' Handles the "GuildOnlineMembers" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleGuildOnlineMembers(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Nicolas Matias Gonzalez (NIGO)
        'Last Modification: 12/29/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            Dim GuildName As String

            Dim tGuild    As Integer
        
110         GuildName = Buffer.ReadASCIIString()
        
112         If (InStrB(GuildName, "+") <> 0) Then
114             GuildName = Replace(GuildName, "+", " ")

            End If
        
116         If (Not .flags.Privilegios And PlayerType.RoleMaster) <> 0 And (.flags.Privilegios And (PlayerType.Admin Or PlayerType.Dios Or PlayerType.SemiDios)) <> 0 Then
118             tGuild = GuildIndex(GuildName)
            
120             If tGuild > 0 Then
122                 Call WriteConsoleMsg(UserIndex, "Clan " & UCase(GuildName) & ": " & modGuilds.m_ListaDeMiembrosOnline(UserIndex, tGuild), FontTypeNames.FONTTYPE_GUILDMSG)

                End If

            End If
        
            'If we got here then packet is complete, copy data back to original queue
124         Call .incomingData.CopyBuffer(Buffer)

        End With

ErrHandler:

        Dim Error As Long

126     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
128     Set Buffer = Nothing
    
130     If Error <> 0 Then Err.raise Error

End Sub

''
' Handles the "TeleportCreate" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleTeleportCreate(ByVal UserIndex As Integer)
        
        On Error GoTo HandleTeleportCreate_Err
        

        '***************************************************
        'Author: Nicolas Matias Gonzalez (NIGO)
        'Last Modification: 12/29/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 5 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
104     With UserList(UserIndex)
            'Remove packet ID
106         Call .incomingData.ReadByte
        
            Dim Mapa As Integer

            Dim X    As Byte

            Dim Y    As Byte
        
108         Mapa = .incomingData.ReadInteger()
110         X = .incomingData.ReadByte()
112         Y = .incomingData.ReadByte()
        
114         If .flags.Privilegios And (PlayerType.user Or PlayerType.Consejero Or PlayerType.SemiDios) Then Exit Sub
        
116         Call LogGM(.name, "/CT " & Mapa & "," & X & "," & Y)
        
118         If Not MapaValido(Mapa) Or Not InMapBounds(Mapa, X, Y) Then Exit Sub
        
120         If MapData(.Pos.Map, .Pos.X, .Pos.Y - 1).ObjInfo.ObjIndex > 0 Then Exit Sub
        
122         If MapData(.Pos.Map, .Pos.X, .Pos.Y - 1).TileExit.Map > 0 Then Exit Sub
        
124         If MapData(Mapa, X, Y).ObjInfo.ObjIndex > 0 Then
126             Call WriteConsoleMsg(UserIndex, "Hay un objeto en el piso en ese lugar", FontTypeNames.FONTTYPE_INFO)
                Exit Sub

            End If
        
128         If MapData(Mapa, X, Y).TileExit.Map > 0 Then
130             Call WriteConsoleMsg(UserIndex, "No podés crear un teleport que apunte a la entrada de otro.", FontTypeNames.FONTTYPE_INFO)
                Exit Sub

            End If
        
            Rem Call WriteParticleFloorCreate(UserIndex, 37, -1, .Pos.map, .Pos.X, .Pos.Y - 1)
        
            Dim Objeto As obj
        
132         Objeto.Amount = 1
134         Objeto.ObjIndex = 378
136         Call MakeObj(Objeto, .Pos.Map, .Pos.X, .Pos.Y - 1)
        
138         With MapData(.Pos.Map, .Pos.X, .Pos.Y - 1)
140             .TileExit.Map = Mapa
142             .TileExit.X = X
144             .TileExit.Y = Y

            End With

        End With

        
        Exit Sub

HandleTeleportCreate_Err:
146     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleTeleportCreate", Erl)
148     Resume Next
        
End Sub

''
' Handles the "TeleportDestroy" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleTeleportDestroy(ByVal UserIndex As Integer)
        
        On Error GoTo HandleTeleportDestroy_Err
        

        '***************************************************
        'Author: Nicolas Matias Gonzalez (NIGO)
        'Last Modification: 12/29/06
        '
        '***************************************************
100     With UserList(UserIndex)

            Dim Mapa As Integer

            Dim X    As Byte

            Dim Y    As Byte
        
            'Remove packet ID
102         Call .incomingData.ReadByte
        
            '/dt
104         If .flags.Privilegios And (PlayerType.user Or PlayerType.Consejero Or PlayerType.SemiDios) Then Exit Sub
        
106         Mapa = .flags.TargetMap
108         X = .flags.TargetX
110         Y = .flags.TargetY
        
112         If Not InMapBounds(Mapa, X, Y) Then Exit Sub
        
114         With MapData(Mapa, X, Y)

116             If .ObjInfo.ObjIndex = 0 Then Exit Sub
            
118             If ObjData(.ObjInfo.ObjIndex).OBJType = eOBJType.otTeleport And .TileExit.Map > 0 Then
120                 Call LogGM(UserList(UserIndex).name, "/DT: " & Mapa & "," & X & "," & Y)
                
122                 Call EraseObj(.ObjInfo.Amount, Mapa, X, Y)
                
124                 If MapData(.TileExit.Map, .TileExit.X, .TileExit.Y).ObjInfo.ObjIndex = 651 Then
126                     Call EraseObj(1, .TileExit.Map, .TileExit.X, .TileExit.Y)

                    End If
                
128                 .TileExit.Map = 0
130                 .TileExit.X = 0
132                 .TileExit.Y = 0

                End If

            End With

        End With

        
        Exit Sub

HandleTeleportDestroy_Err:
134     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleTeleportDestroy", Erl)
136     Resume Next
        
End Sub

''
' Handles the "RainToggle" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleRainToggle(ByVal UserIndex As Integer)
        
        On Error GoTo HandleRainToggle_Err
        

        '***************************************************
        'Author: Nicolas Matias Gonzalez (NIGO)
        'Last Modification: 12/29/06
        '
        '***************************************************
100     With UserList(UserIndex)
            'Remove packet ID
102         Call .incomingData.ReadByte
        
104         If .flags.Privilegios And (PlayerType.user Or PlayerType.Consejero) Then Exit Sub
        
106         Call LogGM(.name, "/LLUVIA")
108         Lloviendo = Not Lloviendo
110         Nebando = Not Nebando
        
112         Call SendData(SendTarget.ToAll, 0, PrepareMessageRainToggle())
114         Call SendData(SendTarget.ToAll, 0, PrepareMessageNevarToggle())

116         If Lloviendo Then
118             Call SendData(SendTarget.ToAll, 0, PrepareMessagePlayWave(404, NO_3D_SOUND, NO_3D_SOUND)) ' Explota un trueno
120             Call SendData(SendTarget.ToAll, 0, PrepareMessageFlashScreen(&HF5D3F3, 250)) 'Rayo
122             Call ApagarFogatas

            End If

        End With

        
        Exit Sub

HandleRainToggle_Err:
124     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleRainToggle", Erl)
126     Resume Next
        
End Sub

''
' Handles the "SetCharDescription" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleSetCharDescription(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Nicolas Matias Gonzalez (NIGO)
        'Last Modification: 12/29/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            Dim tUser As Integer

            Dim Desc  As String
        
110         Desc = Buffer.ReadASCIIString()
        
112         If (.flags.Privilegios And (PlayerType.Dios Or PlayerType.Admin)) <> 0 Or (.flags.Privilegios And PlayerType.RoleMaster) <> 0 Then
114             tUser = .flags.TargetUser

116             If tUser > 0 Then
118                 UserList(tUser).DescRM = Desc
                Else
120                 Call WriteConsoleMsg(UserIndex, "Haz click sobre un personaje antes!", FontTypeNames.FONTTYPE_INFO)

                End If

            End If
        
            'If we got here then packet is complete, copy data back to original queue
122         Call .incomingData.CopyBuffer(Buffer)

        End With

ErrHandler:

        Dim Error As Long

124     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
126     Set Buffer = Nothing
    
128     If Error <> 0 Then Err.raise Error

End Sub

''
' Handles the "ForceMIDIToMap" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HanldeForceMIDIToMap(ByVal UserIndex As Integer)
        
        On Error GoTo HanldeForceMIDIToMap_Err
        

        '***************************************************
        'Author: Nicolas Matias Gonzalez (NIGO)
        'Last Modification: 12/29/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 4 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
104     With UserList(UserIndex)
            'Remove packet ID
106         Call .incomingData.ReadByte
        
            Dim midiID As Byte

            Dim Mapa   As Integer
        
108         midiID = .incomingData.ReadByte
110         Mapa = .incomingData.ReadInteger
        
            'Solo dioses, admins y RMS
112         If .flags.Privilegios And (PlayerType.Dios Or PlayerType.Admin Or PlayerType.RoleMaster) Then

                'Si el mapa no fue enviado tomo el actual
114             If Not InMapBounds(Mapa, 50, 50) Then
116                 Mapa = .Pos.Map

                End If
        
118             If midiID = 0 Then
                    'Ponemos el default del mapa
120                 Call SendData(SendTarget.toMap, Mapa, PrepareMessagePlayMidi(MapInfo(.Pos.Map).music_numberLow))
                Else
                    'Ponemos el pedido por el GM
122                 Call SendData(SendTarget.toMap, Mapa, PrepareMessagePlayMidi(midiID))

                End If

            End If

        End With

        
        Exit Sub

HanldeForceMIDIToMap_Err:
124     Call RegistrarError(Err.Number, Err.Description, "Protocol.HanldeForceMIDIToMap", Erl)
126     Resume Next
        
End Sub

''
' Handles the "ForceWAVEToMap" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleForceWAVEToMap(ByVal UserIndex As Integer)
        
        On Error GoTo HandleForceWAVEToMap_Err
        

        '***************************************************
        'Author: Nicolas Matias Gonzalez (NIGO)
        'Last Modification: 12/29/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 6 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
104     With UserList(UserIndex)
            'Remove packet ID
106         Call .incomingData.ReadByte
        
            Dim waveID As Byte

            Dim Mapa   As Integer

            Dim X      As Byte

            Dim Y      As Byte
        
108         waveID = .incomingData.ReadByte()
110         Mapa = .incomingData.ReadInteger()
112         X = .incomingData.ReadByte()
114         Y = .incomingData.ReadByte()
        
            'Solo dioses, admins y RMS
116         If .flags.Privilegios And (PlayerType.Dios Or PlayerType.Admin Or PlayerType.RoleMaster) Then

                'Si el mapa no fue enviado tomo el actual
118             If Not InMapBounds(Mapa, X, Y) Then
120                 Mapa = .Pos.Map
122                 X = .Pos.X
124                 Y = .Pos.Y

                End If
            
                'Ponemos el pedido por el GM
126             Call SendData(SendTarget.toMap, Mapa, PrepareMessagePlayWave(waveID, X, Y))

            End If

        End With

        
        Exit Sub

HandleForceWAVEToMap_Err:
128     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleForceWAVEToMap", Erl)
130     Resume Next
        
End Sub

''
' Handles the "RoyalArmyMessage" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleRoyalArmyMessage(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Nicolas Matias Gonzalez (NIGO)
        'Last Modification: 12/29/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            Dim message As String

110         message = Buffer.ReadASCIIString()
        
            'Solo dioses, admins y RMS
112         If .flags.Privilegios And (PlayerType.Dios Or PlayerType.Admin Or PlayerType.RoleMaster) Then
114             Call SendData(SendTarget.ToRealYRMs, 0, PrepareMessageConsoleMsg("ARMADA REAL> " & message, FontTypeNames.FONTTYPE_TALK))

            End If
        
            'If we got here then packet is complete, copy data back to original queue
116         Call .incomingData.CopyBuffer(Buffer)

        End With

ErrHandler:

        Dim Error As Long

118     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
120     Set Buffer = Nothing
    
122     If Error <> 0 Then Err.raise Error

End Sub

''
' Handles the "ChaosLegionMessage" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleChaosLegionMessage(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Nicolas Matias Gonzalez (NIGO)
        'Last Modification: 12/29/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            Dim message As String

110         message = Buffer.ReadASCIIString()
        
            'Solo dioses, admins y RMS
112         If .flags.Privilegios And (PlayerType.Dios Or PlayerType.Admin Or PlayerType.RoleMaster) Then
114             Call SendData(SendTarget.ToCaosYRMs, 0, PrepareMessageConsoleMsg("FUERZAS DEL CAOS> " & message, FontTypeNames.FONTTYPE_TALK))

            End If
        
            'If we got here then packet is complete, copy data back to original queue
116         Call .incomingData.CopyBuffer(Buffer)

        End With

ErrHandler:

        Dim Error As Long

118     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
120     Set Buffer = Nothing
    
122     If Error <> 0 Then Err.raise Error

End Sub

''
' Handles the "CitizenMessage" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleCitizenMessage(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Nicolas Matias Gonzalez (NIGO)
        'Last Modification: 12/29/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            Dim message As String

110         message = Buffer.ReadASCIIString()
        
            'Solo dioses, admins y RMS
112         If .flags.Privilegios And (PlayerType.Dios Or PlayerType.Admin Or PlayerType.RoleMaster) Then
114             Call SendData(SendTarget.ToCiudadanosYRMs, 0, PrepareMessageConsoleMsg("CIUDADANOS> " & message, FontTypeNames.FONTTYPE_TALK))

            End If
        
            'If we got here then packet is complete, copy data back to original queue
116         Call .incomingData.CopyBuffer(Buffer)

        End With

ErrHandler:

        Dim Error As Long

118     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
120     Set Buffer = Nothing
    
122     If Error <> 0 Then Err.raise Error

End Sub

''
' Handles the "CriminalMessage" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleCriminalMessage(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Nicolas Matias Gonzalez (NIGO)
        'Last Modification: 12/29/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            Dim message As String

110         message = Buffer.ReadASCIIString()
        
            'Solo dioses, admins y RMS
112         If .flags.Privilegios And (PlayerType.Dios Or PlayerType.Admin Or PlayerType.RoleMaster) Then
114             Call SendData(SendTarget.ToCriminalesYRMs, 0, PrepareMessageConsoleMsg("CRIMINALES> " & message, FontTypeNames.FONTTYPE_TALK))

            End If
        
            'If we got here then packet is complete, copy data back to original queue
116         Call .incomingData.CopyBuffer(Buffer)

        End With

ErrHandler:

        Dim Error As Long

118     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
120     Set Buffer = Nothing
    
122     If Error <> 0 Then Err.raise Error

End Sub

''
' Handles the "TalkAsNPC" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleTalkAsNPC(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Nicolas Matias Gonzalez (NIGO)
        'Last Modification: 12/29/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            Dim message As String

110         message = Buffer.ReadASCIIString()
        
            'Solo dioses, admins y RMS
112         If .flags.Privilegios And (PlayerType.Dios Or PlayerType.Admin Or PlayerType.RoleMaster) Then

                'Asegurarse haya un NPC seleccionado
114             If .flags.TargetNPC > 0 Then
116                 Call SendData(SendTarget.ToNPCArea, .flags.TargetNPC, PrepareMessageChatOverHead(message, NpcList(.flags.TargetNPC).Char.CharIndex, vbWhite))
                Else
118                 Call WriteConsoleMsg(UserIndex, "Debes seleccionar el NPC por el que quieres hablar antes de usar este comando", FontTypeNames.FONTTYPE_INFO)

                End If

            End If
        
            'If we got here then packet is complete, copy data back to original queue
120         Call .incomingData.CopyBuffer(Buffer)

        End With

ErrHandler:

        Dim Error As Long

122     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
124     Set Buffer = Nothing
    
126     If Error <> 0 Then Err.raise Error

End Sub

''
' Handles the "DestroyAllItemsInArea" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleDestroyAllItemsInArea(ByVal UserIndex As Integer)
        
        On Error GoTo HandleDestroyAllItemsInArea_Err
        

        '***************************************************
        'Author: Nicolas Matias Gonzalez (NIGO)
        'Last Modification: 12/30/06
        '
        '***************************************************
100     With UserList(UserIndex)
            'Remove packet ID
102         Call .incomingData.ReadByte
        
104         If .flags.Privilegios And (PlayerType.user Or PlayerType.Consejero Or PlayerType.SemiDios) Then Exit Sub
        
            Dim X As Long

            Dim Y As Long
        
106         For Y = .Pos.Y - MinYBorder + 1 To .Pos.Y + MinYBorder - 1
108             For X = .Pos.X - MinXBorder + 1 To .Pos.X + MinXBorder - 1

110                 If X > 0 And Y > 0 And X < 101 And Y < 101 Then
112                     If MapData(.Pos.Map, X, Y).ObjInfo.ObjIndex > 0 Then
114                         If ItemNoEsDeMapa(MapData(.Pos.Map, X, Y).ObjInfo.ObjIndex) Then
116                             Call EraseObj(MAX_INVENTORY_OBJS, .Pos.Map, X, Y)

                            End If

                        End If

                    End If

118             Next X
120         Next Y
        
122         Call LogGM(UserList(UserIndex).name, "/MASSDEST")

        End With

        
        Exit Sub

HandleDestroyAllItemsInArea_Err:
124     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleDestroyAllItemsInArea", Erl)
126     Resume Next
        
End Sub

''
' Handles the "AcceptRoyalCouncilMember" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleAcceptRoyalCouncilMember(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Nicolas Matias Gonzalez (NIGO)
        'Last Modification: 12/30/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            Dim UserName As String

            Dim tUser    As Integer

            Dim LoopC    As Byte
        
110         UserName = Buffer.ReadASCIIString()
        
112         If (Not .flags.Privilegios And PlayerType.RoleMaster) <> 0 And (.flags.Privilegios And (PlayerType.Admin Or PlayerType.Dios)) Then
114             tUser = NameIndex(UserName)

116             If tUser <= 0 Then
118                 Call WriteConsoleMsg(UserIndex, "Usuario offline", FontTypeNames.FONTTYPE_INFO)
                Else
120                 Call SendData(SendTarget.ToAll, 0, PrepareMessageConsoleMsg(UserName & " fue aceptado en el honorable Consejo Real de Banderbill.", FontTypeNames.FONTTYPE_CONSEJO))

122                 With UserList(tUser)

124                     If .flags.Privilegios And PlayerType.ChaosCouncil Then .flags.Privilegios = .flags.Privilegios - PlayerType.ChaosCouncil
126                     If Not .flags.Privilegios And PlayerType.RoyalCouncil Then .flags.Privilegios = .flags.Privilegios + PlayerType.RoyalCouncil
                    
128                     Call WarpUserChar(tUser, .Pos.Map, .Pos.X, .Pos.Y, False)

                    End With

                End If

            End If
        
            'If we got here then packet is complete, copy data back to original queue
130         Call .incomingData.CopyBuffer(Buffer)

        End With

ErrHandler:

        Dim Error As Long

132     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
134     Set Buffer = Nothing
    
136     If Error <> 0 Then Err.raise Error

End Sub

''
' Handles the "ChaosCouncilMember" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleAcceptChaosCouncilMember(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Nicolas Matias Gonzalez (NIGO)
        'Last Modification: 12/30/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            Dim UserName As String

            Dim tUser    As Integer

            Dim LoopC    As Byte
        
110         UserName = Buffer.ReadASCIIString()
        
112         If (Not .flags.Privilegios And PlayerType.RoleMaster) <> 0 And (.flags.Privilegios And (PlayerType.Admin Or PlayerType.Dios)) Then
114             tUser = NameIndex(UserName)

116             If tUser <= 0 Then
118                 Call WriteConsoleMsg(UserIndex, "Usuario offline", FontTypeNames.FONTTYPE_INFO)
                Else
120                 Call SendData(SendTarget.ToAll, 0, PrepareMessageConsoleMsg(UserName & " fue aceptado en el Consejo de la Legiín Oscura.", FontTypeNames.FONTTYPE_CONSEJO))
                
122                 With UserList(tUser)

124                     If .flags.Privilegios And PlayerType.RoyalCouncil Then .flags.Privilegios = .flags.Privilegios - PlayerType.RoyalCouncil
126                     If Not .flags.Privilegios And PlayerType.ChaosCouncil Then .flags.Privilegios = .flags.Privilegios + PlayerType.ChaosCouncil

128                     Call WarpUserChar(tUser, .Pos.Map, .Pos.X, .Pos.Y, False)

                    End With

                End If

            End If
        
            'If we got here then packet is complete, copy data back to original queue
130         Call .incomingData.CopyBuffer(Buffer)

        End With

ErrHandler:

        Dim Error As Long

132     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
134     Set Buffer = Nothing
    
136     If Error <> 0 Then Err.raise Error

End Sub

''
' Handles the "ItemsInTheFloor" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleItemsInTheFloor(ByVal UserIndex As Integer)
        
        On Error GoTo HandleItemsInTheFloor_Err
        

        '***************************************************
        'Author: Nicolas Matias Gonzalez (NIGO)
        'Last Modification: 12/30/06
        '
        '***************************************************
100     With UserList(UserIndex)
            'Remove packet ID
102         Call .incomingData.ReadByte
        
104         If .flags.Privilegios And (PlayerType.user Or PlayerType.Consejero Or PlayerType.SemiDios) Then Exit Sub
        
            Dim tObj  As Integer

            Dim lista As String

            Dim X     As Long

            Dim Y     As Long
        
106         For X = 5 To 95
108             For Y = 5 To 95
110                 tObj = MapData(.Pos.Map, X, Y).ObjInfo.ObjIndex

112                 If tObj > 0 Then
114                     If ObjData(tObj).OBJType <> eOBJType.otArboles Then
116                         Call WriteConsoleMsg(UserIndex, "(" & X & "," & Y & ") " & ObjData(tObj).name, FontTypeNames.FONTTYPE_INFO)

                        End If

                    End If

118             Next Y
120         Next X

        End With

        
        Exit Sub

HandleItemsInTheFloor_Err:
122     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleItemsInTheFloor", Erl)
124     Resume Next
        
End Sub

''
' Handles the "MakeDumb" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleMakeDumb(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Nicolas Matias Gonzalez (NIGO)
        'Last Modification: 12/30/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            Dim UserName As String

            Dim tUser    As Integer
        
110         UserName = Buffer.ReadASCIIString()
        
112         If (Not .flags.Privilegios And PlayerType.RoleMaster) <> 0 And (.flags.Privilegios And (PlayerType.Admin Or PlayerType.Dios)) Then
114             tUser = NameIndex(UserName)

                'para deteccion de aoice
116             If tUser <= 0 Then
118                 Call WriteConsoleMsg(UserIndex, "Offline", FontTypeNames.FONTTYPE_INFO)
                Else
120                 Call WriteDumb(tUser)

                End If

            End If
        
            'If we got here then packet is complete, copy data back to original queue
122         Call .incomingData.CopyBuffer(Buffer)

        End With

ErrHandler:

        Dim Error As Long

124     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
126     Set Buffer = Nothing
    
128     If Error <> 0 Then Err.raise Error

End Sub

''
' Handles the "MakeDumbNoMore" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleMakeDumbNoMore(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Nicolas Matias Gonzalez (NIGO)
        'Last Modification: 12/30/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            Dim UserName As String

            Dim tUser    As Integer
        
110         UserName = Buffer.ReadASCIIString()
        
112         If (Not .flags.Privilegios And PlayerType.RoleMaster) <> 0 And (.flags.Privilegios And (PlayerType.Admin Or PlayerType.Dios)) Then
114             tUser = NameIndex(UserName)

                'para deteccion de aoice
116             If tUser <= 0 Then
118                 Call WriteConsoleMsg(UserIndex, "Offline", FontTypeNames.FONTTYPE_INFO)
                Else
120                 Call WriteDumbNoMore(tUser)
                

                End If

            End If
        
            'If we got here then packet is complete, copy data back to original queue
122         Call .incomingData.CopyBuffer(Buffer)

        End With

ErrHandler:

        Dim Error As Long

124     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
126     Set Buffer = Nothing
    
128     If Error <> 0 Then Err.raise Error

End Sub

''
' Handles the "DumpIPTables" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleDumpIPTables(ByVal UserIndex As Integer)
        
        On Error GoTo HandleDumpIPTables_Err
        

        '***************************************************
        'Author: Nicolas Matias Gonzalez (NIGO)
        'Last Modification: 12/30/06
        '
        '***************************************************
100     With UserList(UserIndex)
            'Remove packet ID
102         Call .incomingData.ReadByte
        
104         If .flags.Privilegios And (PlayerType.user Or PlayerType.Consejero Or PlayerType.SemiDios) Then Exit Sub
        
106         Call SecurityIp.DumpTables

        End With

        
        Exit Sub

HandleDumpIPTables_Err:
108     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleDumpIPTables", Erl)
110     Resume Next
        
End Sub

''
' Handles the "CouncilKick" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleCouncilKick(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Nicolas Matias Gonzalez (NIGO)
        'Last Modification: 12/30/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            Dim UserName As String

            Dim tUser    As Integer
        
110         UserName = Buffer.ReadASCIIString()
        
112         If (Not .flags.Privilegios And PlayerType.RoleMaster) <> 0 And (.flags.Privilegios And (PlayerType.Admin Or PlayerType.Dios)) <> 0 Then
114             tUser = NameIndex(UserName)

116             If tUser <= 0 Then
118                 If PersonajeExiste(UserName) Then
120                     Call WriteConsoleMsg(UserIndex, "Usuario offline, echando de los consejos", FontTypeNames.FONTTYPE_INFO)
                    
122                     If Database_Enabled Then
124                         Call EcharConsejoDatabase(UserName)
                        Else
126                         Call WriteVar(CharPath & UserName & ".chr", "CONSEJO", "PERTENECE", 0)
128                         Call WriteVar(CharPath & UserName & ".chr", "CONSEJO", "PERTENECECAOS", 0)

                        End If

                    Else
130                     Call WriteConsoleMsg(UserIndex, "No existe el personaje.", FontTypeNames.FONTTYPE_INFO)

                    End If

                Else

132                 With UserList(tUser)

134                     If .flags.Privilegios And PlayerType.RoyalCouncil Then
136                         Call WriteConsoleMsg(tUser, "Has sido echado del consejo de Banderbill", FontTypeNames.FONTTYPE_TALK)
138                         .flags.Privilegios = .flags.Privilegios - PlayerType.RoyalCouncil
                        
140                         Call WarpUserChar(tUser, .Pos.Map, .Pos.X, .Pos.Y)
142                         Call SendData(SendTarget.ToAll, 0, PrepareMessageConsoleMsg(UserName & " fue expulsado del consejo de Banderbill", FontTypeNames.FONTTYPE_CONSEJO))

                        End If
                    
144                     If .flags.Privilegios And PlayerType.ChaosCouncil Then
146                         Call WriteConsoleMsg(tUser, "Has sido echado del consejo de la Legiín Oscura", FontTypeNames.FONTTYPE_TALK)
148                         .flags.Privilegios = .flags.Privilegios - PlayerType.ChaosCouncil
                        
150                         Call WarpUserChar(tUser, .Pos.Map, .Pos.X, .Pos.Y)
152                         Call SendData(SendTarget.ToAll, 0, PrepareMessageConsoleMsg(UserName & " fue expulsado del consejo de la Legiín Oscura", FontTypeNames.FONTTYPE_CONSEJO))

                        End If

                    End With

                End If

            End If
        
            'If we got here then packet is complete, copy data back to original queue
154         Call .incomingData.CopyBuffer(Buffer)

        End With

ErrHandler:

        Dim Error As Long

156     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
158     Set Buffer = Nothing
    
160     If Error <> 0 Then Err.raise Error

End Sub

''
' Handles the "SetTrigger" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleSetTrigger(ByVal UserIndex As Integer)
        
        On Error GoTo HandleSetTrigger_Err
        

        '***************************************************
        'Author: Nicolas Matias Gonzalez (NIGO)
        'Last Modification: 12/30/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 2 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
104     With UserList(UserIndex)
            'Remove packet ID
106         Call .incomingData.ReadByte
        
            Dim tTrigger As Byte

            Dim tLog     As String
        
108         tTrigger = .incomingData.ReadByte()
        
110         If .flags.Privilegios And (PlayerType.user Or PlayerType.Consejero Or PlayerType.SemiDios Or PlayerType.RoleMaster) Then Exit Sub
        
112         If tTrigger >= 0 Then
114             MapData(.Pos.Map, .Pos.X, .Pos.Y).trigger = tTrigger
116             tLog = "Trigger " & tTrigger & " en mapa " & .Pos.Map & " " & .Pos.X & "," & .Pos.Y
            
118             Call LogGM(.name, tLog)
120             Call WriteConsoleMsg(UserIndex, tLog, FontTypeNames.FONTTYPE_INFO)

            End If

        End With

        
        Exit Sub

HandleSetTrigger_Err:
122     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleSetTrigger", Erl)
124     Resume Next
        
End Sub

''
' Handles the "AskTrigger" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleAskTrigger(ByVal UserIndex As Integer)
        
        On Error GoTo HandleAskTrigger_Err
        

        '***************************************************
        'Author: Nicolas Matias Gonzalez (NIGO)
        'Last Modification: 04/13/07
        '
        '***************************************************
        Dim tTrigger As Byte
    
100     With UserList(UserIndex)
            'Remove packet ID
102         Call .incomingData.ReadByte
        
104         If .flags.Privilegios And (PlayerType.user Or PlayerType.Consejero Or PlayerType.SemiDios Or PlayerType.RoleMaster) Then Exit Sub
        
106         tTrigger = MapData(.Pos.Map, .Pos.X, .Pos.Y).trigger
        
108         Call LogGM(.name, "Miro el trigger en " & .Pos.Map & "," & .Pos.X & "," & .Pos.Y & ". Era " & tTrigger)
        
110         Call WriteConsoleMsg(UserIndex, "Trigger " & tTrigger & " en mapa " & .Pos.Map & " " & .Pos.X & ", " & .Pos.Y, FontTypeNames.FONTTYPE_INFO)

        End With

        
        Exit Sub

HandleAskTrigger_Err:
112     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleAskTrigger", Erl)
114     Resume Next
        
End Sub

''
' Handles the "BannedIPList" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleBannedIPList(ByVal UserIndex As Integer)
        
        On Error GoTo HandleBannedIPList_Err
        

        '***************************************************
        'Author: Nicolas Matias Gonzalez (NIGO)
        'Last Modification: 12/30/06
        '
        '***************************************************
100     With UserList(UserIndex)
            'Remove packet ID
102         Call .incomingData.ReadByte
        
104         If .flags.Privilegios And (PlayerType.user Or PlayerType.Consejero Or PlayerType.SemiDios Or PlayerType.RoleMaster) Then Exit Sub
        
            Dim lista As String

            Dim LoopC As Long
        
106         Call LogGM(.name, "/BANIPLIST")
        
108         For LoopC = 1 To BanIps.Count
110             lista = lista & BanIps.Item(LoopC) & ", "
112         Next LoopC
        
114         If LenB(lista) <> 0 Then lista = Left$(lista, Len(lista) - 2)
        
116         Call WriteConsoleMsg(UserIndex, lista, FontTypeNames.FONTTYPE_INFO)

        End With

        
        Exit Sub

HandleBannedIPList_Err:
118     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleBannedIPList", Erl)
120     Resume Next
        
End Sub

''
' Handles the "BannedIPReload" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleBannedIPReload(ByVal UserIndex As Integer)
        
        On Error GoTo HandleBannedIPReload_Err
        

        '***************************************************
        'Author: Nicolas Matias Gonzalez (NIGO)
        'Last Modification: 12/30/06
        '
        '***************************************************
100     With UserList(UserIndex)
            'Remove packet ID
102         Call .incomingData.ReadByte
        
104         If .flags.Privilegios And (PlayerType.user Or PlayerType.Consejero Or PlayerType.SemiDios Or PlayerType.RoleMaster) Then Exit Sub
        
106         Call BanIpGuardar
108         Call BanIpCargar

        End With

        
        Exit Sub

HandleBannedIPReload_Err:
110     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleBannedIPReload", Erl)
112     Resume Next
        
End Sub

''
' Handles the "GuildBan" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleGuildBan(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Nicolas Matias Gonzalez (NIGO)
        'Last Modification: 12/30/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            Dim GuildName   As String

            Dim cantMembers As Integer

            Dim LoopC       As Long

            Dim member      As String

            Dim Count       As Byte

            Dim tIndex      As Integer

            Dim tFile       As String
        
110         GuildName = Buffer.ReadASCIIString()
        
112         If (Not .flags.Privilegios And PlayerType.RoleMaster) <> 0 And (.flags.Privilegios And (PlayerType.Admin Or PlayerType.Dios)) Then
114             tFile = App.Path & "\guilds\" & GuildName & "-members.mem"
            
116             If Not FileExist(tFile) Then
118                 Call WriteConsoleMsg(UserIndex, "No existe el clan: " & GuildName, FontTypeNames.FONTTYPE_INFO)
                Else
120                 Call SendData(SendTarget.ToAll, 0, PrepareMessageConsoleMsg(.name & " banned al clan " & UCase$(GuildName), FontTypeNames.FONTTYPE_FIGHT))
                
                    'baneamos a los miembros
122                 Call LogGM(.name, "BANCLAN a " & UCase$(GuildName))
                
124                 cantMembers = val(GetVar(tFile, "INIT", "NroMembers"))
                
126                 For LoopC = 1 To cantMembers
128                     member = GetVar(tFile, "Members", "Member" & LoopC)
                        'member es la victima
130                     Call Ban(member, "Administracion del servidor", "Clan Banned")
                    
132                     Call SendData(SendTarget.ToAll, 0, PrepareMessageConsoleMsg("   " & member & "<" & GuildName & "> ha sido expulsado del servidor.", FontTypeNames.FONTTYPE_FIGHT))
                    
134                     tIndex = NameIndex(member)

136                     If tIndex > 0 Then
                            'esta online
138                         UserList(tIndex).flags.Ban = 1
140                         Call CloseSocket(tIndex)

                        End If
                    
142                     If Database_Enabled Then
144                         Call SaveBanDatabase(member, .name & " - BAN AL CLAN: " & GuildName & ". " & Date & " " & Time, .name)
                        Else
                            'ponemos el flag de ban a 1
146                         Call WriteVar(CharPath & member & ".chr", "BAN", "BANEADO", "1")
148                         Call WriteVar(CharPath & member & ".chr", "BAN", "BannedBy", .name)
150                         Call WriteVar(CharPath & member & ".chr", "BAN", "BanMotivo", "clan baneado")
                            'ponemos la pena
152                         Count = val(GetVar(CharPath & member & ".chr", "PENAS", "Cant"))
154                         Call WriteVar(CharPath & member & ".chr", "PENAS", "Cant", Count + 1)
156                         Call WriteVar(CharPath & member & ".chr", "PENAS", "P" & Count + 1, .name & " - BAN AL CLAN: " & GuildName & ". " & Date & " " & Time)

                        End If

158                 Next LoopC

                End If

            End If
        
            'If we got here then packet is complete, copy data back to original queue
160         Call .incomingData.CopyBuffer(Buffer)

        End With

ErrHandler:

        Dim Error As Long

162     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
164     Set Buffer = Nothing
    
166     If Error <> 0 Then Err.raise Error

End Sub

''
' Handles the "BanIP" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleBanIP(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 12/30/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 6 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            Dim bannedIP As String

            Dim tUser    As Integer

            Dim Reason   As String

            Dim i        As Long
        
            ' Is it by ip??
110         If Buffer.ReadBoolean() Then
112             bannedIP = Buffer.ReadByte() & "."
114             bannedIP = bannedIP & Buffer.ReadByte() & "."
116             bannedIP = bannedIP & Buffer.ReadByte() & "."
118             bannedIP = bannedIP & Buffer.ReadByte()
            Else
120             tUser = NameIndex(Buffer.ReadASCIIString())
            
122             If tUser <= 0 Then
124                 Call WriteConsoleMsg(UserIndex, "El personaje no está online.", FontTypeNames.FONTTYPE_INFO)
                Else
126                 bannedIP = UserList(tUser).ip

                End If

            End If
        
128         Reason = Buffer.ReadASCIIString()
        
130         If LenB(bannedIP) > 0 Then
132             If .flags.Privilegios And (PlayerType.Admin Or PlayerType.Dios) Then
134                 Call LogGM(.name, "/BanIP " & bannedIP & " por " & Reason)
                
136                 If BanIpBuscar(bannedIP) > 0 Then
138                     Call WriteConsoleMsg(UserIndex, "La IP " & bannedIP & " ya se encuentra en la lista de bans.", FontTypeNames.FONTTYPE_INFO)
                        Exit Sub

                    End If
                
140                 Call BanIpAgrega(bannedIP)
142                 Call SendData(SendTarget.ToAdmins, 0, PrepareMessageConsoleMsg(.name & " baneó la IP " & bannedIP & " por " & Reason, FontTypeNames.FONTTYPE_FIGHT))
                
                    'Find every player with that ip and ban him!
144                 For i = 1 To LastUser

146                     If UserList(i).ConnIDValida Then
148                         If UserList(i).ip = bannedIP Then
150                             Call BanCharacter(UserIndex, UserList(i).name, "IP POR " & Reason)

                            End If

                        End If

152                 Next i

                End If

            End If
        
            'If we got here then packet is complete, copy data back to original queue
154         Call .incomingData.CopyBuffer(Buffer)

        End With

ErrHandler:

        Dim Error As Long

156     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
158     Set Buffer = Nothing
    
160     If Error <> 0 Then Err.raise Error

End Sub

''
' Handles the "UnbanIP" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleUnbanIP(ByVal UserIndex As Integer)
        
        On Error GoTo HandleUnbanIP_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 12/30/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 5 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
104     With UserList(UserIndex)
            'Remove packet ID
106         Call .incomingData.ReadByte
        
            Dim bannedIP As String
        
108         bannedIP = .incomingData.ReadByte() & "."
110         bannedIP = bannedIP & .incomingData.ReadByte() & "."
112         bannedIP = bannedIP & .incomingData.ReadByte() & "."
114         bannedIP = bannedIP & .incomingData.ReadByte()
        
116         If .flags.Privilegios And (PlayerType.user Or PlayerType.Consejero Or PlayerType.SemiDios Or PlayerType.RoleMaster) Then Exit Sub
        
118         If BanIpQuita(bannedIP) Then
120             Call WriteConsoleMsg(UserIndex, "La IP """ & bannedIP & """ se ha quitado de la lista de bans.", FontTypeNames.FONTTYPE_INFO)
            Else
122             Call WriteConsoleMsg(UserIndex, "La IP """ & bannedIP & """ NO se encuentra en la lista de bans.", FontTypeNames.FONTTYPE_INFO)

            End If

        End With

        
        Exit Sub

HandleUnbanIP_Err:
124     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleUnbanIP", Erl)
126     Resume Next
        
End Sub

''
' Handles the "CreateItem" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleCreateItem(ByVal UserIndex As Integer)
        
        On Error GoTo HandleCreateItem_Err
        

        '***************************************************
        'Author: Nicolas Matias Gonzalez (NIGO)
        'Last Modification: 12/30/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 5 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
104     With UserList(UserIndex)

            'Remove packet ID
106         Call .incomingData.ReadByte

            Dim tObj    As Integer
            Dim Cuantos As Integer
        
108         tObj = .incomingData.ReadInteger()
110         Cuantos = .incomingData.ReadInteger()
    
            ' Si es usuario, lo sacamos cagando.
112         If Not EsGM(UserIndex) Then Exit Sub
        
            ' Si es Semi-Dios, dejamos crear un item siempre y cuando pueda estar en el inventario.
114         If (.flags.Privilegios And PlayerType.SemiDios) <> 0 And ObjData(tObj).Agarrable = 1 Then Exit Sub

            ' Si hace mas de 10000, lo sacamos cagando.
116         If Cuantos > MAX_INVENTORY_OBJS Then
118             Call WriteConsoleMsg(UserIndex, "Solo podés crear hasta " & CStr(MAX_INVENTORY_OBJS) & " unidades", FontTypeNames.FONTTYPE_TALK)
                Exit Sub
            End If
        
            ' El indice proporcionado supera la cantidad minima o total de items existentes en el juego?
120         If tObj < 1 Or tObj > NumObjDatas Then Exit Sub
        
            ' El nombre del objeto es nulo?
122         If LenB(ObjData(tObj).name) = 0 Then Exit Sub
        
            Dim Objeto As obj
124             Objeto.Amount = Cuantos
126             Objeto.ObjIndex = tObj

            ' Chequeo si el objeto es AGARRABLE(para las puertas, arboles y demas objs. que no deberian estar en el inventario)
            '   0 = SI
            '   1 = NO
128         If ObjData(tObj).Agarrable = 0 Then
            
                ' Trato de meterlo en el inventario.
130             If MeterItemEnInventario(UserIndex, Objeto) Then
132                 Call WriteConsoleMsg(UserIndex, "Has creado " & Objeto.Amount & " unidades de " & ObjData(tObj).name & ".", FontTypeNames.FONTTYPE_INFO)
            
                Else

134                 Call WriteConsoleMsg(UserIndex, "No tenes espacio en tu inventario para crear el item.", FontTypeNames.FONTTYPE_INFO)
                
                    ' Si no hay espacio y es Dios o Admin, lo tiro al piso.
136                 If (.flags.Privilegios And (PlayerType.Admin Or PlayerType.Dios)) <> 0 Then
138                     Call TirarItemAlPiso(.Pos, Objeto)
140                     Call WriteConsoleMsg(UserIndex, "ATENCION: CREASTE [" & Cuantos & "] ITEMS, TIRE E INGRESE /DEST EN CONSOLA PARA DESTRUIR LOS QUE NO NECESITE!!", FontTypeNames.FONTTYPE_GUILD)
                    End If
                
                End If
        
            Else
        
                ' Crear el item NO AGARRARBLE y tirarlo al piso.
                ' Si no hay espacio y es Dios o Admin, lo tiro al piso.
142             If (.flags.Privilegios And (PlayerType.Admin Or PlayerType.Dios)) <> 0 Then
144                 Call TirarItemAlPiso(.Pos, Objeto)
146                 Call WriteConsoleMsg(UserIndex, "ATENCION: CREASTE [" & Cuantos & "] ITEMS, TIRE E INGRESE /DEST EN CONSOLA PARA DESTRUIR LOS QUE NO NECESITE!!", FontTypeNames.FONTTYPE_GUILD)
                End If

            End If
        
            ' Lo registro en los logs.
148         Call LogGM(.name, "/CI: " & tObj & " Cantidad : " & Cuantos)

        End With

        
        Exit Sub

HandleCreateItem_Err:
150     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleCreateItem", Erl)
152     Resume Next
        
End Sub

''
' Handles the "DestroyItems" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleDestroyItems(ByVal UserIndex As Integer)
        
        On Error GoTo HandleDestroyItems_Err
        

        '***************************************************
        'Author: Nicolas Matias Gonzalez (NIGO)
        'Last Modification: 12/30/06
        '
        '***************************************************
100     With UserList(UserIndex)
            'Remove packet ID
102         Call .incomingData.ReadByte
        
104         If .flags.Privilegios And (PlayerType.user Or PlayerType.Consejero Or PlayerType.SemiDios) Then Exit Sub
        
106         If MapData(.Pos.Map, .Pos.X, .Pos.Y).ObjInfo.ObjIndex = 0 Then Exit Sub
        
108         Call LogGM(.name, "/DEST")
        
            ' If ObjData(MapData(.Pos.map, .Pos.X, .Pos.Y).ObjInfo.ObjIndex).OBJType = eOBJType.otTeleport Then
            ''  Call WriteConsoleMsg(UserIndex, "No puede destruir teleports así. Utilice /DT.", FontTypeNames.FONTTYPE_INFO)
            '  Exit Sub
            ' End If
        
110         Call EraseObj(MAX_INVENTORY_OBJS, .Pos.Map, .Pos.X, .Pos.Y)

        End With

        
        Exit Sub

HandleDestroyItems_Err:
112     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleDestroyItems", Erl)
114     Resume Next
        
End Sub

''
' Handles the "ChaosLegionKick" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleChaosLegionKick(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Nicolas Matias Gonzalez (NIGO)
        'Last Modification: 12/30/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            Dim UserName As String

            Dim tUser    As Integer
        
110         UserName = Buffer.ReadASCIIString()
        
112         If (Not .flags.Privilegios And PlayerType.RoleMaster) <> 0 And (.flags.Privilegios And (PlayerType.Admin Or PlayerType.Dios)) <> 0 Then
114             If (InStrB(UserName, "\") <> 0) Then
116                 UserName = Replace(UserName, "\", "")

                End If

118             If (InStrB(UserName, "/") <> 0) Then
120                 UserName = Replace(UserName, "/", "")

                End If

122             tUser = NameIndex(UserName)
            
124             Call LogGM(.name, "ECHO DEL CAOS A: " & UserName)
    
126             If tUser > 0 Then
128                 UserList(tUser).Faccion.FuerzasCaos = 0
130                 UserList(tUser).Faccion.Reenlistadas = 200
132                 Call WriteConsoleMsg(UserIndex, UserName & " expulsado de las fuerzas del caos y prohibida la reenlistada", FontTypeNames.FONTTYPE_INFO)
134                 Call WriteConsoleMsg(tUser, .name & " te ha expulsado en forma definitiva de las fuerzas del caos.", FontTypeNames.FONTTYPE_FIGHT)
                
                Else

136                 If PersonajeExiste(UserName) Then
138                     If Database_Enabled Then
140                         Call EcharLegionDatabase(UserName)
                        Else
142                         Call WriteVar(CharPath & UserName & ".chr", "FACCIONES", "EjercitoCaos", 0)
144                         Call WriteVar(CharPath & UserName & ".chr", "FACCIONES", "Reenlistadas", 200)
146                         Call WriteVar(CharPath & UserName & ".chr", "FACCIONES", "Extra", "Expulsado por " & .name)

                        End If
                    
148                     Call WriteConsoleMsg(UserIndex, UserName & " expulsado de las fuerzas del caos y prohibida la reenlistada", FontTypeNames.FONTTYPE_INFO)
                    Else
150                     Call WriteConsoleMsg(UserIndex, "El personaje " & UserName & " no existe.", FontTypeNames.FONTTYPE_INFO)

                    End If

                End If

            End If
        
            'If we got here then packet is complete, copy data back to original queue
152         Call .incomingData.CopyBuffer(Buffer)

        End With

ErrHandler:

        Dim Error As Long

154     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
156     Set Buffer = Nothing
    
158     If Error <> 0 Then Err.raise Error

End Sub

''
' Handles the "RoyalArmyKick" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleRoyalArmyKick(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Nicolas Matias Gonzalez (NIGO)
        'Last Modification: 12/30/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            Dim UserName As String

            Dim tUser    As Integer
        
110         UserName = Buffer.ReadASCIIString()
        
112         If (Not .flags.Privilegios And PlayerType.RoleMaster) <> 0 And (.flags.Privilegios And (PlayerType.Admin Or PlayerType.Dios)) <> 0 Then
114             If (InStrB(UserName, "\") <> 0) Then
116                 UserName = Replace(UserName, "\", "")

                End If

118             If (InStrB(UserName, "/") <> 0) Then
120                 UserName = Replace(UserName, "/", "")

                End If

122             tUser = NameIndex(UserName)
            
124             Call LogGM(.name, "ECHO DE LA REAL A: " & UserName)
            
126             If tUser > 0 Then
128                 UserList(tUser).Faccion.ArmadaReal = 0
130                 UserList(tUser).Faccion.Reenlistadas = 200
132                 Call WriteConsoleMsg(UserIndex, UserName & " expulsado de las fuerzas reales y prohibida la reenlistada", FontTypeNames.FONTTYPE_INFO)
134                 Call WriteConsoleMsg(tUser, .name & " te ha expulsado en forma definitiva de las fuerzas reales.", FontTypeNames.FONTTYPE_FIGHT)
                
                Else

136                 If PersonajeExiste(UserName) Then
138                     If Database_Enabled Then
140                         Call EcharArmadaDatabase(UserName)
                        Else
142                         Call WriteVar(CharPath & UserName & ".chr", "FACCIONES", "EjercitoReal", 0)
144                         Call WriteVar(CharPath & UserName & ".chr", "FACCIONES", "Reenlistadas", 200)
146                         Call WriteVar(CharPath & UserName & ".chr", "FACCIONES", "Extra", "Expulsado por " & .name)

                        End If

148                     Call WriteConsoleMsg(UserIndex, UserName & " expulsado de las fuerzas reales y prohibida la reenlistada", FontTypeNames.FONTTYPE_INFO)
                    Else
150                     Call WriteConsoleMsg(UserIndex, UserName & ".chr inexistente.", FontTypeNames.FONTTYPE_INFO)

                    End If

                End If

            End If
        
            'If we got here then packet is complete, copy data back to original queue
152         Call .incomingData.CopyBuffer(Buffer)

        End With

ErrHandler:

        Dim Error As Long

154     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
156     Set Buffer = Nothing
    
158     If Error <> 0 Then Err.raise Error

End Sub

''
' Handles the "ForceMIDIAll" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleForceMIDIAll(ByVal UserIndex As Integer)
        
        On Error GoTo HandleForceMIDIAll_Err
        

        '***************************************************
        'Author: Nicolas Matias Gonzalez (NIGO)
        'Last Modification: 12/30/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 2 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
104     With UserList(UserIndex)
            'Remove packet ID
106         Call .incomingData.ReadByte

            Dim midiID As Byte

108         midiID = .incomingData.ReadByte()
        
110         If .flags.Privilegios And (PlayerType.user Or PlayerType.Consejero Or PlayerType.SemiDios) Then Exit Sub
        
112         Call SendData(SendTarget.ToAll, 0, PrepareMessageConsoleMsg(.name & " broadcast musica: " & midiID, FontTypeNames.FONTTYPE_SERVER))
        
114         Call SendData(SendTarget.ToAll, 0, PrepareMessagePlayMidi(midiID))

        End With

        
        Exit Sub

HandleForceMIDIAll_Err:
116     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleForceMIDIAll", Erl)
118     Resume Next
        
End Sub

''
' Handles the "ForceWAVEAll" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleForceWAVEAll(ByVal UserIndex As Integer)
        
        On Error GoTo HandleForceWAVEAll_Err
        

        '***************************************************
        'Author: Nicolas Matias Gonzalez (NIGO)
        'Last Modification: 12/30/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 2 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
104     With UserList(UserIndex)
            'Remove packet ID
106         Call .incomingData.ReadByte

            Dim waveID As Byte

108         waveID = .incomingData.ReadByte()
        
110         If .flags.Privilegios And (PlayerType.user Or PlayerType.Consejero Or PlayerType.SemiDios) Then Exit Sub
        
112         Call SendData(SendTarget.ToAll, 0, PrepareMessagePlayWave(waveID, NO_3D_SOUND, NO_3D_SOUND))

        End With

        
        Exit Sub

HandleForceWAVEAll_Err:
114     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleForceWAVEAll", Erl)
116     Resume Next
        
End Sub

''
' Handles the "RemovePunishment" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleRemovePunishment(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Nicolas Matias Gonzalez (NIGO)
        'Last Modification: 1/05/07
        'Pablo (ToxicWaste): 1/05/07, You can now edit the punishment.
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 6 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            Dim UserName   As String

            Dim punishment As Byte

            Dim NewText    As String
        
110         UserName = Buffer.ReadASCIIString()
112         punishment = Buffer.ReadByte
114         NewText = Buffer.ReadASCIIString()
        
116         If (Not .flags.Privilegios And PlayerType.RoleMaster) <> 0 And (.flags.Privilegios And (PlayerType.Admin Or PlayerType.Dios)) Then
118             If LenB(UserName) = 0 Then
120                 Call WriteConsoleMsg(UserIndex, "Utilice /borrarpena Nick@NumeroDePena@NuevaPena", FontTypeNames.FONTTYPE_INFO)
                Else

122                 If (InStrB(UserName, "\") <> 0) Then
124                     UserName = Replace(UserName, "\", "")

                    End If

126                 If (InStrB(UserName, "/") <> 0) Then
128                     UserName = Replace(UserName, "/", "")

                    End If
                
130                 If PersonajeExiste(UserName) Then
132                     Call LogGM(.name, "Borro la pena " & punishment & " de " & UserName & " y la cambií por: " & NewText)
                    
134                     If Database_Enabled Then
136                         Call CambiarPenaDatabase(UserName, punishment, .name & ": <" & NewText & "> " & Date & " " & Time)
                        Else
138                         Call WriteVar(CharPath & UserName & ".chr", "PENAS", "P" & punishment, .name & ": <" & NewText & "> " & Date & " " & Time)

                        End If
                    
140                     Call WriteConsoleMsg(UserIndex, "Pena Modificada.", FontTypeNames.FONTTYPE_INFO)

                    End If

                End If

            End If
        
            'If we got here then packet is complete, copy data back to original queue
142         Call .incomingData.CopyBuffer(Buffer)

        End With

ErrHandler:

        Dim Error As Long

144     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
146     Set Buffer = Nothing
    
148     If Error <> 0 Then Err.raise Error

End Sub

''
' Handles the "TileBlockedToggle" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleTileBlockedToggle(ByVal UserIndex As Integer)
        
        On Error GoTo HandleTileBlockedToggle_Err
        

        '***************************************************
        'Author: Nicolas Matias Gonzalez (NIGO)
        'Last Modification: 12/30/06
        '
        '***************************************************
100     With UserList(UserIndex)
            'Remove packet ID
102         Call .incomingData.ReadByte
        
104         If .flags.Privilegios And (PlayerType.user Or PlayerType.Consejero) Then Exit Sub

106         Call LogGM(.name, "/BLOQ")
        
108         If MapData(.Pos.Map, .Pos.X, .Pos.Y).Blocked = 0 Then
110             MapData(.Pos.Map, .Pos.X, .Pos.Y).Blocked = eBlock.ALL_SIDES Or eBlock.GM
            Else
112             MapData(.Pos.Map, .Pos.X, .Pos.Y).Blocked = 0

            End If
        
114         Call Bloquear(True, .Pos.Map, .Pos.X, .Pos.Y, IIf(MapData(.Pos.Map, .Pos.X, .Pos.Y).Blocked > 0, eBlock.ALL_SIDES, 0))

        End With

        
        Exit Sub

HandleTileBlockedToggle_Err:
116     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleTileBlockedToggle", Erl)
118     Resume Next
        
End Sub

''
' Handles the "KillNPCNoRespawn" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleKillNPCNoRespawn(ByVal UserIndex As Integer)
        
        On Error GoTo HandleKillNPCNoRespawn_Err
        

        '***************************************************
        'Author: Nicolas Matias Gonzalez (NIGO)
        'Last Modification: 12/30/06
        '
        '***************************************************
100     With UserList(UserIndex)
            'Remove packet ID
102         Call .incomingData.ReadByte
        
104         If .flags.Privilegios And (PlayerType.user Or PlayerType.Consejero) Then Exit Sub
        
106         If .flags.TargetNPC = 0 Then Exit Sub
        
108         Call QuitarNPC(.flags.TargetNPC)
110         Call LogGM(.name, "/MATA " & NpcList(.flags.TargetNPC).name)

        End With

        
        Exit Sub

HandleKillNPCNoRespawn_Err:
112     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleKillNPCNoRespawn", Erl)
114     Resume Next
        
End Sub

''
' Handles the "KillAllNearbyNPCs" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleKillAllNearbyNPCs(ByVal UserIndex As Integer)
        
        On Error GoTo HandleKillAllNearbyNPCs_Err
        

        '***************************************************
        'Author: Nicolas Matias Gonzalez (NIGO)
        'Last Modification: 12/30/06
        '
        '***************************************************
100     With UserList(UserIndex)
            'Remove packet ID
102         Call .incomingData.ReadByte
        
104         If .flags.Privilegios And (PlayerType.user Or PlayerType.Consejero) Then Exit Sub
            
            'Si está en el mapa pretoriano, me aseguro de que los saque correctamente antes que nada.
106         If .Pos.Map = MAPA_PRETORIANO Then Call EliminarPretorianos(MAPA_PRETORIANO)

            Dim X As Long
            Dim Y As Long
        
108         For Y = .Pos.Y - MinYBorder + 1 To .Pos.Y + MinYBorder - 1
110             For X = .Pos.X - MinXBorder + 1 To .Pos.X + MinXBorder - 1

112                 If X > 0 And Y > 0 And X < 101 And Y < 101 Then

114                     If MapData(.Pos.Map, X, Y).NpcIndex > 0 Then
116                         Call QuitarNPC(MapData(.Pos.Map, X, Y).NpcIndex)
                        End If

                    End If

118             Next X
120         Next Y

122         Call LogGM(.name, "/MASSKILL")

        End With

        
        Exit Sub

HandleKillAllNearbyNPCs_Err:
124     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleKillAllNearbyNPCs", Erl)
126     Resume Next
        
End Sub

''
' Handles the "LastIP" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleLastIP(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Nicolas Matias Gonzalez (NIGO)
        'Last Modification: 12/30/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            Dim UserName   As String

            Dim lista      As String

            Dim LoopC      As Byte

            Dim priv       As Integer

            Dim validCheck As Boolean
        
110         priv = PlayerType.Admin Or PlayerType.Dios Or PlayerType.SemiDios Or PlayerType.Consejero
112         UserName = Buffer.ReadASCIIString()
        
114         If (Not .flags.Privilegios And PlayerType.RoleMaster) <> 0 And (.flags.Privilegios And (PlayerType.Admin Or PlayerType.Dios Or PlayerType.SemiDios)) <> 0 Then

                'Handle special chars
116             If (InStrB(UserName, "\") <> 0) Then
118                 UserName = Replace(UserName, "\", "")

                End If

120             If (InStrB(UserName, "\") <> 0) Then
122                 UserName = Replace(UserName, "/", "")

                End If

124             If (InStrB(UserName, "+") <> 0) Then
126                 UserName = Replace(UserName, "+", " ")

                End If
            
                'Only Gods and Admins can see the ips of adminsitrative characters. All others can be seen by every adminsitrative char.
128             If NameIndex(UserName) > 0 Then
130                 validCheck = (UserList(NameIndex(UserName)).flags.Privilegios And priv) = 0 Or (.flags.Privilegios And (PlayerType.Admin Or PlayerType.Dios)) <> 0
                Else
132                 validCheck = (UserDarPrivilegioLevel(UserName) And priv) = 0 Or (.flags.Privilegios And (PlayerType.Admin Or PlayerType.Dios)) <> 0

                End If
            
134             If validCheck Then
136                 Call LogGM(.name, "/LASTIP " & UserName)
                
138                 If FileExist(CharPath & UserName & ".chr", vbNormal) Then
140                     lista = "Las ultimas IPs con las que " & UserName & " se conectí son:"

142                     For LoopC = 1 To 5
144                         lista = lista & vbCrLf & LoopC & " - " & GetVar(CharPath & UserName & ".chr", "INIT", "LastIP" & LoopC)
146                     Next LoopC

148                     Call WriteConsoleMsg(UserIndex, lista, FontTypeNames.FONTTYPE_INFO)
                    Else
150                     Call WriteConsoleMsg(UserIndex, "Charfile """ & UserName & """ inexistente.", FontTypeNames.FONTTYPE_INFO)

                    End If

                Else
152                 Call WriteConsoleMsg(UserIndex, UserName & " es de mayor jerarquía que vos.", FontTypeNames.FONTTYPE_INFO)

                End If

            End If
        
            'If we got here then packet is complete, copy data back to original queue
154         Call .incomingData.CopyBuffer(Buffer)

        End With

ErrHandler:

        Dim Error As Long

156     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
158     Set Buffer = Nothing
    
160     If Error <> 0 Then Err.raise Error

End Sub

''
' Handles the "ChatColor" message.
'
' @param    UserIndex The index of the user sending the message.

Public Sub HandleChatColor(ByVal UserIndex As Integer)
        
        On Error GoTo HandleChatColor_Err
        

        '***************************************************
        'Author: Lucas Tavolaro Ortiz (Tavo)
        'Last Modification: 12/23/06
        'Last modified by: Juan Martín Sotuyo Dodero (Maraxus)
        'Change the user`s chat color
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 4 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
104     With UserList(UserIndex)
            'Remove packet ID
106         Call .incomingData.ReadByte
        
            Dim Color As Long
        
108         Color = RGB(.incomingData.ReadByte(), .incomingData.ReadByte(), .incomingData.ReadByte())
        
110         If (.flags.Privilegios And (PlayerType.Admin Or PlayerType.Dios Or PlayerType.RoleMaster)) Then
112             .flags.ChatColor = Color

            End If

        End With

        
        Exit Sub

HandleChatColor_Err:
114     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleChatColor", Erl)
116     Resume Next
        
End Sub

''
' Handles the "Ignored" message.
'
' @param    UserIndex The index of the user sending the message.

Public Sub HandleIgnored(ByVal UserIndex As Integer)
        
        On Error GoTo HandleIgnored_Err
        

        '***************************************************
        'Author: Lucas Tavolaro Ortiz (Tavo)
        'Last Modification: 12/23/06
        'Ignore the user
        '***************************************************
100     With UserList(UserIndex)
            'Remove packet ID
102         Call .incomingData.ReadByte
        
104         If .flags.Privilegios And (PlayerType.Admin Or PlayerType.Dios Or PlayerType.SemiDios Or PlayerType.Consejero) Then
106             .flags.AdminPerseguible = Not .flags.AdminPerseguible

            End If

        End With

        
        Exit Sub

HandleIgnored_Err:
108     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleIgnored", Erl)
110     Resume Next
        
End Sub

''
' Handles the "CheckSlot" message.
'
' @param    UserIndex The index of the user sending the message.

Public Sub HandleCheckSlot(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Pablo (ToxicWaste)
        'Last Modification: 26/01/2007
        'Check one Users Slot in Particular from Inventory
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 4 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If

        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            'Reads the UserName and Slot Packets
            Dim UserName As String

            Dim slot     As Byte

            Dim tIndex   As Integer
        
110         UserName = Buffer.ReadASCIIString() 'Que UserName?
112         slot = Buffer.ReadByte() 'Que Slot?
114         tIndex = NameIndex(UserName)  'Que user index?

            'If we got here then packet is complete, copy data back to original queue
115         Call .incomingData.CopyBuffer(Buffer)

            If Not EsGM(UserIndex) Then Exit Sub
        
117         Call LogGM(.name, .name & " Checkeo el slot " & slot & " de " & UserName)
           
118         If tIndex > 0 Then
120             If slot > 0 And slot <= UserList(UserIndex).CurrentInventorySlots Then
122                 If UserList(tIndex).Invent.Object(slot).ObjIndex > 0 Then
124                     Call WriteConsoleMsg(UserIndex, " Objeto " & slot & ") " & ObjData(UserList(tIndex).Invent.Object(slot).ObjIndex).name & " Cantidad:" & UserList(tIndex).Invent.Object(slot).Amount, FontTypeNames.FONTTYPE_INFO)
                    Else
126                     Call WriteConsoleMsg(UserIndex, "No hay Objeto en slot seleccionado", FontTypeNames.FONTTYPE_INFO)

                    End If

                Else
128                 Call WriteConsoleMsg(UserIndex, "Slot Invílido.", FontTypeNames.FONTTYPE_TALK)

                End If

            Else
130             Call WriteConsoleMsg(UserIndex, "Usuario offline.", FontTypeNames.FONTTYPE_TALK)

            End If

        End With
    
ErrHandler:

        Dim Error As Long

134     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
136     Set Buffer = Nothing
    
138     If Error <> 0 Then Err.raise Error

End Sub

''
' Handles the "ResetAutoUpdate" message.
'
' @param    UserIndex The index of the user sending the message.

Public Sub HandleResetAutoUpdate(ByVal UserIndex As Integer)
        
        On Error GoTo HandleResetAutoUpdate_Err
        

        '***************************************************
        'Author: Lucas Tavolaro Ortiz (Tavo)
        'Last Modification: 12/23/06
        'Reset the AutoUpdate
        '***************************************************
100     With UserList(UserIndex)
            'Remove packet ID
102         Call .incomingData.ReadByte
        
104         If .flags.Privilegios And (PlayerType.user Or PlayerType.Consejero Or PlayerType.SemiDios) Then Exit Sub
        
106         Call WriteConsoleMsg(UserIndex, "TID: " & CStr(ReiniciarAutoUpdate()), FontTypeNames.FONTTYPE_INFO)

        End With

        
        Exit Sub

HandleResetAutoUpdate_Err:
108     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleResetAutoUpdate", Erl)
110     Resume Next
        
End Sub

''
' Handles the "Restart" message.
'
' @param    UserIndex The index of the user sending the message.

Public Sub HandleRestart(ByVal UserIndex As Integer)
        
        On Error GoTo HandleRestart_Err
        

        '***************************************************
        'Author: Lucas Tavolaro Ortiz (Tavo)
        'Last Modification: 12/23/06
        'Restart the game
        '***************************************************
100     With UserList(UserIndex)
            'Remove Packet ID
102         Call .incomingData.ReadByte
    
104         If .flags.Privilegios And (PlayerType.user Or PlayerType.Consejero Or PlayerType.SemiDios) Then Exit Sub
        
            'time and Time BUG!
106         Call LogGM(.name, .name & " reinicio el mundo")
        
108         Call ReiniciarServidor(True)

        End With

        
        Exit Sub

HandleRestart_Err:
110     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleRestart", Erl)
112     Resume Next
        
End Sub

''
' Handles the "ReloadObjects" message.
'
' @param    UserIndex The index of the user sending the message.

Public Sub HandleReloadObjects(ByVal UserIndex As Integer)
        
        On Error GoTo HandleReloadObjects_Err
        

        '***************************************************
        'Author: Lucas Tavolaro Ortiz (Tavo)
        'Last Modification: 12/23/06
        'Reload the objects
        '***************************************************
100     With UserList(UserIndex)
            'Remove Packet ID
102         Call .incomingData.ReadByte
        
104         If .flags.Privilegios And (PlayerType.user Or PlayerType.Consejero Or PlayerType.SemiDios Or PlayerType.RoleMaster) Then Exit Sub
        
106         Call LogGM(.name, .name & " ha recargado a los objetos.")
        
108         Call LoadOBJData
110         Call LoadPesca
112         Call LoadRecursosEspeciales
114         Call WriteConsoleMsg(UserIndex, "Obj.dat recargado exitosamente.", FontTypeNames.FONTTYPE_SERVER)

        End With

        
        Exit Sub

HandleReloadObjects_Err:
116     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleReloadObjects", Erl)
118     Resume Next
        
End Sub

''
' Handles the "ReloadSpells" message.
'
' @param    UserIndex The index of the user sending the message.

Public Sub HandleReloadSpells(ByVal UserIndex As Integer)
        
        On Error GoTo HandleReloadSpells_Err
        

        '***************************************************
        'Author: Lucas Tavolaro Ortiz (Tavo)
        'Last Modification: 12/23/06
        'Reload the spells
        '***************************************************
100     With UserList(UserIndex)
            'Remove Packet ID
102         Call .incomingData.ReadByte
        
104         If .flags.Privilegios And (PlayerType.user Or PlayerType.Consejero Or PlayerType.SemiDios Or PlayerType.RoleMaster) Then Exit Sub
        
106         Call LogGM(.name, .name & " ha recargado los hechizos.")
        
108         Call CargarHechizos

        End With

        
        Exit Sub

HandleReloadSpells_Err:
110     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleReloadSpells", Erl)
112     Resume Next
        
End Sub

''
' Handle the "ReloadServerIni" message.
'
' @param UserIndex The index of the user sending the message

Public Sub HandleReloadServerIni(ByVal UserIndex As Integer)
        
        On Error GoTo HandleReloadServerIni_Err
        

        '***************************************************
        'Author: Lucas Tavolaro Ortiz (Tavo)
        'Last Modification: 12/23/06
        'Reload the Server`s INI
        '***************************************************
100     With UserList(UserIndex)
            'Remove Packet ID
102         Call .incomingData.ReadByte
        
104         If .flags.Privilegios And (PlayerType.user Or PlayerType.Consejero Or PlayerType.SemiDios Or PlayerType.RoleMaster) Then Exit Sub
        
106         Call LogGM(.name, .name & " ha recargado los INITs.")
        
108         Call LoadSini

        End With

        
        Exit Sub

HandleReloadServerIni_Err:
110     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleReloadServerIni", Erl)
112     Resume Next
        
End Sub

''
' Handle the "ReloadNPCs" message
'
' @param UserIndex The index of the user sending the message

Public Sub HandleReloadNPCs(ByVal UserIndex As Integer)
        
        On Error GoTo HandleReloadNPCs_Err
        

        '***************************************************
        'Author: Lucas Tavolaro Ortiz (Tavo)
        'Last Modification: 12/23/06
        'Reload the Server`s NPC
        '***************************************************
100     With UserList(UserIndex)
            'Remove Packet ID
102         Call .incomingData.ReadByte
        
104         If .flags.Privilegios And (PlayerType.user Or PlayerType.Consejero Or PlayerType.SemiDios Or PlayerType.RoleMaster) Then Exit Sub
         
106         Call LogGM(.name, .name & " ha recargado los NPCs.")
    
108         Call CargaNpcsDat
    
110         Call WriteConsoleMsg(UserIndex, "Npcs.dat recargado exitosamente.", FontTypeNames.FONTTYPE_SERVER)

        End With

        
        Exit Sub

HandleReloadNPCs_Err:
112     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleReloadNPCs", Erl)
114     Resume Next
        
End Sub

''
' Handle the "RequestTCPStats" message
' @param UserIndex The index of the user sending the message

Public Sub HandleRequestTCPStats(ByVal UserIndex As Integer)
        
        On Error GoTo HandleRequestTCPStats_Err
        

        '***************************************************
        'Author: Lucas Tavolaro Ortiz (Tavo)
        'Last Modification: 12/23/06
        'Last modified by: Juan Martín Sotuyo Dodero (Maraxus)
        'Send the TCP`s stadistics
        '***************************************************
100     With UserList(UserIndex)
            'Remove Packet ID
102         Call .incomingData.ReadByte
        
104         If .flags.Privilegios And (PlayerType.user Or PlayerType.Consejero Or PlayerType.SemiDios Or PlayerType.RoleMaster) Then Exit Sub
                
            Dim list  As String

            Dim Count As Long

            Dim i     As Long
        
106         Call LogGM(.name, .name & " ha pedido las estadisticas del TCP.")
    
108         Call WriteConsoleMsg(UserIndex, "Los datos estín en BYTES.", FontTypeNames.FONTTYPE_INFO)
        
            'Send the stats
110         With TCPESStats
112             Call WriteConsoleMsg(UserIndex, "IN/s: " & .BytesRecibidosXSEG & " OUT/s: " & .BytesEnviadosXSEG, FontTypeNames.FONTTYPE_INFO)
114             Call WriteConsoleMsg(UserIndex, "IN/s MAX: " & .BytesRecibidosXSEGMax & " -> " & .BytesRecibidosXSEGCuando, FontTypeNames.FONTTYPE_INFO)
116             Call WriteConsoleMsg(UserIndex, "OUT/s MAX: " & .BytesEnviadosXSEGMax & " -> " & .BytesEnviadosXSEGCuando, FontTypeNames.FONTTYPE_INFO)

            End With
        
            'Search for users that are working
118         For i = 1 To LastUser

120             With UserList(i)

122                 If .flags.UserLogged And .ConnID >= 0 And .ConnIDValida Then
124                     If .outgoingData.Length > 0 Then
126                         list = list & .name & " (" & CStr(.outgoingData.Length) & "), "
128                         Count = Count + 1

                        End If

                    End If

                End With

130         Next i
        
132         Call WriteConsoleMsg(UserIndex, "Posibles pjs trabados: " & CStr(Count), FontTypeNames.FONTTYPE_INFO)
134         Call WriteConsoleMsg(UserIndex, list, FontTypeNames.FONTTYPE_INFO)

        End With

        
        Exit Sub

HandleRequestTCPStats_Err:
136     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleRequestTCPStats", Erl)
138     Resume Next
        
End Sub

''
' Handle the "KickAllChars" message
'
' @param UserIndex The index of the user sending the message

Public Sub HandleKickAllChars(ByVal UserIndex As Integer)
        
        On Error GoTo HandleKickAllChars_Err
        

        '***************************************************
        'Author: Lucas Tavolaro Ortiz (Tavo)
        'Last Modification: 12/23/06
        'Kick all the chars that are online
        '***************************************************
100     With UserList(UserIndex)
            'Remove Packet ID
102         Call .incomingData.ReadByte
        
104         If .flags.Privilegios And (PlayerType.user Or PlayerType.Consejero Or PlayerType.SemiDios Or PlayerType.RoleMaster) Then Exit Sub
        
106         Call LogGM(.name, .name & " ha echado a todos los personajes.")
        
108         Call EcharPjsNoPrivilegiados

        End With

        
        Exit Sub

HandleKickAllChars_Err:
110     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleKickAllChars", Erl)
112     Resume Next
        
End Sub

''
' Handle the "Night" message
'
' @param UserIndex The index of the user sending the message

Public Sub HandleNight(ByVal UserIndex As Integer)
        
        On Error GoTo HandleNight_Err
        

        '***************************************************
        'Author: Lucas Tavolaro Ortiz (Tavo)
        'Last Modification: 12/23/06
        'Last modified by: Juan Martín Sotuyo Dodero (Maraxus)
        '
        '***************************************************
100     With UserList(UserIndex)
            'Remove Packet ID
102         Call .incomingData.ReadByte
        
104         If .flags.Privilegios And (PlayerType.user Or PlayerType.Consejero Or PlayerType.SemiDios) Then Exit Sub

106         HoraMundo = GetTickCount()

108         Call SendData(SendTarget.ToAll, 0, PrepareMessageHora())
    
        End With

        
        Exit Sub

HandleNight_Err:
110     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleNight", Erl)
112     Resume Next
        
End Sub

''
' Handle the "Day" message
'
' @param UserIndex The index of the user sending the message

Public Sub HandleDay(ByVal UserIndex As Integer)
        
        On Error GoTo HandleDay_Err

100     With UserList(UserIndex)
            'Remove Packet ID
102         Call .incomingData.ReadByte
        
104         If .flags.Privilegios And (PlayerType.user Or PlayerType.Consejero Or PlayerType.SemiDios) Then Exit Sub

106         HoraMundo = GetTickCount() - DuracionDia \ 2

108         Call SendData(SendTarget.ToAll, 0, PrepareMessageHora())
    
        End With

        
        Exit Sub

HandleDay_Err:
110     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleDay", Erl)
112     Resume Next
        
End Sub

''
' Handle the "SetTime" message
'
' @param UserIndex The index of the user sending the message

Public Sub HandleSetTime(ByVal UserIndex As Integer)
        
        On Error GoTo HandleSetTime_Err

100     With UserList(UserIndex)
            'Remove Packet ID
102         Call .incomingData.ReadByte

            Dim HoraDia As Long
104         HoraDia = .incomingData.ReadLong
        
106         If .flags.Privilegios And (PlayerType.user Or PlayerType.Consejero Or PlayerType.SemiDios) Then Exit Sub

108         HoraMundo = GetTickCount() - HoraDia
            
110         Call SendData(SendTarget.ToAll, 0, PrepareMessageHora())
    
        End With

        
        Exit Sub

HandleSetTime_Err:
112     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleSetTime", Erl)
114     Resume Next
        
End Sub

Public Sub HandleDonateGold(ByVal UserIndex As Integer)
        
         On Error GoTo handle

100      With UserList(UserIndex)
             'Remove Packet ID
102         Call .incomingData.ReadByte

            Dim Oro As Long
104         Oro = .incomingData.ReadLong

106         If Oro <= 0 Then Exit Sub

             'Se asegura que el target es un npc
108         If .flags.TargetNPC = 0 Then
110             Call WriteConsoleMsg(UserIndex, "Primero tenés que seleccionar al sacerdote.", FontTypeNames.FONTTYPE_INFO)
                Exit Sub
            End If
        
            Dim priest As npc
                priest = NpcList(.flags.TargetNPC)

             'Validate NPC is an actual priest and the player is not dead
112         If (priest.NPCtype <> eNPCType.Revividor And (priest.NPCtype <> eNPCType.ResucitadorNewbie Or Not EsNewbie(UserIndex))) Or .flags.Muerto = 1 Then Exit Sub

             'Make sure it's close enough
114         If Distancia(.Pos, NpcList(.flags.TargetNPC).Pos) > 3 Then
116             Call WriteLocaleMsg(UserIndex, "8", FontTypeNames.FONTTYPE_INFO)
                Exit Sub
            End If

118         If .Faccion.Status = 1 Or .Faccion.ArmadaReal = 1 Or .Faccion.FuerzasCaos > 0 Or .Faccion.ciudadanosMatados = 0 Then
120             Call WriteChatOverHead(UserIndex, "No puedo aceptar tu donación en este momento...", NpcList(.flags.TargetNPC).Char.CharIndex, vbWhite)
                Exit Sub
            End If

            If .GuildIndex <> 0 Then
                If modGuilds.Alineacion(.GuildIndex) = 1 Then
                   Call WriteChatOverHead(UserIndex, "Te encuentras en un clan criminal... no puedo aceptar tu donación.", priest.Char.CharIndex, vbWhite)
                   Exit Sub

                End If

            End If

126         If .Stats.GLD < Oro Then
128             Call WriteConsoleMsg(UserIndex, "No tienes suficiente dinero.", FontTypeNames.FONTTYPE_INFO)
                Exit Sub
            End If

            Dim Donacion As Long
130         Donacion = .Faccion.ciudadanosMatados * OroMult * CostoPerdonPorCiudadano

132         If Oro < Donacion Then
134             Call WriteChatOverHead(UserIndex, "Dios no puede perdonarte si eres una persona avara.", NpcList(.flags.TargetNPC).Char.CharIndex, vbWhite)
                Exit Sub
            End If

136         .Stats.GLD = .Stats.GLD - Oro

138         Call WriteUpdateGold(UserIndex)

140         Call WriteConsoleMsg(UserIndex, "Has donado " & PonerPuntos(Oro) & " monedas de oro.", FontTypeNames.FONTTYPE_INFO)

142         Call WriteChatOverHead(UserIndex, "¡Gracias por tu generosa donación! Con estas palabras, te libero de todo tipo de pecados. ¡Que Dios te acompañe hijo mío!", NpcList(UserList(UserIndex).flags.TargetNPC).Char.CharIndex, vbYellow)

144         Call SendData(SendTarget.ToPCArea, UserIndex, PrepareMessageParticleFX(UserList(UserIndex).Char.CharIndex, "80", 100, False))
146         Call SendData(SendTarget.ToPCArea, UserIndex, PrepareMessagePlayWave("100", UserList(UserIndex).Pos.X, UserList(UserIndex).Pos.Y))
148         Call VolverCiudadano(UserIndex)
    
         End With

        
         Exit Sub

handle:
152     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleDonateGold", Erl)
154     Resume Next
        
End Sub

Public Sub HandlePromedio(ByVal UserIndex As Integer)
        
        On Error GoTo handle

100     With UserList(UserIndex)
102         .incomingData.ReadByte
            
104         Call WriteConsoleMsg(UserIndex, ListaClases(.clase) & " " & ListaRazas(.raza) & " nivel " & .Stats.ELV & ".", FONTTYPE_INFOBOLD)
            
            Dim Promedio As Double, Vida As Long
106         Promedio = ModClase(.clase).Vida - (21 - .Stats.UserAtributos(eAtributos.Constitucion)) * 0.5
108         Vida = 18.5 + ModRaza(.raza).Constitucion / 6 + Promedio * (.Stats.ELV - 1)

110         Call WriteConsoleMsg(UserIndex, "Vida esperada: " & Vida & ". Promedio: " & Promedio, FONTTYPE_INFOBOLD)

112         Promedio = CalcularPromedioVida(UserIndex)

            Dim Diff As Long, Color As FontTypeNames, Signo As String
            
114         Diff = .Stats.MaxHp - Vida
            
116         If Diff < 0 Then
118             Color = FONTTYPE_PROMEDIO_MENOR
120             Signo = "-"

122         ElseIf Diff > 0 Then
124             Color = FONTTYPE_PROMEDIO_MAYOR
126             Signo = "+"

            Else
128             Color = FONTTYPE_PROMEDIO_IGUAL
130             Signo = "+"
                
            End If

132         Call WriteConsoleMsg(UserIndex, "Vida actual: " & .Stats.MaxHp & " (" & Signo & Abs(Diff) & "). Promedio: " & Round(Promedio, 2), Color)

        End With
        
        Exit Sub

handle:
134     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandlePromedio", Erl)
136     Resume Next
        
End Sub

Public Sub HandleGiveItem(ByVal UserIndex As Integer)
        
100     If UserList(UserIndex).incomingData.Length < 9 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub
        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            Dim UserName    As String
            Dim ObjIndex    As Integer
            Dim Cantidad    As Integer
            Dim Motivo      As String
            Dim tIndex      As Integer
        
110         UserName = Buffer.ReadASCIIString()
112         ObjIndex = Buffer.ReadInteger()
114         Cantidad = Buffer.ReadInteger()
116         Motivo = Buffer.ReadASCIIString()

            'If we got here then packet is complete, copy data back to original queue
118         Call .incomingData.CopyBuffer(Buffer)
        
120         If (.flags.Privilegios And (PlayerType.Admin Or PlayerType.Dios Or PlayerType.SemiDios)) <> 0 Then

122             If ObjData(ObjIndex).Agarrable = 1 Then Exit Sub

124             If Cantidad > MAX_INVENTORY_OBJS Then Cantidad = MAX_INVENTORY_OBJS

                ' El indice proporcionado supera la cantidad minima o total de items existentes en el juego?
126             If ObjIndex < 1 Or ObjIndex > NumObjDatas Then Exit Sub
            
                ' El nombre del objeto es nulo?
128             If LenB(ObjData(ObjIndex).name) = 0 Then Exit Sub

                ' Está online?
130             tIndex = NameIndex(UserName)
132             If tIndex = 0 Then
134                 Call WriteConsoleMsg(UserIndex, "El usuario " & UserName & " no está conectado.", FontTypeNames.FONTTYPE_INFO)
                    Exit Sub
                End If

                Dim Objeto As obj
136             Objeto.Amount = Cantidad
138             Objeto.ObjIndex = ObjIndex

                ' Trato de meterlo en el inventario.
140             If MeterItemEnInventario(tIndex, Objeto) Then
142                 Call SendData(SendTarget.ToAll, 0, PrepareMessageConsoleMsg(.name & " ha otorgado a " & UserList(tIndex).name & " " & Cantidad & " " & ObjData(ObjIndex).name & ": " & Motivo, FontTypeNames.FONTTYPE_ROSA))
                Else
144                 Call WriteConsoleMsg(UserIndex, "El usuario no tiene espacio en el inventario.", FontTypeNames.FONTTYPE_INFO)
                End If

                ' Lo registro en los logs.
146             Call LogGM(.name, "/DAR " & UserName & " - Item: " & ObjData(ObjIndex).name & "(" & ObjIndex & ") Cantidad : " & Cantidad)
148             Call LogPremios(.name, UserName, ObjIndex, Cantidad, Motivo)
            
            End If
        End With

ErrHandler:

        Dim Error As Long

150     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
152     Set Buffer = Nothing
    
154     If Error <> 0 Then Err.raise Error
        
End Sub

''
' Handle the "ShowServerForm" message
'
' @param UserIndex The index of the user sending the message

Public Sub HandleShowServerForm(ByVal UserIndex As Integer)
        
        On Error GoTo HandleShowServerForm_Err
        

        '***************************************************
        'Author: Lucas Tavolaro Ortiz (Tavo)
        'Last Modification: 12/23/06
        'Show the server form
        '***************************************************
100     With UserList(UserIndex)
            'Remove Packet ID
102         Call .incomingData.ReadByte
        
104         If .flags.Privilegios And (PlayerType.user Or PlayerType.Consejero Or PlayerType.SemiDios Or PlayerType.RoleMaster) Then Exit Sub
        
106         Call LogGM(.name, .name & " ha solicitado mostrar el formulario del servidor.")
108         Call frmMain.mnuMostrar_Click

        End With

        
        Exit Sub

HandleShowServerForm_Err:
110     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleShowServerForm", Erl)
112     Resume Next
        
End Sub

''
' Handle the "CleanSOS" message
'
' @param UserIndex The index of the user sending the message

Public Sub HandleCleanSOS(ByVal UserIndex As Integer)
        
        On Error GoTo HandleCleanSOS_Err
        

        '***************************************************
        'Author: Lucas Tavolaro Ortiz (Tavo)
        'Last Modification: 12/23/06
        'Clean the SOS
        '***************************************************
100     With UserList(UserIndex)
            'Remove Packet ID
102         Call .incomingData.ReadByte
        
104         If .flags.Privilegios And (PlayerType.user Or PlayerType.Consejero Or PlayerType.SemiDios Or PlayerType.RoleMaster) Then Exit Sub
        
106         Call LogGM(.name, .name & " ha borrado los SOS")
        
108         Call Ayuda.Reset

        End With

        
        Exit Sub

HandleCleanSOS_Err:
110     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleCleanSOS", Erl)
112     Resume Next
        
End Sub

''
' Handle the "SaveChars" message
'
' @param UserIndex The index of the user sending the message

Public Sub HandleSaveChars(ByVal UserIndex As Integer)
        
        On Error GoTo HandleSaveChars_Err
        

        '***************************************************
        'Author: Lucas Tavolaro Ortiz (Tavo)
        'Last Modification: 12/23/06
        'Save the characters
        '***************************************************
100     With UserList(UserIndex)
            'Remove Packet ID
102         Call .incomingData.ReadByte
        
104         If .flags.Privilegios And (PlayerType.user Or PlayerType.Consejero Or PlayerType.RoleMaster) Then Exit Sub
        
106         Call LogGM(.name, .name & " ha guardado todos los chars")
        
108         Call GuardarUsuarios

        End With

        
        Exit Sub

HandleSaveChars_Err:
110     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleSaveChars", Erl)
112     Resume Next
        
End Sub

''
' Handle the "ChangeMapInfoBackup" message
'
' @param UserIndex The index of the user sending the message

Public Sub HandleChangeMapInfoBackup(ByVal UserIndex As Integer)
        
        On Error GoTo HandleChangeMapInfoBackup_Err
        

        '***************************************************
        'Author: Lucas Tavolaro Ortiz (Tavo)
        'Last Modification: 12/24/06
        'Last modified by: Juan Martín Sotuyo Dodero (Maraxus)
        'Change the backup`s info of the map
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 2 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
104     With UserList(UserIndex)
            'Remove Packet ID
106         Call .incomingData.ReadByte
        
            Dim doTheBackUp As Boolean
        
108         doTheBackUp = .incomingData.ReadBoolean()
        
110         If .flags.Privilegios And (PlayerType.user Or PlayerType.Consejero Or PlayerType.SemiDios Or PlayerType.RoleMaster) Then Exit Sub
        
112         Call LogGM(.name, .name & " ha cambiado la informaciín sobre el BackUp")
        
            'Change the boolean to byte in a fast way
114         If doTheBackUp Then
116             MapInfo(.Pos.Map).backup_mode = 1
            Else
118             MapInfo(.Pos.Map).backup_mode = 0

            End If
        
            'Change the boolean to string in a fast way
120         Call WriteVar(MapPath & "mapa" & .Pos.Map & ".dat", "Mapa" & .Pos.Map, "backup", MapInfo(.Pos.Map).backup_mode)
        
122         Call WriteConsoleMsg(UserIndex, "Mapa " & .Pos.Map & " Backup: " & MapInfo(.Pos.Map).backup_mode, FontTypeNames.FONTTYPE_INFO)

        End With

        
        Exit Sub

HandleChangeMapInfoBackup_Err:
124     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleChangeMapInfoBackup", Erl)
126     Resume Next
        
End Sub

''
' Handle the "ChangeMapInfoPK" message
'
' @param UserIndex The index of the user sending the message

Public Sub HandleChangeMapInfoPK(ByVal UserIndex As Integer)
        
        On Error GoTo HandleChangeMapInfoPK_Err
        

        '***************************************************
        'Author: Lucas Tavolaro Ortiz (Tavo)
        'Last Modification: 12/24/06
        'Last modified by: Juan Martín Sotuyo Dodero (Maraxus)
        'Change the pk`s info of the  map
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 2 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
104     With UserList(UserIndex)
            'Remove Packet ID
106         Call .incomingData.ReadByte
        
            Dim isMapPk As Boolean
        
108         isMapPk = .incomingData.ReadBoolean()
        
110         If .flags.Privilegios And (PlayerType.user Or PlayerType.Consejero Or PlayerType.SemiDios Or PlayerType.RoleMaster) Then Exit Sub
        
112         Call LogGM(.name, .name & " ha cambiado la informacion sobre si es seguro el mapa.")
        
114         MapInfo(.Pos.Map).Seguro = IIf(isMapPk, 1, 0)
        
            'Change the boolean to string in a fast way
            Rem Call WriteVar(App.Path & MapPath & "mapa" & .Pos.map & ".dat", "Mapa" & .Pos.map, "Pk", IIf(isMapPk, "1", "0"))

116         Call WriteConsoleMsg(UserIndex, "Mapa " & .Pos.Map & " Seguro: " & MapInfo(.Pos.Map).Seguro, FontTypeNames.FONTTYPE_INFO)

        End With

        
        Exit Sub

HandleChangeMapInfoPK_Err:
118     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleChangeMapInfoPK", Erl)
120     Resume Next
        
End Sub

''
' Handle the "ChangeMapInfoRestricted" message
'
' @param UserIndex The index of the user sending the message

Public Sub HandleChangeMapInfoRestricted(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Pablo (ToxicWaste)
        'Last Modification: 26/01/2007
        'Restringido -> Options: "NEWBIE", "SINMAGIA", "SININVI", "NOPKS", "NOCIUD".
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub
        End If
    
        On Error GoTo ErrHandler

        Dim tStr As String
    
104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove Packet ID
108         Call Buffer.ReadByte
        
110         tStr = Buffer.ReadASCIIString()
        
112         If (Not .flags.Privilegios And PlayerType.RoleMaster) <> 0 And (.flags.Privilegios And (PlayerType.Admin Or PlayerType.Dios)) <> 0 Then

114             Select Case UCase$(tStr)
                
                    Case "NEWBIE"
116                     MapInfo(.Pos.Map).Newbie = Not MapInfo(.Pos.Map).Newbie
118                     Call WriteConsoleMsg(UserIndex, "Mapa " & .Pos.Map & ": Newbie = " & MapInfo(.Pos.Map).Newbie, FontTypeNames.FONTTYPE_INFO)
120                     Call LogGM(.name, .name & " ha cambiado la restricción del mapa " & .Pos.Map & ": Newbie = " & MapInfo(.Pos.Map).Newbie)
                        
122                 Case "SINMAGIA"
124                     MapInfo(.Pos.Map).SinMagia = Not MapInfo(.Pos.Map).SinMagia
126                     Call WriteConsoleMsg(UserIndex, "Mapa " & .Pos.Map & ": SinMagia = " & MapInfo(.Pos.Map).SinMagia, FontTypeNames.FONTTYPE_INFO)
128                     Call LogGM(.name, .name & " ha cambiado la restricción del mapa " & .Pos.Map & ": SinMagia = " & MapInfo(.Pos.Map).SinMagia)
                        
130                 Case "NOPKS"
132                     MapInfo(.Pos.Map).NoPKs = Not MapInfo(.Pos.Map).NoPKs
134                     Call WriteConsoleMsg(UserIndex, "Mapa " & .Pos.Map & ": NoPKs = " & MapInfo(.Pos.Map).NoPKs, FontTypeNames.FONTTYPE_INFO)
136                     Call LogGM(.name, .name & " ha cambiado la restricción del mapa " & .Pos.Map & ": NoPKs = " & MapInfo(.Pos.Map).NoPKs)
                        
138                 Case "NOCIUD"
140                     MapInfo(.Pos.Map).NoCiudadanos = Not MapInfo(.Pos.Map).NoCiudadanos
142                     Call WriteConsoleMsg(UserIndex, "Mapa " & .Pos.Map & ": NoCiudadanos = " & MapInfo(.Pos.Map).NoCiudadanos, FontTypeNames.FONTTYPE_INFO)
144                     Call LogGM(.name, .name & " ha cambiado la restricción del mapa " & .Pos.Map & ": NoCiudadanos = " & MapInfo(.Pos.Map).NoCiudadanos)
                        
146                 Case "SININVI"
148                     MapInfo(.Pos.Map).SinInviOcul = Not MapInfo(.Pos.Map).SinInviOcul
150                     Call WriteConsoleMsg(UserIndex, "Mapa " & .Pos.Map & ": SinInvi = " & MapInfo(.Pos.Map).SinInviOcul, FontTypeNames.FONTTYPE_INFO)
152                     Call LogGM(.name, .name & " ha cambiado la restricción del mapa " & .Pos.Map & ": SinInvi = " & MapInfo(.Pos.Map).SinInviOcul)
                
154                 Case Else
156                     Call WriteConsoleMsg(UserIndex, "Opciones para restringir: 'NEWBIE', 'SINMAGIA', 'SININVI', 'NOPKS', 'NOCIUD'", FontTypeNames.FONTTYPE_INFO)
                End Select

            End If
        
            'If we got here then packet is complete, copy data back to original queue
158         Call .incomingData.CopyBuffer(Buffer)

        End With

ErrHandler:

        Dim Error As Long

160     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
162     Set Buffer = Nothing
    
164     If Error <> 0 Then Err.raise Error

End Sub

''
' Handle the "ChangeMapInfoNoMagic" message
'
' @param UserIndex The index of the user sending the message

Public Sub HandleChangeMapInfoNoMagic(ByVal UserIndex As Integer)
        
        On Error GoTo HandleChangeMapInfoNoMagic_Err
        

        '***************************************************
        'Author: Pablo (ToxicWaste)
        'Last Modification: 26/01/2007
        'MagiaSinEfecto -> Options: "1" , "0".
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 2 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        Dim nomagic As Boolean
    
104     With UserList(UserIndex)
            'Remove Packet ID
106         Call .incomingData.ReadByte
        
108         nomagic = .incomingData.ReadBoolean
        
110         If (Not .flags.Privilegios And PlayerType.RoleMaster) <> 0 And (.flags.Privilegios And (PlayerType.Admin Or PlayerType.Dios)) <> 0 Then
112             Call LogGM(.name, .name & " ha cambiado la informacion sobre si esta permitido usar la Magia el mapa.")

                ' MapInfo(UserList(UserIndex).Pos.map).MagiaSinEfecto = nomagic
                'Call WriteVar(App.Path & MapPath & "mapa" & UserList(UserIndex).Pos.map & ".dat", "Mapa" & UserList(UserIndex).Pos.map, "MagiaSinEfecto", nomagic)
                '  Call WriteConsoleMsg(UserIndex, "Mapa " & .Pos.map & " MagiaSinEfecto: " & MapInfo(.Pos.map).MagiaSinEfecto, FontTypeNames.FONTTYPE_INFO)
            End If

        End With

        
        Exit Sub

HandleChangeMapInfoNoMagic_Err:
114     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleChangeMapInfoNoMagic", Erl)
116     Resume Next
        
End Sub

''
' Handle the "ChangeMapInfoNoInvi" message
'
' @param UserIndex The index of the user sending the message

Public Sub HandleChangeMapInfoNoInvi(ByVal UserIndex As Integer)
        
        On Error GoTo HandleChangeMapInfoNoInvi_Err
        

        '***************************************************
        'Author: Pablo (ToxicWaste)
        'Last Modification: 26/01/2007
        'InviSinEfecto -> Options: "1", "0"
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 2 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        Dim noinvi As Boolean
    
104     With UserList(UserIndex)
            'Remove Packet ID
106         Call .incomingData.ReadByte
        
108         noinvi = .incomingData.ReadBoolean()
        
110         If (Not .flags.Privilegios And PlayerType.RoleMaster) <> 0 And (.flags.Privilegios And (PlayerType.Admin Or PlayerType.Dios)) <> 0 Then
112             Call LogGM(.name, .name & " ha cambiado la informacion sobre si esta permitido usar Invisibilidad el mapa.")

                ' MapInfo(UserList(UserIndex).Pos.map).InviSinEfecto = noinvi
                'Call WriteVar(App.Path & MapPath & "mapa" & UserList(UserIndex).Pos.map & ".dat", "Mapa" & UserList(UserIndex).Pos.map, "InviSinEfecto", noinvi)
                ' Call WriteConsoleMsg(UserIndex, "Mapa " & .Pos.map & " InviSinEfecto: " & MapInfo(.Pos.map).InviSinEfecto, FontTypeNames.FONTTYPE_INFO)
            End If

        End With

        
        Exit Sub

HandleChangeMapInfoNoInvi_Err:
114     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleChangeMapInfoNoInvi", Erl)
116     Resume Next
        
End Sub
            
''
' Handle the "ChangeMapInfoNoResu" message
'
' @param UserIndex The index of the user sending the message

Public Sub HandleChangeMapInfoNoResu(ByVal UserIndex As Integer)
        
        On Error GoTo HandleChangeMapInfoNoResu_Err
        

        '***************************************************
        'Author: Pablo (ToxicWaste)
        'Last Modification: 26/01/2007
        'ResuSinEfecto -> Options: "1", "0"
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 2 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        Dim noresu As Boolean
    
104     With UserList(UserIndex)
            'Remove Packet ID
106         Call .incomingData.ReadByte
        
108         noresu = .incomingData.ReadBoolean()
        
110         If (Not .flags.Privilegios And PlayerType.RoleMaster) <> 0 And (.flags.Privilegios And (PlayerType.Admin Or PlayerType.Dios)) <> 0 Then
112             Call LogGM(.name, .name & " ha cambiado la informacion sobre si esta permitido usar Resucitar el mapa.")

                '  MapInfo(UserList(UserIndex).Pos.map).ResuSinEfecto = noresu
                ' Call WriteVar(App.Path & MapPath & "mapa" & UserList(UserIndex).Pos.map & ".dat", "Mapa" & UserList(UserIndex).Pos.map, "ResuSinEfecto", noresu)
                ' Call WriteConsoleMsg(UserIndex, "Mapa " & .Pos.map & " ResuSinEfecto: " & MapInfo(.Pos.map).ResuSinEfecto, FontTypeNames.FONTTYPE_INFO)
            End If

        End With

        
        Exit Sub

HandleChangeMapInfoNoResu_Err:
114     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleChangeMapInfoNoResu", Erl)
116     Resume Next
        
End Sub

''
' Handle the "ChangeMapInfoLand" message
'
' @param UserIndex The index of the user sending the message

Public Sub HandleChangeMapInfoLand(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Pablo (ToxicWaste)
        'Last Modification: 26/01/2007
        'Terreno -> Opciones: "BOSQUE", "NIEVE", "DESIERTO", "CIUDAD", "CAMPO", "DUNGEON".
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

        Dim tStr As String
    
104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove Packet ID
108         Call Buffer.ReadByte
        
110         tStr = Buffer.ReadASCIIString()
        
112         If (Not .flags.Privilegios And PlayerType.RoleMaster) <> 0 And (.flags.Privilegios And (PlayerType.Admin Or PlayerType.Dios)) <> 0 Then
114             If tStr = "BOSQUE" Or tStr = "NIEVE" Or tStr = "DESIERTO" Or tStr = "CIUDAD" Or tStr = "CAMPO" Or tStr = "DUNGEON" Then
116                 Call LogGM(.name, .name & " ha cambiado la informacion del Terreno del mapa.")
118                 MapInfo(UserList(UserIndex).Pos.Map).terrain = tStr
120                 Call WriteVar(MapPath & "mapa" & UserList(UserIndex).Pos.Map & ".dat", "Mapa" & UserList(UserIndex).Pos.Map, "Terreno", tStr)
122                 Call WriteConsoleMsg(UserIndex, "Mapa " & .Pos.Map & " Terreno: " & MapInfo(.Pos.Map).terrain, FontTypeNames.FONTTYPE_INFO)
                Else
124                 Call WriteConsoleMsg(UserIndex, "Opciones para terreno: 'BOSQUE', 'NIEVE', 'DESIERTO', 'CIUDAD', 'CAMPO', 'DUNGEON'", FontTypeNames.FONTTYPE_INFO)
126                 Call WriteConsoleMsg(UserIndex, "Igualmente, el ínico ítil es 'NIEVE' ya que al ingresarlo, la gente muere de frio en el Mapa", FontTypeNames.FONTTYPE_INFO)

                End If

            End If
        
            'If we got here then packet is complete, copy data back to original queue
128         Call .incomingData.CopyBuffer(Buffer)

        End With

ErrHandler:

        Dim Error As Long

130     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
132     Set Buffer = Nothing
    
134     If Error <> 0 Then Err.raise Error

End Sub

''
' Handle the "ChangeMapInfoZone" message
'
' @param UserIndex The index of the user sending the message

Public Sub HandleChangeMapInfoZone(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Pablo (ToxicWaste)
        'Last Modification: 26/01/2007
        'Zona -> Opciones: "BOSQUE", "NIEVE", "DESIERTO", "CIUDAD", "CAMPO", "DUNGEON".
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

        Dim tStr As String
    
104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove Packet ID
108         Call Buffer.ReadByte
        
110         tStr = Buffer.ReadASCIIString()
        
112         If (Not .flags.Privilegios And PlayerType.RoleMaster) <> 0 And (.flags.Privilegios And (PlayerType.Admin Or PlayerType.Dios)) <> 0 Then
114             If tStr = "BOSQUE" Or tStr = "NIEVE" Or tStr = "DESIERTO" Or tStr = "CIUDAD" Or tStr = "CAMPO" Or tStr = "DUNGEON" Then
116                 Call LogGM(.name, .name & " ha cambiado la informacion de la Zona del mapa.")
118                 MapInfo(UserList(UserIndex).Pos.Map).zone = tStr
120                 Call WriteVar(MapPath & "mapa" & UserList(UserIndex).Pos.Map & ".dat", "Mapa" & UserList(UserIndex).Pos.Map, "Zona", tStr)
122                 Call WriteConsoleMsg(UserIndex, "Mapa " & .Pos.Map & " Zona: " & MapInfo(.Pos.Map).zone, FontTypeNames.FONTTYPE_INFO)
                Else
124                 Call WriteConsoleMsg(UserIndex, "Opciones para terreno: 'BOSQUE', 'NIEVE', 'DESIERTO', 'CIUDAD', 'CAMPO', 'DUNGEON'", FontTypeNames.FONTTYPE_INFO)
126                 Call WriteConsoleMsg(UserIndex, "Igualmente, el ínico ítil es 'DUNGEON' ya que al ingresarlo, NO se sentirí el efecto de la lluvia en este mapa.", FontTypeNames.FONTTYPE_INFO)

                End If

            End If
        
            'If we got here then packet is complete, copy data back to original queue
128         Call .incomingData.CopyBuffer(Buffer)

        End With

ErrHandler:

        Dim Error As Long

130     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
132     Set Buffer = Nothing
    
134     If Error <> 0 Then Err.raise Error

End Sub

''
' Handle the "SaveMap" message
'
' @param UserIndex The index of the user sending the message

Public Sub HandleSaveMap(ByVal UserIndex As Integer)
        
        On Error GoTo HandleSaveMap_Err
        

        '***************************************************
        'Author: Lucas Tavolaro Ortiz (Tavo)
        'Last Modification: 12/24/06
        'Saves the map
        '***************************************************
100     With UserList(UserIndex)
            'Remove Packet ID
102         Call .incomingData.ReadByte
        
104         If .flags.Privilegios And (PlayerType.user Or PlayerType.Consejero Or PlayerType.SemiDios Or PlayerType.RoleMaster) Then Exit Sub
        
106         Call LogGM(.name, .name & " ha guardado el mapa " & CStr(.Pos.Map))
        
            Call GrabarMapa(.Pos.Map, App.Path & "\WorldBackUp\Mapa" & .Pos.Map)
        
108         Call WriteConsoleMsg(UserIndex, "Mapa Guardado", FontTypeNames.FONTTYPE_INFO)

        End With

        
        Exit Sub

HandleSaveMap_Err:
110     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleSaveMap", Erl)
112     Resume Next
        
End Sub

''
' Handle the "ShowGuildMessages" message
'
' @param UserIndex The index of the user sending the message

Public Sub HandleShowGuildMessages(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Lucas Tavolaro Ortiz (Tavo)
        'Last Modification: 12/24/06
        'Last modified by: Juan Martín Sotuyo Dodero (Maraxus)
        'Allows admins to read guild messages
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            Dim guild As String
        
110         guild = Buffer.ReadASCIIString()
        
112         If (Not .flags.Privilegios And PlayerType.RoleMaster) <> 0 And (.flags.Privilegios And (PlayerType.Admin Or PlayerType.Dios)) Then
114             Call modGuilds.GMEscuchaClan(UserIndex, guild)

            End If
        
            'If we got here then packet is complete, copy data back to original queue
116         Call .incomingData.CopyBuffer(Buffer)

        End With

ErrHandler:

        Dim Error As Long

118     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
120     Set Buffer = Nothing
    
122     If Error <> 0 Then Err.raise Error

End Sub

''
' Handle the "DoBackUp" message
'
' @param UserIndex The index of the user sending the message

Public Sub HandleDoBackUp(ByVal UserIndex As Integer)
        
        On Error GoTo HandleDoBackUp_Err
        

        '***************************************************
        'Author: Lucas Tavolaro Ortiz (Tavo)
        'Last Modification: 12/24/06
        'Show guilds messages
        '***************************************************
100     With UserList(UserIndex)
            'Remove Packet ID
102         Call .incomingData.ReadByte
        
104         If .flags.Privilegios And (PlayerType.user Or PlayerType.Consejero Or PlayerType.SemiDios Or PlayerType.RoleMaster) Then Exit Sub

106         Call LogGM(.name, .name & " ha hecho un backup")
        
108         Call ES.DoBackUp 'Sino lo confunde con la id del paquete

        End With

        
        Exit Sub

HandleDoBackUp_Err:
110     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleDoBackUp", Erl)
112     Resume Next
        
End Sub

''
' Handle the "AlterName" message
'
' @param UserIndex The index of the user sending the message

Public Sub HandleAlterName(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 12/26/06
        'Change user name
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 5 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            'Reads the userName and newUser Packets
            Dim UserName     As String

            Dim newName      As String

            Dim changeNameUI As Integer

            Dim GuildIndex   As Integer
        
110         UserName = Buffer.ReadASCIIString()
112         newName = Buffer.ReadASCIIString()
        
114         If (Not .flags.Privilegios And PlayerType.RoleMaster) <> 0 And (.flags.Privilegios And (PlayerType.Admin Or PlayerType.Dios)) Then
116             If LenB(UserName) = 0 Or LenB(newName) = 0 Then
118                 Call WriteConsoleMsg(UserIndex, "Usar: /ANAME origen@destino", FontTypeNames.FONTTYPE_INFO)
                Else
120                 changeNameUI = NameIndex(UserName)
                
122                 If changeNameUI > 0 Then
124                     Call WriteConsoleMsg(UserIndex, "El Pj esta online, debe salir para el cambio", FontTypeNames.FONTTYPE_WARNING)
                    Else

126                     If Not FileExist(CharPath & UserName & ".chr") Then
128                         Call WriteConsoleMsg(UserIndex, "El pj " & UserName & " es inexistente ", FontTypeNames.FONTTYPE_INFO)
                        Else
130                         GuildIndex = val(GetVar(CharPath & UserName & ".chr", "GUILD", "GUILDINDEX"))
                        
132                         If GuildIndex > 0 Then
134                             Call WriteConsoleMsg(UserIndex, "El pj " & UserName & " pertenece a un clan, debe salir del mismo con /salirclan para ser transferido.", FontTypeNames.FONTTYPE_INFO)
                            Else

136                             If Not FileExist(CharPath & newName & ".chr") Then
138                                 Call FileCopy(CharPath & UserName & ".chr", CharPath & UCase$(newName) & ".chr")
                                
140                                 Call WriteConsoleMsg(UserIndex, "Transferencia exitosa", FontTypeNames.FONTTYPE_INFO)
                                
142                                 Call WriteVar(CharPath & UserName & ".chr", "BAN", "Baneado", "1")
144                                 Call WriteVar(CharPath & UserName & ".chr", "BAN", "BanMotivo", "BAN POR Cambio de nick a " & UCase$(newName) & " " & Date & " " & Time)
146                                 Call WriteVar(CharPath & UserName & ".chr", "BAN", "BannedBy", .name)

                                    Dim cantPenas As Byte
                                
148                                 cantPenas = val(GetVar(CharPath & UserName & ".chr", "PENAS", "Cant"))
                                
150                                 Call WriteVar(CharPath & UserName & ".chr", "PENAS", "Cant", CStr(cantPenas + 1))
                                
152                                 Call WriteVar(CharPath & UserName & ".chr", "PENAS", "P" & CStr(cantPenas + 1), LCase$(.name) & ": BAN POR Cambio de nick a " & UCase$(newName) & " " & Date & " " & Time)
                                
154                                 Call LogGM(.name, "Ha cambiado de nombre al usuario " & UserName & ". Ahora se llama " & newName)
                                Else
156                                 Call WriteConsoleMsg(UserIndex, "El nick solicitado ya existe", FontTypeNames.FONTTYPE_INFO)

                                End If

                            End If

                        End If

                    End If

                End If

            End If
        
            'If we got here then packet is complete, copy data back to original queue
158         Call .incomingData.CopyBuffer(Buffer)

        End With

ErrHandler:

        Dim Error As Long

160     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
162     Set Buffer = Nothing
    
164     If Error <> 0 Then Err.raise Error

End Sub

''
' Handle the "AlterName" message
'
' @param UserIndex The index of the user sending the message

Public Sub HandleAlterMail(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 12/26/06
        'Change user password
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 5 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            Dim UserName As String

            Dim newMail  As String
        
110         UserName = Buffer.ReadASCIIString()
112         newMail = Buffer.ReadASCIIString()
        
114         If (Not .flags.Privilegios And PlayerType.RoleMaster) <> 0 And (.flags.Privilegios And (PlayerType.Admin Or PlayerType.Dios)) Then
116             If LenB(UserName) = 0 Or LenB(newMail) = 0 Then
118                 Call WriteConsoleMsg(UserIndex, "usar /AEMAIL <pj>-<nuevomail>", FontTypeNames.FONTTYPE_INFO)
                Else

120                 If Not FileExist(CharPath & UserName & ".chr") Then
122                     Call WriteConsoleMsg(UserIndex, "No existe el charfile " & UserName & ".chr", FontTypeNames.FONTTYPE_INFO)
                    Else
124                     Call WriteVar(CharPath & UserName & ".chr", "CONTACTO", "Email", newMail)
126                     Call WriteConsoleMsg(UserIndex, "Email de " & UserName & " cambiado a: " & newMail, FontTypeNames.FONTTYPE_INFO)

                    End If
                
128                 Call LogGM(.name, "Le ha cambiado el mail a " & UserName)

                End If

            End If
        
            'If we got here then packet is complete, copy data back to original queue
130         Call .incomingData.CopyBuffer(Buffer)

        End With

ErrHandler:

        Dim Error As Long

132     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
134     Set Buffer = Nothing
    
136     If Error <> 0 Then Err.raise Error

End Sub

''
' Handle the "AlterPassword" message
'
' @param UserIndex The index of the user sending the message

Public Sub HandleAlterPassword(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 12/26/06
        'Change user password
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 5 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            Dim UserName As String

            Dim copyFrom As String

            Dim Password As String
        
110         UserName = Replace(Buffer.ReadASCIIString(), "+", " ")
112         copyFrom = Replace(Buffer.ReadASCIIString(), "+", " ")
        
114         If (Not .flags.Privilegios And PlayerType.RoleMaster) <> 0 And (.flags.Privilegios And (PlayerType.Admin Or PlayerType.Dios)) Then
116             Call LogGM(.name, "Ha alterado la contraseña de " & UserName)
            
118             If LenB(UserName) = 0 Or LenB(copyFrom) = 0 Then
120                 Call WriteConsoleMsg(UserIndex, "usar /APASS <pjsinpass>@<pjconpass>", FontTypeNames.FONTTYPE_INFO)
                Else

122                 If Not FileExist(CharPath & UserName & ".chr") Or Not FileExist(CharPath & copyFrom & ".chr") Then
124                     Call WriteConsoleMsg(UserIndex, "Alguno de los PJs no existe " & UserName & "@" & copyFrom, FontTypeNames.FONTTYPE_INFO)
                    Else
126                     Password = GetVar(CharPath & copyFrom & ".chr", "INIT", "Password")
128                     Call WriteVar(CharPath & UserName & ".chr", "INIT", "Password", Password)
                    
130                     Call WriteConsoleMsg(UserIndex, "Password de " & UserName & " cambiado a: " & Password, FontTypeNames.FONTTYPE_INFO)

                    End If

                End If

            End If
        
            'If we got here then packet is complete, copy data back to original queue
132         Call .incomingData.CopyBuffer(Buffer)

        End With

ErrHandler:

        Dim Error As Long

134     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
136     Set Buffer = Nothing
    
138     If Error <> 0 Then Err.raise Error

End Sub

''
' Handle the "HandleCreateNPC" message
'
' @param UserIndex The index of the user sending the message

Public Sub HandleCreateNPC(ByVal UserIndex As Integer)
        
        On Error GoTo HandleCreateNPC_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 12/24/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
104     With UserList(UserIndex)
    
            'Remove Packet ID
106         Call .incomingData.ReadByte
        
108         Dim NpcIndex As Integer: NpcIndex = .incomingData.ReadInteger()
        
110         If .flags.Privilegios And (PlayerType.user Or PlayerType.Consejero Or PlayerType.SemiDios) Then Exit Sub
        
            'Nos fijamos si es pretoriano.
112         If NpcList(NpcIndex).NPCtype = eNPCType.Pretoriano Then
114             Call WriteConsoleMsg(UserIndex, "No puedes sumonear miembros del clan pretoriano de esta forma, utiliza /CrearPretoianos MAPA X Y.", FontTypeNames.FONTTYPE_WARNING)
                Exit Sub

            End If
        
116         NpcIndex = SpawnNpc(NpcIndex, .Pos, True, False)
        
118         If NpcIndex <> 0 Then
120             Call LogGM(.name, "Sumoneo a " & NpcList(NpcIndex).name & " en mapa " & .Pos.Map)
            End If

        End With

        
        Exit Sub

HandleCreateNPC_Err:
122     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleCreateNPC", Erl)
124     Resume Next
        
End Sub

''
' Handle the "CreateNPCWithRespawn" message
'
' @param UserIndex The index of the user sending the message

Public Sub HandleCreateNPCWithRespawn(ByVal UserIndex As Integer)
        
        On Error GoTo HandleCreateNPCWithRespawn_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 12/24/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
104     With UserList(UserIndex)
            'Remove Packet ID
106         Call .incomingData.ReadByte
        
            Dim NpcIndex As Integer
        
108         NpcIndex = .incomingData.ReadInteger()
        
110         If .flags.Privilegios And (PlayerType.user Or PlayerType.Consejero Or PlayerType.SemiDios) Then Exit Sub
        
112         NpcIndex = SpawnNpc(NpcIndex, .Pos, True, True)
        
114         If NpcIndex <> 0 Then
116             Call LogGM(.name, "Sumoneo con respawn " & NpcList(NpcIndex).name & " en mapa " & .Pos.Map)

            End If

        End With

        
        Exit Sub

HandleCreateNPCWithRespawn_Err:
118     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleCreateNPCWithRespawn", Erl)
120     Resume Next
        
End Sub

''
' Handle the "ImperialArmour" message
'
' @param UserIndex The index of the user sending the message

Public Sub HandleImperialArmour(ByVal UserIndex As Integer)
        
        On Error GoTo HandleImperialArmour_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 12/24/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 4 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
104     With UserList(UserIndex)
            'Remove Packet ID
106         Call .incomingData.ReadByte
        
            Dim index    As Byte

            Dim ObjIndex As Integer
        
108         index = .incomingData.ReadByte()
110         ObjIndex = .incomingData.ReadInteger()
        
112         If .flags.Privilegios And (PlayerType.user Or PlayerType.Consejero Or PlayerType.SemiDios Or PlayerType.RoleMaster) Then Exit Sub
        
114         Select Case index

                Case 1
                    ' ArmaduraImperial1 = objindex
            
116             Case 2
                    ' ArmaduraImperial2 = objindex
            
118             Case 3
                    ' ArmaduraImperial3 = objindex
            
120             Case 4

                    ' TunicaMagoImperial = objindex
            End Select

        End With

        
        Exit Sub

HandleImperialArmour_Err:
122     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleImperialArmour", Erl)
124     Resume Next
        
End Sub

''
' Handle the "ChaosArmour" message
'
' @param UserIndex The index of the user sending the message

Public Sub HandleChaosArmour(ByVal UserIndex As Integer)
        
        On Error GoTo HandleChaosArmour_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 12/24/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 4 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
104     With UserList(UserIndex)
            'Remove Packet ID
106         Call .incomingData.ReadByte
        
            Dim index    As Byte

            Dim ObjIndex As Integer
        
108         index = .incomingData.ReadByte()
110         ObjIndex = .incomingData.ReadInteger()
        
112         If .flags.Privilegios And (PlayerType.user Or PlayerType.Consejero Or PlayerType.SemiDios Or PlayerType.RoleMaster) Then Exit Sub
        
114         Select Case index

                Case 1
                    '   ArmaduraCaos1 = objindex
            
116             Case 2
                    '   ArmaduraCaos2 = objindex
            
118             Case 3
                    '   ArmaduraCaos3 = objindex
            
120             Case 4

                    '  TunicaMagoCaos = objindex
            End Select

        End With

        
        Exit Sub

HandleChaosArmour_Err:
122     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleChaosArmour", Erl)
124     Resume Next
        
End Sub

''
' Handle the "NavigateToggle" message
'
' @param UserIndex The index of the user sending the message

Public Sub HandleNavigateToggle(ByVal UserIndex As Integer)
        
        On Error GoTo HandleNavigateToggle_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 01/12/07
        '
        '***************************************************
100     With UserList(UserIndex)
            'Remove Packet ID
102         Call .incomingData.ReadByte
        
104         If .flags.Privilegios And (PlayerType.user Or PlayerType.Consejero) Then Exit Sub
        
106         If .flags.Navegando = 1 Then
108             .flags.Navegando = 0
            Else
110             .flags.Navegando = 1

            End If
        
            'Tell the client that we are navigating.
112         Call WriteNavigateToggle(UserIndex)

        End With

        
        Exit Sub

HandleNavigateToggle_Err:
114     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleNavigateToggle", Erl)
116     Resume Next
        
End Sub

''
' Handle the "ServerOpenToUsersToggle" message
'
' @param UserIndex The index of the user sending the message

Public Sub HandleServerOpenToUsersToggle(ByVal UserIndex As Integer)
        
        On Error GoTo HandleServerOpenToUsersToggle_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 12/24/06
        '
        '***************************************************
100     With UserList(UserIndex)
            'Remove Packet ID
102         Call .incomingData.ReadByte
        
104         If .flags.Privilegios And (PlayerType.user Or PlayerType.Consejero Or PlayerType.SemiDios Or PlayerType.RoleMaster) Then Exit Sub
        
106         If ServerSoloGMs > 0 Then
108             Call WriteConsoleMsg(UserIndex, "Servidor habilitado para todos.", FontTypeNames.FONTTYPE_INFO)
110             ServerSoloGMs = 0
            Else
112             Call WriteConsoleMsg(UserIndex, "Servidor restringido a administradores.", FontTypeNames.FONTTYPE_INFO)
114             ServerSoloGMs = 1

            End If

        End With

        
        Exit Sub

HandleServerOpenToUsersToggle_Err:
116     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleServerOpenToUsersToggle", Erl)
118     Resume Next
        
End Sub

''
' Handle the "TurnOffServer" message
'
' @param UserIndex The index of the user sending the message

Public Sub HandleParticipar(ByVal UserIndex As Integer)
        
        On Error GoTo HandleParticipar_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 12/24/06
        'Turns off the server
        '***************************************************
        Dim handle As Integer
    
100     With UserList(UserIndex)
            'Remove Packet ID
102         Call .incomingData.ReadByte
        
104         If Torneo.HayTorneoaActivo = False Then
106             Call WriteConsoleMsg(UserIndex, "No hay ningún evento disponible.", FontTypeNames.FONTTYPE_INFO)
                Exit Sub

            End If
                   
112         If .flags.EnTorneo Then
114             Call WriteConsoleMsg(UserIndex, "Ya estás participando.", FontTypeNames.FONTTYPE_INFO)
                Exit Sub

            End If
    
116         If .Stats.ELV > Torneo.nivelmaximo Then
118             Call WriteConsoleMsg(UserIndex, "El nivel míximo para participar es " & Torneo.nivelmaximo & ".", FontTypeNames.FONTTYPE_INFO)
                Exit Sub

            End If
    
120         If .Stats.ELV < Torneo.NivelMinimo Then
122             Call WriteConsoleMsg(UserIndex, "El nivel mínimo para participar es " & Torneo.NivelMinimo & ".", FontTypeNames.FONTTYPE_INFO)
                Exit Sub

            End If
    
124         If .Stats.GLD < Torneo.costo Then
126             Call WriteConsoleMsg(UserIndex, "No tienes suficiente oro para ingresar.", FontTypeNames.FONTTYPE_INFO)
                Exit Sub

            End If
        
128         If .clase = Mage And Torneo.mago = 0 Then
130             Call WriteConsoleMsg(UserIndex, "Tu clase no participa de este evento.", FontTypeNames.FONTTYPE_INFO)
                Exit Sub

            End If
        
132         If .clase = Cleric And Torneo.clerico = 0 Then
134             Call WriteConsoleMsg(UserIndex, "Tu clase no participa de este evento.", FontTypeNames.FONTTYPE_INFO)
                Exit Sub

            End If
        
136         If .clase = Warrior And Torneo.guerrero = 0 Then
138             Call WriteConsoleMsg(UserIndex, "Tu clase no participa de este evento.", FontTypeNames.FONTTYPE_INFO)
                Exit Sub

            End If
        
140         If .clase = Bard And Torneo.bardo = 0 Then
142             Call WriteConsoleMsg(UserIndex, "Tu clase no participa de este evento.", FontTypeNames.FONTTYPE_INFO)
                Exit Sub

            End If
        
144         If .clase = Assasin And Torneo.asesino = 0 Then
146             Call WriteConsoleMsg(UserIndex, "Tu clase no participa de este evento.", FontTypeNames.FONTTYPE_INFO)
                Exit Sub

            End If
   
148         If .clase = Druid And Torneo.druido = 0 Then
150             Call WriteConsoleMsg(UserIndex, "Tu clase no participa de este evento.", FontTypeNames.FONTTYPE_INFO)
                Exit Sub

            End If
        
152         If .clase = Paladin And Torneo.Paladin = 0 Then
154             Call WriteConsoleMsg(UserIndex, "Tu clase no participa de este evento.", FontTypeNames.FONTTYPE_INFO)
                Exit Sub

            End If
        
156         If .clase = Hunter And Torneo.cazador = 0 Then
158             Call WriteConsoleMsg(UserIndex, "Tu clase no participa de este evento.", FontTypeNames.FONTTYPE_INFO)
                Exit Sub

            End If
        
160         If .clase = Trabajador And Torneo.cazador = 0 Then
162             Call WriteConsoleMsg(UserIndex, "Tu clase no participa de este evento.", FontTypeNames.FONTTYPE_INFO)
                Exit Sub

            End If
   
164         If Torneo.Participantes = Torneo.cupos Then
166             Call WriteConsoleMsg(UserIndex, "Los cupos ya estan llenos.", FontTypeNames.FONTTYPE_INFO)
                Exit Sub

            End If
  
168         Call ParticiparTorneo(UserIndex)

        End With

        
        Exit Sub

HandleParticipar_Err:
170     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleParticipar", Erl)
172     Resume Next
        
End Sub

''
' Handle the "TurnCriminal" message
'
' @param UserIndex The index of the user sending the message

Public Sub HandleTurnCriminal(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 12/26/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            Dim UserName As String

            Dim tUser    As Integer
        
110         UserName = Buffer.ReadASCIIString()
        
112         If (Not .flags.Privilegios And PlayerType.RoleMaster) <> 0 And (.flags.Privilegios And (PlayerType.Admin Or PlayerType.Dios)) Then
114             Call LogGM(.name, "/CONDEN " & UserName)
            
116             tUser = NameIndex(UserName)

118             If tUser > 0 Then Call VolverCriminal(tUser)

            End If
                
            'If we got here then packet is complete, copy data back to original queue
120         Call .incomingData.CopyBuffer(Buffer)

        End With

ErrHandler:

        Dim Error As Long

122     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
124     Set Buffer = Nothing
    
126     If Error <> 0 Then Err.raise Error

End Sub

''
' Handle the "ResetFactions" message
'
' @param UserIndex The index of the user sending the message

Public Sub HandleResetFactions(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 12/26/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            Dim UserName As String

            Dim tUser    As Integer
        
110         UserName = Buffer.ReadASCIIString()
        
112         If (Not .flags.Privilegios And PlayerType.RoleMaster) <> 0 And (.flags.Privilegios And (PlayerType.Admin Or PlayerType.Dios)) Then
114             Call LogGM(.name, "/RAJAR " & UserName)
            
116             tUser = NameIndex(UserName)
            
118             If tUser > 0 Then Call ResetFacciones(tUser)

            End If
        
            'If we got here then packet is complete, copy data back to original queue
120         Call .incomingData.CopyBuffer(Buffer)

        End With

ErrHandler:

        Dim Error As Long

122     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
124     Set Buffer = Nothing
    
126     If Error <> 0 Then Err.raise Error

End Sub

''
' Handle the "RemoveCharFromGuild" message
'
' @param UserIndex The index of the user sending the message

Public Sub HandleRemoveCharFromGuild(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 12/26/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            Dim UserName   As String

            Dim GuildIndex As Integer
        
110         UserName = Buffer.ReadASCIIString()
        
112         If (Not .flags.Privilegios And PlayerType.RoleMaster) <> 0 And (.flags.Privilegios And (PlayerType.Admin Or PlayerType.Dios)) Then
114             Call LogGM(.name, "/RAJARCLAN " & UserName)
            
116             GuildIndex = modGuilds.m_EcharMiembroDeClan(UserIndex, UserName)
            
118             If GuildIndex = 0 Then
120                 Call WriteConsoleMsg(UserIndex, "No pertenece a ningún clan o es fundador.", FontTypeNames.FONTTYPE_INFO)
                Else
122                 Call WriteConsoleMsg(UserIndex, "Expulsado.", FontTypeNames.FONTTYPE_INFO)
124                 Call SendData(SendTarget.ToGuildMembers, GuildIndex, PrepareMessageConsoleMsg(UserName & " ha sido expulsado del clan por los administradores del servidor.", FontTypeNames.FONTTYPE_GUILD))

                End If

            End If
        
            'If we got here then packet is complete, copy data back to original queue
126         Call .incomingData.CopyBuffer(Buffer)

        End With

ErrHandler:

        Dim Error As Long

128     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
130     Set Buffer = Nothing
    
132     If Error <> 0 Then Err.raise Error

End Sub

''
' Handle the "RequestCharMail" message
'
' @param UserIndex The index of the user sending the message

Public Sub HandleRequestCharMail(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 12/26/06
        'Request user mail
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            Dim UserName As String

            Dim mail     As String
        
110         UserName = Buffer.ReadASCIIString()
        
112         If (Not .flags.Privilegios And PlayerType.RoleMaster) <> 0 And (.flags.Privilegios And (PlayerType.Admin Or PlayerType.Dios)) Then
114             If FileExist(CharPath & UserName & ".chr") Then
116                 mail = GetVar(CharPath & UserName & ".chr", "CONTACTO", "email")
                
118                 Call WriteConsoleMsg(UserIndex, "Last email de " & UserName & ":" & mail, FontTypeNames.FONTTYPE_INFO)

                End If

            End If
        
            'If we got here then packet is complete, copy data back to original queue
120         Call .incomingData.CopyBuffer(Buffer)

        End With

ErrHandler:

        Dim Error As Long

122     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
124     Set Buffer = Nothing
    
126     If Error <> 0 Then Err.raise Error

End Sub

''
' Handle the "SystemMessage" message
'
' @param UserIndex The index of the user sending the message

Public Sub HandleSystemMessage(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Lucas Tavolaro Ortiz (Tavo)
        'Last Modification: 12/29/06
        'Send a message to all the users
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            Dim message As String

110         message = Buffer.ReadASCIIString()
        
112         If (Not .flags.Privilegios And PlayerType.RoleMaster) <> 0 And (.flags.Privilegios And (PlayerType.Admin Or PlayerType.Dios)) Then
114             Call LogGM(.name, "Mensaje de sistema:" & message)
            
116             Call SendData(SendTarget.ToAll, 0, PrepareMessageShowMessageBox(message))

            End If
        
            'If we got here then packet is complete, copy data back to original queue
118         Call .incomingData.CopyBuffer(Buffer)

        End With

ErrHandler:

        Dim Error As Long

120     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
122     Set Buffer = Nothing
    
124     If Error <> 0 Then Err.raise Error

End Sub

''
' Handle the "SetMOTD" message
'
' @param UserIndex The index of the user sending the message

Public Sub HandleSetMOTD(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Lucas Tavolaro Ortiz (Tavo)
        'Last Modification: 03/31/07
        'Set the MOTD
        'Modified by: Juan Martín Sotuyo Dodero (Maraxus)
        '   - Fixed a bug that prevented from properly setting the new number of lines.
        '   - Fixed a bug that caused the player to be kicked.
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            Dim newMOTD           As String

            Dim auxiliaryString() As String

            Dim LoopC             As Long
        
110         newMOTD = Buffer.ReadASCIIString()
112         auxiliaryString = Split(newMOTD, vbCrLf)
        
114         If (Not .flags.Privilegios And PlayerType.RoleMaster) <> 0 And (.flags.Privilegios And (PlayerType.Admin Or PlayerType.Dios)) Then
116             Call LogGM(.name, "Ha fijado un nuevo MOTD")
            
118             MaxLines = UBound(auxiliaryString()) + 1
            
120             ReDim MOTD(1 To MaxLines)
            
122             Call WriteVar(DatPath & "Motd.ini", "INIT", "NumLines", CStr(MaxLines))
            
124             For LoopC = 1 To MaxLines
126                 Call WriteVar(DatPath & "Motd.ini", "Motd", "Line" & CStr(LoopC), auxiliaryString(LoopC - 1))
                
128                 MOTD(LoopC).texto = auxiliaryString(LoopC - 1)
130             Next LoopC
            
132             Call WriteConsoleMsg(UserIndex, "Se ha cambiado el MOTD con exito", FontTypeNames.FONTTYPE_INFO)

            End If
        
            'If we got here then packet is complete, copy data back to original queue
134         Call .incomingData.CopyBuffer(Buffer)

        End With

ErrHandler:

        Dim Error As Long

136     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
138     Set Buffer = Nothing
    
140     If Error <> 0 Then Err.raise Error

End Sub

''
' Handle the "ChangeMOTD" message
'
' @param UserIndex The index of the user sending the message

Public Sub HandleChangeMOTD(ByVal UserIndex As Integer)
        
        On Error GoTo HandleChangeMOTD_Err
        

        '***************************************************
        'Author: Juan Martín sotuyo Dodero (Maraxus)
        'Last Modification: 12/29/06
        'Change the MOTD
        '***************************************************
100     With UserList(UserIndex)
            'Remove Packet ID
102         Call .incomingData.ReadByte
        
104         If (.flags.Privilegios And (PlayerType.RoleMaster Or PlayerType.user Or PlayerType.Consejero Or PlayerType.SemiDios)) Then
                Exit Sub

            End If
        
            Dim auxiliaryString As String

            Dim LoopC           As Long
        
106         For LoopC = LBound(MOTD()) To UBound(MOTD())
108             auxiliaryString = auxiliaryString & MOTD(LoopC).texto & vbCrLf
110         Next LoopC
        
112         If Len(auxiliaryString) >= 2 Then
114             If Right$(auxiliaryString, 2) = vbCrLf Then
116                 auxiliaryString = Left$(auxiliaryString, Len(auxiliaryString) - 2)

                End If

            End If
        
118         Call WriteShowMOTDEditionForm(UserIndex, auxiliaryString)

        End With

        
        Exit Sub

HandleChangeMOTD_Err:
120     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleChangeMOTD", Erl)
122     Resume Next
        
End Sub

''
' Handle the "Ping" message
'
' @param UserIndex The index of the user sending the message

Public Sub HandlePing(ByVal UserIndex As Integer)
        
        On Error GoTo HandlePing_Err
        

        '***************************************************
        'Author: Lucas Tavolaro Ortiz (Tavo)
        'Last Modification: 12/24/06
        'Show guilds messages
        '***************************************************
100     With UserList(UserIndex)
            'Remove Packet ID
102         Call .incomingData.ReadByte

            Dim Time As Long
        
104         Time = .incomingData.ReadLong()
        
106         Call WritePong(UserIndex, Time)

        End With

        
        Exit Sub

HandlePing_Err:
108     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandlePing", Erl)
110     Resume Next
        
End Sub

''
' Writes the "Logged" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteLoggedMessage(ByVal UserIndex As Integer)

        On Error GoTo ErrHandler

100     Call UserList(UserIndex).outgoingData.WriteByte(ServerPacketID.logged)
        Exit Sub
ErrHandler:

102     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
104         Call FlushBuffer(UserIndex)
106         Resume
        End If

End Sub

Public Sub WriteHora(ByVal UserIndex As Integer)

        On Error GoTo ErrHandler

100     Call UserList(UserIndex).outgoingData.WriteASCIIStringFixed(PrepareMessageHora())
        Exit Sub

ErrHandler:

102     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
104         Call FlushBuffer(UserIndex)
106         Resume
        End If

End Sub

''
' Writes the "RemoveDialogs" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteRemoveAllDialogs(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "RemoveDialogs" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     Call UserList(UserIndex).outgoingData.WriteByte(ServerPacketID.RemoveDialogs)
        Exit Sub

ErrHandler:

102     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
104         Call FlushBuffer(UserIndex)
106         Resume
        End If

End Sub

''
' Writes the "RemoveCharDialog" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @param    CharIndex Character whose dialog will be removed.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteRemoveCharDialog(ByVal UserIndex As Integer, ByVal CharIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "RemoveCharDialog" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     Call UserList(UserIndex).outgoingData.WriteASCIIStringFixed(PrepareMessageRemoveCharDialog(CharIndex))
        Exit Sub

ErrHandler:

102     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
104         Call FlushBuffer(UserIndex)
106         Resume
        End If

End Sub

' Writes the "NavigateToggle" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteNavigateToggle(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "NavigateToggle" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     Call UserList(UserIndex).outgoingData.WriteByte(ServerPacketID.NavigateToggle)
        Exit Sub

ErrHandler:

102     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
104         Call FlushBuffer(UserIndex)
106         Resume
        End If

End Sub

Public Sub WriteNadarToggle(ByVal UserIndex As Integer, ByVal Puede As Boolean)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "NavigateToggle" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     With UserList(UserIndex).outgoingData
102         Call .WriteByte(ServerPacketID.NadarToggle)
104         Call .WriteBoolean(Puede)

        End With

        Exit Sub

ErrHandler:

106     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
108         Call FlushBuffer(UserIndex)
110         Resume
        End If
    
End Sub

Public Sub WriteEquiteToggle(ByVal UserIndex As Integer)
        
        On Error GoTo ErrHandler

100     Call UserList(UserIndex).outgoingData.WriteByte(ServerPacketID.EquiteToggle)
        Exit Sub

ErrHandler:

102     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
104         Call FlushBuffer(UserIndex)
106         Resume
        End If

End Sub

Public Sub WriteVelocidadToggle(ByVal UserIndex As Integer)
        
        On Error GoTo ErrHandler

100     With UserList(UserIndex).outgoingData
102         Call .WriteByte(ServerPacketID.VelocidadToggle)
104         Call .WriteSingle(UserList(UserIndex).Char.speeding)

        End With

        Exit Sub

ErrHandler:

106     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
108         Call FlushBuffer(UserIndex)
110         Resume
        End If

End Sub

Public Sub WriteMacroTrabajoToggle(ByVal UserIndex As Integer, ByVal Activar As Boolean)

100     If Not Activar Then
102         UserList(UserIndex).flags.TargetObj = 0 ' Sacamos el targer del objeto
104         UserList(UserIndex).flags.UltimoMensaje = 0
106         UserList(UserIndex).Counters.Trabajando = 0
108         UserList(UserIndex).flags.UsandoMacro = False
       
        Else
110         UserList(UserIndex).flags.UsandoMacro = True

        End If

        On Error GoTo ErrHandler

112     With UserList(UserIndex).outgoingData
114         Call .WriteByte(ServerPacketID.MacroTrabajoToggle)
116         Call .WriteBoolean(Activar)

        End With

        Exit Sub

ErrHandler:

118     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
120         Call FlushBuffer(UserIndex)
122         Resume
        End If

End Sub

''
' Writes the "Disconnect" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteDisconnect(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "Disconnect" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     Call WritePersonajesDeCuenta(UserIndex)

102     Call WriteMostrarCuenta(UserIndex)
    
104     Call UserList(UserIndex).outgoingData.WriteByte(ServerPacketID.Disconnect)

        Exit Sub

ErrHandler:

106     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
108         Call FlushBuffer(UserIndex)
110         Resume
        End If

End Sub

''
' Writes the "CommerceEnd" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteCommerceEnd(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "CommerceEnd" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     Call UserList(UserIndex).outgoingData.WriteByte(ServerPacketID.CommerceEnd)
        Exit Sub

ErrHandler:

102     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
104         Call FlushBuffer(UserIndex)
106         Resume
        End If

End Sub

''
' Writes the "BankEnd" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteBankEnd(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "BankEnd" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     Call UserList(UserIndex).outgoingData.WriteByte(ServerPacketID.BankEnd)
        Exit Sub

ErrHandler:

102     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
104         Call FlushBuffer(UserIndex)
106         Resume
        End If

End Sub

''
' Writes the "CommerceInit" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteCommerceInit(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "CommerceInit" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     Call UserList(UserIndex).outgoingData.WriteByte(ServerPacketID.CommerceInit)
102     Call UserList(UserIndex).outgoingData.WriteASCIIString(NpcList(UserList(UserIndex).flags.TargetNPC).name)
        Exit Sub

ErrHandler:

104     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
106         Call FlushBuffer(UserIndex)
108         Resume
        End If

End Sub

''
' Writes the "BankInit" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteBankInit(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "BankInit" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     Call UserList(UserIndex).outgoingData.WriteByte(ServerPacketID.BankInit)
        Exit Sub

ErrHandler:

102     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
104         Call FlushBuffer(UserIndex)
106         Resume
        End If

End Sub

''
' Writes the "UserCommerceInit" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteUserCommerceInit(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "UserCommerceInit" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     Call UserList(UserIndex).outgoingData.WriteByte(ServerPacketID.UserCommerceInit)
        Exit Sub

ErrHandler:

102     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
104         Call FlushBuffer(UserIndex)
106         Resume
        End If

End Sub

''
' Writes the "UserCommerceEnd" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteUserCommerceEnd(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "UserCommerceEnd" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     Call UserList(UserIndex).outgoingData.WriteByte(ServerPacketID.UserCommerceEnd)
        Exit Sub

ErrHandler:

102     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
104         Call FlushBuffer(UserIndex)
106         Resume
        End If

End Sub

''
' Writes the "ShowBlacksmithForm" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteShowBlacksmithForm(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "ShowBlacksmithForm" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     Call UserList(UserIndex).outgoingData.WriteByte(ServerPacketID.ShowBlacksmithForm)
        Exit Sub

ErrHandler:

102     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
104         Call FlushBuffer(UserIndex)
106         Resume
        End If

End Sub

''
' Writes the "ShowCarpenterForm" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteShowCarpenterForm(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "ShowCarpenterForm" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     Call UserList(UserIndex).outgoingData.WriteByte(ServerPacketID.ShowCarpenterForm)
        Exit Sub

ErrHandler:

102     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
104         Call FlushBuffer(UserIndex)
106         Resume
        End If

End Sub

Public Sub WriteShowAlquimiaForm(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "ShowCarpenterForm" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     Call UserList(UserIndex).outgoingData.WriteByte(ServerPacketID.ShowAlquimiaForm)
        Exit Sub

ErrHandler:

102     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
104         Call FlushBuffer(UserIndex)
106         Resume
        End If

End Sub

Public Sub WriteShowSastreForm(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "ShowCarpenterForm" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     Call UserList(UserIndex).outgoingData.WriteByte(ServerPacketID.ShowSastreForm)
        Exit Sub

ErrHandler:

102     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
104         Call FlushBuffer(UserIndex)
106         Resume
        End If

End Sub

''
' Writes the "NPCKillUser" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteNPCKillUser(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "NPCKillUser" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     Call UserList(UserIndex).outgoingData.WriteByte(ServerPacketID.NPCKillUser)
        Exit Sub

ErrHandler:

102     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
104         Call FlushBuffer(UserIndex)
106         Resume
        End If

End Sub

''
' Writes the "BlockedWithShieldUser" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteBlockedWithShieldUser(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "BlockedWithShieldUser" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     Call UserList(UserIndex).outgoingData.WriteByte(ServerPacketID.BlockedWithShieldUser)
        Exit Sub

ErrHandler:

102     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
104         Call FlushBuffer(UserIndex)
106         Resume
        End If

End Sub

''
' Writes the "BlockedWithShieldOther" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteBlockedWithShieldOther(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "BlockedWithShieldOther" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     Call UserList(UserIndex).outgoingData.WriteByte(ServerPacketID.BlockedWithShieldOther)
        Exit Sub

ErrHandler:

102     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
104         Call FlushBuffer(UserIndex)
106         Resume
        End If

End Sub

''
' Writes the "CharSwing" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteCharSwing(ByVal UserIndex As Integer, ByVal CharIndex As Integer, Optional ByVal FX As Boolean = True, Optional ByVal ShowText As Boolean = True)

        '***************************************************
        On Error GoTo ErrHandler

100     Call UserList(UserIndex).outgoingData.WriteASCIIStringFixed(PrepareMessageCharSwing(CharIndex, FX, ShowText))
        Exit Sub

ErrHandler:

102     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
104         Call FlushBuffer(UserIndex)
106         Resume
        End If

End Sub

Public Function PrepareMessageCharSwing(ByVal CharIndex As Integer, Optional ByVal FX As Boolean = True, Optional ByVal ShowText As Boolean = True) As String
        
        On Error GoTo PrepareMessageCharSwing_Err
        

        '***************************************************
100     With auxiliarBuffer
102         Call .WriteByte(ServerPacketID.CharSwing)
104         Call .WriteInteger(CharIndex)
106         Call .WriteBoolean(FX)
108         Call .WriteBoolean(ShowText)
        
110         PrepareMessageCharSwing = .ReadASCIIStringFixed(.Length)

        End With

        
        Exit Function

PrepareMessageCharSwing_Err:
112     Call RegistrarError(Err.Number, Err.Description, "Protocol.PrepareMessageCharSwing", Erl)
114     Resume Next
        
End Function

''
' Writes the "SafeModeOn" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteSafeModeOn(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "SafeModeOn" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     Call UserList(UserIndex).outgoingData.WriteByte(ServerPacketID.SafeModeOn)
        Exit Sub

ErrHandler:

102     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
104         Call FlushBuffer(UserIndex)
106         Resume
        End If

End Sub

''
' Writes the "SafeModeOff" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteSafeModeOff(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "SafeModeOff" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     Call UserList(UserIndex).outgoingData.WriteByte(ServerPacketID.SafeModeOff)
        Exit Sub

ErrHandler:

102     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
104         Call FlushBuffer(UserIndex)
106         Resume
        End If

End Sub

''
' Writes the "PartySafeOn" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WritePartySafeOn(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Rapsodius
        'Last Modification: 10/10/07
        'Writes the "PartySafeOn" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     Call UserList(UserIndex).outgoingData.WriteByte(ServerPacketID.PartySafeOn)
        Exit Sub

ErrHandler:

102     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
104         Call FlushBuffer(UserIndex)
106         Resume
        End If

End Sub

''
' Writes the "PartySafeOff" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WritePartySafeOff(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Rapsodius
        'Last Modification: 10/10/07
        'Writes the "PartySafeOff" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     Call UserList(UserIndex).outgoingData.WriteByte(ServerPacketID.PartySafeOff)
        Exit Sub

ErrHandler:

102     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
104         Call FlushBuffer(UserIndex)
106         Resume
        End If

End Sub

Public Sub WriteClanSeguro(ByVal UserIndex As Integer, ByVal estado As Boolean)

        '***************************************************
        'Author: Rapsodius
        'Last Modification: 10/10/07
        'Writes the "PartySafeOff" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     Call UserList(UserIndex).outgoingData.WriteByte(ServerPacketID.ClanSeguro)
102     Call UserList(UserIndex).outgoingData.WriteBoolean(estado)
        Exit Sub

ErrHandler:

104     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
106         Call FlushBuffer(UserIndex)
108         Resume
        End If

End Sub

Public Sub WriteSeguroResu(ByVal UserIndex As Integer, ByVal estado As Boolean)

        On Error GoTo ErrHandler

100     Call UserList(UserIndex).outgoingData.WriteByte(ServerPacketID.SeguroResu)
102     Call UserList(UserIndex).outgoingData.WriteBoolean(estado)
        Exit Sub

ErrHandler:

104     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
106         Call FlushBuffer(UserIndex)
108         Resume
        End If

End Sub

''
' Writes the "CantUseWhileMeditating" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteCantUseWhileMeditating(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "CantUseWhileMeditating" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     Call UserList(UserIndex).outgoingData.WriteByte(ServerPacketID.CantUseWhileMeditating)
        Exit Sub

ErrHandler:

102     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
104         Call FlushBuffer(UserIndex)
106         Resume
        End If

End Sub

''
' Writes the "UpdateSta" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteUpdateSta(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "UpdateMana" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     With UserList(UserIndex).outgoingData
102         Call .WriteByte(ServerPacketID.UpdateSta)
104         Call .WriteInteger(UserList(UserIndex).Stats.MinSta)

        End With

        Exit Sub

ErrHandler:

106     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
108         Call FlushBuffer(UserIndex)
110         Resume
        End If

End Sub

''
' Writes the "UpdateMana" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteUpdateMana(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "UpdateMana" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     With UserList(UserIndex).outgoingData
102         Call .WriteByte(ServerPacketID.UpdateMana)
104         Call .WriteInteger(UserList(UserIndex).Stats.MinMAN)

        End With

        Exit Sub

ErrHandler:

106     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
108         Call FlushBuffer(UserIndex)
110         Resume
        End If

End Sub

''
' Writes the "UpdateHP" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteUpdateHP(ByVal UserIndex As Integer)

        'Call SendData(SendTarget.ToDiosesYclan, UserIndex, PrepareMessageCharUpdateHP(UserIndex))
100     Call SendData(SendTarget.ToDiosesYclan, UserList(UserIndex).GuildIndex, PrepareMessageCharUpdateHP(UserIndex))

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "UpdateMana" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

102     With UserList(UserIndex).outgoingData
104         Call .WriteByte(ServerPacketID.UpdateHP)
106         Call .WriteInteger(UserList(UserIndex).Stats.MinHp)

        End With

        Exit Sub

ErrHandler:

108     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
110         Call FlushBuffer(UserIndex)
112         Resume
        End If

End Sub

''
' Writes the "UpdateGold" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteUpdateGold(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "UpdateGold" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     With UserList(UserIndex).outgoingData
102         Call .WriteByte(ServerPacketID.UpdateGold)
104         Call .WriteLong(UserList(UserIndex).Stats.GLD)

        End With

        Exit Sub

ErrHandler:

106     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
108         Call FlushBuffer(UserIndex)
110         Resume
        End If

End Sub

''
' Writes the "UpdateExp" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteUpdateExp(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "UpdateExp" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     With UserList(UserIndex).outgoingData
102         Call .WriteByte(ServerPacketID.UpdateExp)
104         Call .WriteLong(UserList(UserIndex).Stats.Exp)

        End With

        Exit Sub

ErrHandler:

106     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
108         Call FlushBuffer(UserIndex)
110         Resume
        End If

End Sub

''
' Writes the "ChangeMap" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @param    map The new map to load.
' @param    version The version of the map in the server to check if client is properly updated.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteChangeMap(ByVal UserIndex As Integer, ByVal Map As Integer)
        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "ChangeMap" message to the given user's outgoing data buffer
        '***************************************************

        Dim Version As Integer

        On Error GoTo ErrHandler

100     With UserList(UserIndex).outgoingData
102         Call .WriteByte(ServerPacketID.changeMap)
104         Call .WriteInteger(Map)
106         Call .WriteInteger(Version)

        End With

        Exit Sub

ErrHandler:

108     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
110         Call FlushBuffer(UserIndex)
112         Resume
        End If

End Sub

''
' Writes the "PosUpdate" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WritePosUpdate(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "PosUpdate" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     With UserList(UserIndex).outgoingData
102         Call .WriteByte(ServerPacketID.PosUpdate)
104         Call .WriteByte(UserList(UserIndex).Pos.X)
106         Call .WriteByte(UserList(UserIndex).Pos.Y)

        End With

        Exit Sub

ErrHandler:

108     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
110         Call FlushBuffer(UserIndex)
112         Resume
        End If

End Sub

''
' Writes the "NPCHitUser" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @param    target Part of the body where the user was hitted.
' @param    damage The number of HP lost by the hit.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteNPCHitUser(ByVal UserIndex As Integer, ByVal Target As PartesCuerpo, ByVal damage As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "NPCHitUser" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     With UserList(UserIndex).outgoingData
102         Call .WriteByte(ServerPacketID.NPCHitUser)
104         Call .WriteByte(Target)
106         Call .WriteInteger(damage)

        End With

        Exit Sub

ErrHandler:

108     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
110         Call FlushBuffer(UserIndex)
112         Resume
        End If

End Sub

''
' Writes the "UserHitNPC" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @param    damage The number of HP lost by the target creature.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteUserHitNPC(ByVal UserIndex As Integer, ByVal damage As Long)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "UserHitNPC" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     With UserList(UserIndex).outgoingData
102         Call .WriteByte(ServerPacketID.UserHitNPC)
        
            'It is a long to allow the "drake slayer" (matadracos) to kill the great red dragon of one blow.
104         Call .WriteLong(damage)

        End With

        Exit Sub

ErrHandler:

106     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
108         Call FlushBuffer(UserIndex)
110         Resume
        End If

End Sub

''
' Writes the "UserAttackedSwing" message to the given user's outgoing data buffer.
'
' @param    UserIndex       User to which the message is intended.
' @param    attackerIndex   The user index of the user that attacked.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteUserAttackedSwing(ByVal UserIndex As Integer, ByVal attackerIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "UserAttackedSwing" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     With UserList(UserIndex).outgoingData
102         Call .WriteByte(ServerPacketID.UserAttackedSwing)
104         Call .WriteInteger(UserList(attackerIndex).Char.CharIndex)

        End With

        Exit Sub

ErrHandler:

106     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
108         Call FlushBuffer(UserIndex)
110         Resume
        End If

End Sub

''
' Writes the "UserHittedByUser" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @param    target Part of the body where the user was hitted.
' @param    attackerChar Char index of the user hitted.
' @param    damage The number of HP lost by the hit.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteUserHittedByUser(ByVal UserIndex As Integer, ByVal Target As PartesCuerpo, ByVal attackerChar As Integer, ByVal damage As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "UserHittedByUser" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     With UserList(UserIndex).outgoingData
102         Call .WriteByte(ServerPacketID.UserHittedByUser)
104         Call .WriteInteger(attackerChar)
106         Call .WriteByte(Target)
108         Call .WriteInteger(damage)

        End With

        Exit Sub

ErrHandler:

110     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
112         Call FlushBuffer(UserIndex)
114         Resume
        End If

End Sub

''
' Writes the "UserHittedUser" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @param    target Part of the body where the user was hitted.
' @param    attackedChar Char index of the user hitted.
' @param    damage The number of HP lost by the oponent hitted.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteUserHittedUser(ByVal UserIndex As Integer, ByVal Target As PartesCuerpo, ByVal attackedChar As Integer, ByVal damage As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "UserHittedUser" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     With UserList(UserIndex).outgoingData
102         Call .WriteByte(ServerPacketID.UserHittedUser)
104         Call .WriteInteger(attackedChar)
106         Call .WriteByte(Target)
108         Call .WriteInteger(damage)

        End With

        Exit Sub

ErrHandler:

110     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
112         Call FlushBuffer(UserIndex)
114         Resume
        End If

End Sub

''
' Writes the "ChatOverHead" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @param    Chat Text to be displayed over the char's head.
' @param    CharIndex The character uppon which the chat will be displayed.
' @param    Color The color to be used when displaying the chat.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteChatOverHead(ByVal UserIndex As Integer, ByVal chat As String, ByVal CharIndex As Integer, ByVal Color As Long)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "ChatOverHead" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     Call UserList(UserIndex).outgoingData.WriteASCIIStringFixed(PrepareMessageChatOverHead(chat, CharIndex, Color))
        Exit Sub

ErrHandler:

102     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
104         Call FlushBuffer(UserIndex)
106         Resume
        End If

End Sub

Public Sub WriteTextOverChar(ByVal UserIndex As Integer, ByVal chat As String, ByVal CharIndex As Integer, ByVal Color As Long)

        On Error GoTo ErrHandler

100     Call UserList(UserIndex).outgoingData.WriteASCIIStringFixed(PrepareMessageTextOverChar(chat, CharIndex, Color))
        Exit Sub

ErrHandler:

102     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
104         Call FlushBuffer(UserIndex)
106         Resume
        End If

End Sub

Public Sub WriteTextOverTile(ByVal UserIndex As Integer, ByVal chat As String, ByVal X As Integer, ByVal Y As Integer, ByVal Color As Long)

        On Error GoTo ErrHandler

100     Call UserList(UserIndex).outgoingData.WriteASCIIStringFixed(PrepareMessageTextOverTile(chat, X, Y, Color))
        Exit Sub

ErrHandler:

102     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
104         Call FlushBuffer(UserIndex)
106         Resume
        End If

End Sub

Public Sub WriteTextCharDrop(ByVal UserIndex As Integer, ByVal chat As String, ByVal CharIndex As Integer, ByVal Color As Long)

        On Error GoTo ErrHandler

100     Call UserList(UserIndex).outgoingData.WriteASCIIStringFixed(PrepareMessageTextCharDrop(chat, CharIndex, Color))
        Exit Sub

ErrHandler:

102     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
104         Call FlushBuffer(UserIndex)
106         Resume
        End If

End Sub

''
' Writes the "ConsoleMsg" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @param    Chat Text to be displayed over the char's head.
' @param    FontIndex Index of the FONTTYPE structure to use.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteConsoleMsg(ByVal UserIndex As Integer, ByVal chat As String, ByVal FontIndex As FontTypeNames)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "ConsoleMsg" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     Call UserList(UserIndex).outgoingData.WriteASCIIStringFixed(PrepareMessageConsoleMsg(chat, FontIndex))
        Exit Sub

ErrHandler:

102     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
104         Call FlushBuffer(UserIndex)
106         Resume
        End If

End Sub

Public Sub WriteLocaleMsg(ByVal UserIndex As Integer, ByVal Id As Integer, ByVal FontIndex As FontTypeNames, Optional ByVal strExtra As String = vbNullString)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "ConsoleMsg" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler
        
100     If UserIndex = 0 Then Exit Sub
        
102     Call UserList(UserIndex).outgoingData.WriteASCIIStringFixed(PrepareMessageLocaleMsg(Id, strExtra, FontIndex))
        Exit Sub

ErrHandler:

104     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
106         Call FlushBuffer(UserIndex)
108         Resume
        End If

End Sub

Public Sub WriteListaCorreo(ByVal UserIndex As Integer, ByVal Actualizar As Boolean)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "ConsoleMsg" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     Call UserList(UserIndex).outgoingData.WriteASCIIStringFixed(PrepareMessageListaCorreo(UserIndex, Actualizar))
        Exit Sub

ErrHandler:

102     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
104         Call FlushBuffer(UserIndex)
106         Resume
        End If

End Sub

''
' Writes the "GuildChat" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @param    Chat Text to be displayed over the char's head.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteGuildChat(ByVal UserIndex As Integer, ByVal chat As String)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "GuildChat" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     Call UserList(UserIndex).outgoingData.WriteASCIIStringFixed(PrepareMessageGuildChat(chat))
        Exit Sub

ErrHandler:

102     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
104         Call FlushBuffer(UserIndex)
106         Resume
        End If

End Sub

''
' Writes the "ShowMessageBox" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @param    Message Text to be displayed in the message box.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteShowMessageBox(ByVal UserIndex As Integer, ByVal message As String)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "ShowMessageBox" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     With UserList(UserIndex).outgoingData
102         Call .WriteByte(ServerPacketID.ShowMessageBox)
104         Call .WriteASCIIString(message)

        End With

        Exit Sub

ErrHandler:

106     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
108         Call FlushBuffer(UserIndex)
110         Resume
        End If

End Sub

Public Sub WriteMostrarCuenta(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "ShowMessageBox" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     With UserList(UserIndex).outgoingData
102         Call .WriteByte(ServerPacketID.MostrarCuenta)

        End With

        Exit Sub

ErrHandler:

104     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
106         Call FlushBuffer(UserIndex)
108         Resume
        End If

End Sub

''
' Writes the "UserIndexInServer" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteUserIndexInServer(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "UserIndexInServer" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     With UserList(UserIndex).outgoingData
102         Call .WriteByte(ServerPacketID.UserIndexInServer)
104         Call .WriteInteger(UserIndex)

        End With

        Exit Sub

ErrHandler:

106     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
108         Call FlushBuffer(UserIndex)
110         Resume
        End If

End Sub

''
' Writes the "UserCharIndexInServer" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteUserCharIndexInServer(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "UserIndexInServer" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     With UserList(UserIndex).outgoingData
102         Call .WriteByte(ServerPacketID.UserCharIndexInServer)
104         Call .WriteInteger(UserList(UserIndex).Char.CharIndex)

        End With

        Exit Sub

ErrHandler:

106     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
108         Call FlushBuffer(UserIndex)
110         Resume
        End If

End Sub

''
' Writes the "CharacterCreate" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @param    body Body index of the new character.
' @param    head Head index of the new character.
' @param    heading Heading in which the new character is looking.
' @param    CharIndex The index of the new character.
' @param    X X coord of the new character's position.
' @param    Y Y coord of the new character's position.
' @param    weapon Weapon index of the new character.
' @param    shield Shield index of the new character.
' @param    FX FX index to be displayed over the new character.
' @param    FXLoops Number of times the FX should be rendered.
' @param    helmet Helmet index of the new character.
' @param    name Name of the new character.
' @param    criminal Determines if the character is a criminal or not.
' @param    privileges Sets if the character is a normal one or any kind of administrative character.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteCharacterCreate(ByVal UserIndex As Integer, ByVal Body As Integer, ByVal Head As Integer, ByVal Heading As eHeading, ByVal CharIndex As Integer, ByVal X As Byte, ByVal Y As Byte, ByVal weapon As Integer, ByVal shield As Integer, ByVal FX As Integer, ByVal FXLoops As Integer, ByVal helmet As Integer, ByVal name As String, ByVal Status As Byte, ByVal privileges As Byte, ByVal ParticulaFx As Byte, ByVal Head_Aura As String, ByVal Arma_Aura As String, ByVal Body_Aura As String, ByVal DM_Aura As String, ByVal RM_Aura As String, ByVal Otra_Aura As String, ByVal Escudo_Aura As String, ByVal speeding As Single, ByVal EsNPC As Byte, ByVal donador As Byte, ByVal appear As Byte, ByVal group_index As Integer, ByVal clan_index As Integer, ByVal clan_nivel As Byte, ByVal UserMinHp As Long, ByVal UserMaxHp As Long, ByVal Simbolo As Byte, Optional ByVal Idle As Boolean = False, Optional ByVal Navegando As Boolean = False)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "CharacterCreate" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     Call UserList(UserIndex).outgoingData.WriteASCIIStringFixed(PrepareMessageCharacterCreate(Body, Head, Heading, CharIndex, X, Y, weapon, shield, FX, FXLoops, helmet, name, Status, privileges, ParticulaFx, Head_Aura, Arma_Aura, Body_Aura, DM_Aura, RM_Aura, Otra_Aura, Escudo_Aura, speeding, EsNPC, donador, appear, group_index, clan_index, clan_nivel, UserMinHp, UserMaxHp, Simbolo, Idle, Navegando))
        Exit Sub

ErrHandler:

102     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
104         Call FlushBuffer(UserIndex)
106         Resume
        End If

End Sub

''
' Writes the "CharacterRemove" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @param    CharIndex Character to be removed.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteCharacterRemove(ByVal UserIndex As Integer, ByVal CharIndex As Integer, ByVal Desvanecido As Boolean)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "CharacterRemove" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     Call UserList(UserIndex).outgoingData.WriteASCIIStringFixed(PrepareMessageCharacterRemove(CharIndex, Desvanecido))
        Exit Sub

ErrHandler:

102     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
104         Call FlushBuffer(UserIndex)
106         Resume
        End If

End Sub

''
' Writes the "CharacterMove" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @param    CharIndex Character which is moving.
' @param    X X coord of the character's new position.
' @param    Y Y coord of the character's new position.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteCharacterMove(ByVal UserIndex As Integer, ByVal CharIndex As Integer, ByVal X As Byte, ByVal Y As Byte)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "CharacterMove" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     Call UserList(UserIndex).outgoingData.WriteASCIIStringFixed(PrepareMessageCharacterMove(CharIndex, X, Y))
        Exit Sub

ErrHandler:

102     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
104         Call FlushBuffer(UserIndex)
106         Resume
        End If

End Sub

Public Sub WriteForceCharMove(ByVal UserIndex, ByVal Direccion As eHeading)

        '***************************************************
        'Author: ZaMa
        'Last Modification: 26/03/2009
        'Writes the "ForceCharMove" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     Call UserList(UserIndex).outgoingData.WriteASCIIStringFixed(PrepareMessageForceCharMove(Direccion))
        Exit Sub

ErrHandler:

102     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
104         Call FlushBuffer(UserIndex)
106         Resume

        End If

End Sub

''
' Writes the "CharacterChange" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @param    body Body index of the new character.
' @param    head Head index of the new character.
' @param    heading Heading in which the new character is looking.
' @param    CharIndex The index of the new character.
' @param    weapon Weapon index of the new character.
' @param    shield Shield index of the new character.
' @param    FX FX index to be displayed over the new character.
' @param    FXLoops Number of times the FX should be rendered.
' @param    helmet Helmet index of the new character.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteCharacterChange(ByVal UserIndex As Integer, ByVal Body As Integer, ByVal Head As Integer, ByVal Heading As eHeading, ByVal CharIndex As Integer, ByVal weapon As Integer, ByVal shield As Integer, ByVal FX As Integer, ByVal FXLoops As Integer, ByVal helmet As Integer, Optional ByVal Idle As Boolean = False, Optional ByVal Navegando As Boolean = False)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "CharacterChange" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     Call UserList(UserIndex).outgoingData.WriteASCIIStringFixed(PrepareMessageCharacterChange(Body, Head, Heading, CharIndex, weapon, shield, FX, FXLoops, helmet, Idle, Navegando))
        Exit Sub

ErrHandler:

102     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
104         Call FlushBuffer(UserIndex)
106         Resume
        End If

End Sub

''
' Writes the "ObjectCreate" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @param    GrhIndex Grh of the object.
' @param    X X coord of the character's new position.
' @param    Y Y coord of the character's new position.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteObjectCreate(ByVal UserIndex As Integer, ByVal ObjIndex As Integer, ByVal X As Byte, ByVal Y As Byte)
        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "ObjectCreate" message to the given user's outgoing data buffer
        '***************************************************

        'If ObjIndex = 251 Then
        ' Debug.Print "Crear la puerta"
        'End If
        On Error GoTo ErrHandler

100     Call UserList(UserIndex).outgoingData.WriteASCIIStringFixed(PrepareMessageObjectCreate(ObjIndex, X, Y))
        Exit Sub

ErrHandler:

102     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
104         Call FlushBuffer(UserIndex)
106         Resume
        End If

End Sub

Public Sub WriteParticleFloorCreate(ByVal UserIndex As Integer, ByVal Particula As Integer, ByVal ParticulaTime As Integer, ByVal Map As Integer, ByVal X As Byte, ByVal Y As Byte)

        On Error GoTo ErrHandler
  
100     If Particula = 0 Then Exit Sub
102     Call UserList(UserIndex).outgoingData.WriteASCIIStringFixed(PrepareMessageParticleFXToFloor(X, Y, Particula, ParticulaTime))
        Exit Sub

ErrHandler:

104     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
106         Call FlushBuffer(UserIndex)
108         Resume
        End If

End Sub

Public Sub WriteLightFloorCreate(ByVal UserIndex As Integer, ByVal LuzColor As Long, ByVal Rango As Byte, ByVal Map As Integer, ByVal X As Byte, ByVal Y As Byte)

        On Error GoTo ErrHandler
     
100     MapData(Map, X, Y).Luz.Color = LuzColor
102     MapData(Map, X, Y).Luz.Rango = Rango

104     If Rango = 0 Then Exit Sub
106     Call UserList(UserIndex).outgoingData.WriteASCIIStringFixed(PrepareMessageLightFXToFloor(X, Y, LuzColor, Rango))
        Exit Sub
    
ErrHandler:

108     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
110         Call FlushBuffer(UserIndex)
112         Resume
        End If

End Sub

Public Sub WriteFxPiso(ByVal UserIndex As Integer, ByVal GrhIndex As Integer, ByVal X As Byte, ByVal Y As Byte)

        On Error GoTo ErrHandler

100     Call UserList(UserIndex).outgoingData.WriteASCIIStringFixed(PrepareMessageFxPiso(GrhIndex, X, Y))
        Exit Sub

ErrHandler:

102     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
104         Call FlushBuffer(UserIndex)
106         Resume
        End If

End Sub

''
' Writes the "ObjectDelete" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @param    X X coord of the character's new position.
' @param    Y Y coord of the character's new position.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteObjectDelete(ByVal UserIndex As Integer, ByVal X As Byte, ByVal Y As Byte)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "ObjectDelete" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     Call UserList(UserIndex).outgoingData.WriteASCIIStringFixed(PrepareMessageObjectDelete(X, Y))
        Exit Sub

ErrHandler:

102     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
104         Call FlushBuffer(UserIndex)
106         Resume
        End If

End Sub

''
' Writes the "BlockPosition" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @param    X X coord of the character's new position.
' @param    Y Y coord of the character's new position.
' @param    Blocked True if the position is blocked.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteBlockPosition(ByVal UserIndex As Integer, ByVal X As Byte, ByVal Y As Byte, ByVal Blocked As Byte)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "BlockPosition" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     With UserList(UserIndex).outgoingData
102         Call .WriteByte(ServerPacketID.BlockPosition)
104         Call .WriteByte(X)
106         Call .WriteByte(Y)
108         Call .WriteByte(Blocked)

        End With

        Exit Sub

ErrHandler:

110     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
112         Call FlushBuffer(UserIndex)
114         Resume
        End If

End Sub

''
' Writes the "PlayMidi" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @param    midi The midi to be played.
' @param    loops Number of repets for the midi.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WritePlayMidi(ByVal UserIndex As Integer, ByVal midi As Byte, Optional ByVal loops As Integer = -1)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "PlayMidi" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     Call UserList(UserIndex).outgoingData.WriteASCIIStringFixed(PrepareMessagePlayMidi(midi, loops))
        Exit Sub

ErrHandler:

102     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
104         Call FlushBuffer(UserIndex)
106         Resume
        End If

End Sub

''
' Writes the "PlayWave" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @param    wave The wave to be played.
' @param    X The X position in map coordinates from where the sound comes.
' @param    Y The Y position in map coordinates from where the sound comes.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WritePlayWave(ByVal UserIndex As Integer, ByVal wave As Integer, ByVal X As Byte, ByVal Y As Byte)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 08/08/07
        'Last Modified by: Rapsodius
        'Added X and Y positions for 3D Sounds
        '***************************************************
        On Error GoTo ErrHandler

100     Call UserList(UserIndex).outgoingData.WriteASCIIStringFixed(PrepareMessagePlayWave(wave, X, Y))
        Exit Sub

ErrHandler:

102     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
104         Call FlushBuffer(UserIndex)
106         Resume
        End If

End Sub

''
' Writes the "GuildList" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @param    GuildList List of guilds to be sent.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteGuildList(ByVal UserIndex As Integer, ByRef guildList() As String)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "GuildList" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

        Dim Tmp As String

        Dim i   As Long
    
100     With UserList(UserIndex).outgoingData
102         Call .WriteByte(ServerPacketID.guildList)
        
            ' Prepare guild name's list
104         For i = LBound(guildList()) To UBound(guildList())
106             Tmp = Tmp & guildList(i) & SEPARATOR
108         Next i
        
110         If Len(Tmp) Then Tmp = Left$(Tmp, Len(Tmp) - 1)
        
112         Call .WriteASCIIString(Tmp)

        End With

        Exit Sub

ErrHandler:

114     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
116         Call FlushBuffer(UserIndex)
118         Resume
        End If

End Sub

''
' Writes the "AreaChanged" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteAreaChanged(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "AreaChanged" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     With UserList(UserIndex).outgoingData
102         Call .WriteByte(ServerPacketID.AreaChanged)
104         Call .WriteByte(UserList(UserIndex).Pos.X)
106         Call .WriteByte(UserList(UserIndex).Pos.Y)

        End With

        Exit Sub

ErrHandler:

108     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
110         Call FlushBuffer(UserIndex)
112         Resume
        End If

End Sub

''
' Writes the "PauseToggle" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WritePauseToggle(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "PauseToggle" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     Call UserList(UserIndex).outgoingData.WriteASCIIStringFixed(PrepareMessagePauseToggle())
        Exit Sub

ErrHandler:

102     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
104         Call FlushBuffer(UserIndex)
106         Resume
        End If

End Sub

''
' Writes the "RainToggle" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteRainToggle(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "RainToggle" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     Call UserList(UserIndex).outgoingData.WriteASCIIStringFixed(PrepareMessageRainToggle())
        Exit Sub

ErrHandler:

102     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
104         Call FlushBuffer(UserIndex)
106         Resume
        End If

End Sub

Public Sub WriteNubesToggle(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "RainToggle" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     Call UserList(UserIndex).outgoingData.WriteASCIIStringFixed(PrepareMessageNieblandoToggle(IntensidadDeNubes))
        Exit Sub

ErrHandler:

102     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
104         Call FlushBuffer(UserIndex)
106         Resume
        End If

End Sub

Public Sub WriteTrofeoToggleOn(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "RainToggle" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     Call UserList(UserIndex).outgoingData.WriteASCIIStringFixed(PrepareMessageTrofeoToggleOn())
        Exit Sub

ErrHandler:

102     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
104         Call FlushBuffer(UserIndex)
106         Resume
        End If

End Sub

Public Sub WriteTrofeoToggleOff(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "RainToggle" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     Call UserList(UserIndex).outgoingData.WriteASCIIStringFixed(PrepareMessageTrofeoToggleOff())
        Exit Sub

ErrHandler:

102     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
104         Call FlushBuffer(UserIndex)
106         Resume
        End If

End Sub

''
' Writes the "CreateFX" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @param    CharIndex Character upon which the FX will be created.
' @param    FX FX index to be displayed over the new character.
' @param    FXLoops Number of times the FX should be rendered.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteCreateFX(ByVal UserIndex As Integer, ByVal CharIndex As Integer, ByVal FX As Integer, ByVal FXLoops As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "CreateFX" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     Call UserList(UserIndex).outgoingData.WriteASCIIStringFixed(PrepareMessageCreateFX(CharIndex, FX, FXLoops))
        Exit Sub

ErrHandler:

102     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
104         Call FlushBuffer(UserIndex)
106         Resume
        End If

End Sub

''
' Writes the "UpdateUserStats" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteUpdateUserStats(ByVal UserIndex As Integer)
        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "UpdateUserStats" message to the given user's outgoing data buffer
        '***************************************************
        'Call SendData(SendTarget.ToPCArea, UserIndex, PrepareMessageCharUpdateHP(UserIndex))
100     Call SendData(SendTarget.ToDiosesYclan, UserList(UserIndex).GuildIndex, PrepareMessageCharUpdateHP(UserIndex))

        On Error GoTo ErrHandler

102     With UserList(UserIndex).outgoingData
104         Call .WriteByte(ServerPacketID.UpdateUserStats)
106         Call .WriteInteger(UserList(UserIndex).Stats.MaxHp)
108         Call .WriteInteger(UserList(UserIndex).Stats.MinHp)
110         Call .WriteInteger(UserList(UserIndex).Stats.MaxMAN)
112         Call .WriteInteger(UserList(UserIndex).Stats.MinMAN)
114         Call .WriteInteger(UserList(UserIndex).Stats.MaxSta)
116         Call .WriteInteger(UserList(UserIndex).Stats.MinSta)
118         Call .WriteLong(UserList(UserIndex).Stats.GLD)
120         Call .WriteByte(UserList(UserIndex).Stats.ELV)
122         Call .WriteLong(UserList(UserIndex).Stats.ELU)
124         Call .WriteLong(UserList(UserIndex).Stats.Exp)
126         Call .WriteByte(UserList(UserIndex).clase)

        End With

        Exit Sub

ErrHandler:

128     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
130         Call FlushBuffer(UserIndex)
132         Resume
        End If

End Sub

Public Sub WriteUpdateUserKey(ByVal UserIndex As Integer, ByVal slot As Integer, ByVal Llave As Integer)
        On Error GoTo ErrHandler

100     With UserList(UserIndex).outgoingData
102         Call .WriteByte(ServerPacketID.UpdateUserKey)
104         Call .WriteInteger(slot)
106         Call .WriteInteger(Llave)
        End With

        Exit Sub

ErrHandler:

108     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
110         Call FlushBuffer(UserIndex)
112         Resume
        End If

End Sub

' Actualiza el indicador de daño mágico
Public Sub WriteUpdateDM(ByVal UserIndex As Integer)
        On Error GoTo ErrHandler
    
        Dim Valor As Integer
    
100     With UserList(UserIndex).Invent
            ' % daño mágico del arma
102         If .WeaponEqpObjIndex > 0 Then
104             Valor = Valor + ObjData(.WeaponEqpObjIndex).MagicDamageBonus
            End If
            ' % daño mágico del anillo
106         If .DañoMagicoEqpObjIndex > 0 Then
108             Valor = Valor + ObjData(.DañoMagicoEqpObjIndex).MagicDamageBonus
            End If
        End With

110     With UserList(UserIndex).outgoingData
112         Call .WriteByte(ServerPacketID.UpdateDM)
114         Call .WriteInteger(Valor)
        End With

        Exit Sub

ErrHandler:
116     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
118         Call FlushBuffer(UserIndex)
120         Resume
        End If
End Sub

' Actualiza el indicador de resistencia mágica
Public Sub WriteUpdateRM(ByVal UserIndex As Integer)
        On Error GoTo ErrHandler
    
        Dim Valor As Integer
    
100     With UserList(UserIndex).Invent
            ' Resistencia mágica de la armadura
102         If .ArmourEqpObjIndex > 0 Then
104             Valor = Valor + ObjData(.ArmourEqpObjIndex).ResistenciaMagica
            End If
        
            ' Resistencia mágica del anillo
106         If .ResistenciaEqpObjIndex > 0 Then
108             Valor = Valor + ObjData(.ResistenciaEqpObjIndex).ResistenciaMagica
            End If
        
            ' Resistencia mágica del escudo
110         If .EscudoEqpObjIndex > 0 Then
112             Valor = Valor + ObjData(.EscudoEqpObjIndex).ResistenciaMagica
            End If
        
            ' Resistencia mágica del casco
114         If .CascoEqpObjIndex > 0 Then
116             Valor = Valor + ObjData(.CascoEqpObjIndex).ResistenciaMagica
            End If
        End With

118     With UserList(UserIndex).outgoingData
120         Call .WriteByte(ServerPacketID.UpdateRM)
122         Call .WriteInteger(Valor)
        End With

        Exit Sub

ErrHandler:
124     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
126         Call FlushBuffer(UserIndex)
128         Resume
        End If
End Sub

''
' Writes the "WorkRequestTarget" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @param    Skill The skill for which we request a target.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteWorkRequestTarget(ByVal UserIndex As Integer, ByVal Skill As eSkill)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "WorkRequestTarget" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     With UserList(UserIndex).outgoingData
102         Call .WriteByte(ServerPacketID.WorkRequestTarget)
104         Call .WriteByte(Skill)

        End With

        Exit Sub

ErrHandler:

106     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
108         Call FlushBuffer(UserIndex)
110         Resume
        End If

End Sub

' Writes the "InventoryUnlockSlots" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteInventoryUnlockSlots(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Ruthnar
        'Last Modification: 30/09/20
        'Writes the "WriteInventoryUnlockSlots" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     With UserList(UserIndex).outgoingData
102         Call .WriteByte(ServerPacketID.InventoryUnlockSlots)
104         Call .WriteByte(UserList(UserIndex).Stats.InventLevel)
        End With

        Exit Sub

ErrHandler:

106     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
108         Call FlushBuffer(UserIndex)
110         Resume
        End If

End Sub

Public Sub WriteIntervals(ByVal UserIndex As Integer)

        On Error GoTo ErrHandler

100     With UserList(UserIndex)
102         Call .outgoingData.WriteByte(ServerPacketID.Intervals)
104         Call .outgoingData.WriteLong(.Intervals.Arco)
106         Call .outgoingData.WriteLong(.Intervals.Caminar)
108         Call .outgoingData.WriteLong(.Intervals.Golpe)
110         Call .outgoingData.WriteLong(.Intervals.GolpeMagia)
112         Call .outgoingData.WriteLong(.Intervals.magia)
114         Call .outgoingData.WriteLong(.Intervals.MagiaGolpe)
116         Call .outgoingData.WriteLong(.Intervals.GolpeUsar)
118         Call .outgoingData.WriteLong(.Intervals.TrabajarExtraer)
120         Call .outgoingData.WriteLong(.Intervals.TrabajarConstruir)
122         Call .outgoingData.WriteLong(.Intervals.UsarU)
124         Call .outgoingData.WriteLong(.Intervals.UsarClic)
126         Call .outgoingData.WriteLong(IntervaloTirar)

        End With

        Exit Sub

ErrHandler:

128     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
130         Call FlushBuffer(UserIndex)
132         Resume
        End If

End Sub

Public Sub WriteChangeInventorySlot(ByVal UserIndex As Integer, ByVal slot As Byte)
        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 3/12/09
        'Writes the "ChangeInventorySlot" message to the given user's outgoing data buffer
        '3/12/09: Budi - Ahora se envia MaxDef y MinDef en lugar de Def
        '***************************************************

        On Error GoTo ErrHandler

        Dim ObjIndex As Integer
        Dim PodraUsarlo As Byte

100     With UserList(UserIndex).outgoingData
102         Call .WriteByte(ServerPacketID.ChangeInventorySlot)
104         Call .WriteByte(slot)
                
106         ObjIndex = UserList(UserIndex).Invent.Object(slot).ObjIndex

108         If ObjIndex > 0 Then
110             PodraUsarlo = PuedeUsarObjeto(UserIndex, ObjIndex)
            End If
    
112         Call .WriteInteger(ObjIndex)
114         Call .WriteInteger(UserList(UserIndex).Invent.Object(slot).Amount)
116         Call .WriteBoolean(UserList(UserIndex).Invent.Object(slot).Equipped)
118         Call .WriteSingle(SalePrice(ObjIndex))
120         Call .WriteByte(PodraUsarlo)

        End With

        Exit Sub

ErrHandler:

122     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
124         Call FlushBuffer(UserIndex)
126         Resume
        End If

End Sub

''
' Writes the "ChangeBankSlot" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @param    slot Inventory slot which needs to be updated.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteChangeBankSlot(ByVal UserIndex As Integer, ByVal slot As Byte)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "ChangeBankSlot" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler
        
        Dim ObjIndex As Integer
        Dim obData   As ObjData
        Dim PodraUsarlo As Byte

100     With UserList(UserIndex).outgoingData
102         Call .WriteByte(ServerPacketID.ChangeBankSlot)
104         Call .WriteByte(slot)

106         ObjIndex = UserList(UserIndex).BancoInvent.Object(slot).ObjIndex
        
108         Call .WriteInteger(ObjIndex)
        
110         If ObjIndex > 0 Then
112             obData = ObjData(ObjIndex)
                PodraUsarlo = PuedeUsarObjeto(UserIndex, ObjIndex)
            End If

118         Call .WriteInteger(UserList(UserIndex).BancoInvent.Object(slot).Amount)
120         Call .WriteLong(obData.Valor)
122         Call .WriteByte(PodraUsarlo)

        End With

        Exit Sub

ErrHandler:

124     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
126         Call FlushBuffer(UserIndex)
128         Resume
        End If

End Sub

''
' Writes the "ChangeSpellSlot" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @param    slot Spell slot to update.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteChangeSpellSlot(ByVal UserIndex As Integer, ByVal slot As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "ChangeSpellSlot" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     With UserList(UserIndex).outgoingData
102         Call .WriteByte(ServerPacketID.ChangeSpellSlot)
104         Call .WriteByte(slot)
106         Call .WriteInteger(UserList(UserIndex).Stats.UserHechizos(slot))
        
108         If UserList(UserIndex).Stats.UserHechizos(slot) > 0 Then
110             Call .WriteByte(UserList(UserIndex).Stats.UserHechizos(slot))
            Else
112             Call .WriteByte("255")

            End If

        End With

        Exit Sub

ErrHandler:

114     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
116         Call FlushBuffer(UserIndex)
118         Resume
        End If

End Sub

''
' Writes the "Atributes" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteAttributes(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "Atributes" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     With UserList(UserIndex).outgoingData
102         Call .WriteByte(ServerPacketID.Atributes)
104         Call .WriteByte(UserList(UserIndex).Stats.UserAtributos(eAtributos.Fuerza))
106         Call .WriteByte(UserList(UserIndex).Stats.UserAtributos(eAtributos.Agilidad))
108         Call .WriteByte(UserList(UserIndex).Stats.UserAtributos(eAtributos.Inteligencia))
110         Call .WriteByte(UserList(UserIndex).Stats.UserAtributos(eAtributos.Constitucion))
112         Call .WriteByte(UserList(UserIndex).Stats.UserAtributos(eAtributos.Carisma))
        End With

        Exit Sub

ErrHandler:

114     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
116         Call FlushBuffer(UserIndex)
118         Resume
        End If

End Sub

''
' Writes the "BlacksmithWeapons" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteBlacksmithWeapons(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 04/15/2008 (NicoNZ) Habia un error al fijarse los skills del personaje
        'Writes the "BlacksmithWeapons" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

        Dim i              As Long

        Dim obj            As ObjData

        Dim validIndexes() As Integer

        Dim Count          As Integer
    
100     ReDim validIndexes(1 To UBound(ArmasHerrero()))
    
102     With UserList(UserIndex).outgoingData
104         Call .WriteByte(ServerPacketID.BlacksmithWeapons)
        
106         For i = 1 To UBound(ArmasHerrero())

                ' Can the user create this object? If so add it to the list....
108             If ObjData(ArmasHerrero(i)).SkHerreria <= UserList(UserIndex).Stats.UserSkills(eSkill.Herreria) Then
110                 Count = Count + 1
112                 validIndexes(Count) = i

                End If

114         Next i
        
            ' Write the number of objects in the list
116         Call .WriteInteger(Count)
        
            ' Write the needed data of each object
118         For i = 1 To Count
120             obj = ObjData(ArmasHerrero(validIndexes(i)))
                'Call .WriteASCIIString(obj.Index)
122             Call .WriteInteger(ArmasHerrero(validIndexes(i)))
124             Call .WriteInteger(obj.LingH)
126             Call .WriteInteger(obj.LingP)
128             Call .WriteInteger(obj.LingO)
130         Next i

        End With

        Exit Sub

ErrHandler:

132     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
134         Call FlushBuffer(UserIndex)
136         Resume
        End If

End Sub

''
' Writes the "BlacksmithArmors" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteBlacksmithArmors(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 04/15/2008 (NicoNZ) Habia un error al fijarse los skills del personaje
        'Writes the "BlacksmithArmors" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

        Dim i              As Long

        Dim obj            As ObjData

        Dim validIndexes() As Integer

        Dim Count          As Integer
    
100     ReDim validIndexes(1 To UBound(ArmadurasHerrero()))
    
102     With UserList(UserIndex).outgoingData
104         Call .WriteByte(ServerPacketID.BlacksmithArmors)
        
106         For i = 1 To UBound(ArmadurasHerrero())

                ' Can the user create this object? If so add it to the list....
108             If ObjData(ArmadurasHerrero(i)).SkHerreria <= Round(UserList(UserIndex).Stats.UserSkills(eSkill.Herreria) / ModHerreria(UserList(UserIndex).clase), 0) Then
110                 Count = Count + 1
112                 validIndexes(Count) = i

                End If

114         Next i
        
            ' Write the number of objects in the list
116         Call .WriteInteger(Count)
        
            ' Write the needed data of each object
118         For i = 1 To Count
120             obj = ObjData(ArmadurasHerrero(validIndexes(i)))
122             Call .WriteASCIIString(obj.name)
124             Call .WriteInteger(obj.LingH)
126             Call .WriteInteger(obj.LingP)
128             Call .WriteInteger(obj.LingO)
130             Call .WriteInteger(ArmadurasHerrero(validIndexes(i)))
132         Next i

        End With

        Exit Sub

ErrHandler:

134     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
136         Call FlushBuffer(UserIndex)
138         Resume
        End If

End Sub

''
' Writes the "CarpenterObjects" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteCarpenterObjects(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "CarpenterObjects" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

        Dim i              As Long

        'Dim obj As ObjData
        Dim validIndexes() As Integer

        Dim Count          As Byte
    
100     ReDim validIndexes(1 To UBound(ObjCarpintero()))
    
102     With UserList(UserIndex).outgoingData
104         Call .WriteByte(ServerPacketID.CarpenterObjects)
        
106         For i = 1 To UBound(ObjCarpintero())

                ' Can the user create this object? If so add it to the list....
108             If ObjData(ObjCarpintero(i)).SkCarpinteria <= UserList(UserIndex).Stats.UserSkills(eSkill.Carpinteria) Then
110                 If i = 1 Then Debug.Print UserList(UserIndex).Stats.UserSkills(eSkill.Carpinteria) \ ModCarpinteria(UserList(UserIndex).clase)
112                 Count = Count + 1
114                 validIndexes(Count) = i

                End If

116         Next i
        
            ' Write the number of objects in the list
118         Call .WriteByte(Count)
        
            ' Write the needed data of each object
120         For i = 1 To Count
122             Call .WriteInteger(ObjCarpintero(validIndexes(i)))
                'Call .WriteInteger(obj.Madera)
                'Call .WriteLong(obj.GrhIndex)
                ' Ladder 07/07/2014   Ahora se envia el grafico de los objetos
124         Next i

        End With

        Exit Sub

ErrHandler:

126     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
128         Call FlushBuffer(UserIndex)
130         Resume
        End If

End Sub

Public Sub WriteAlquimistaObjects(ByVal UserIndex As Integer)

        '***************************************************
        On Error GoTo ErrHandler

        Dim i              As Long

        Dim obj            As ObjData

        Dim validIndexes() As Integer

        Dim Count          As Integer
    
100     ReDim validIndexes(1 To UBound(ObjAlquimista()))
    
102     With UserList(UserIndex).outgoingData
104         Call .WriteByte(ServerPacketID.AlquimistaObj)
        
106         For i = 1 To UBound(ObjAlquimista())

                ' Can the user create this object? If so add it to the list....
108             If ObjData(ObjAlquimista(i)).SkPociones <= UserList(UserIndex).Stats.UserSkills(eSkill.Alquimia) \ ModAlquimia(UserList(UserIndex).clase) Then
                    'If i = 1 Then Debug.Print UserList(UserIndex).Stats.UserSkills(eSkill.alquimia) \ ModAlquimia(UserList(UserIndex).clase)
110                 Count = Count + 1
112                 validIndexes(Count) = i

                End If

114         Next i
        
            ' Write the number of objects in the list
116         Call .WriteInteger(Count)
        
            ' Write the needed data of each object
118         For i = 1 To Count
                'obj = ObjData(ObjAlquimista(validIndexes(i)))
                ' Call .WriteASCIIString(obj.name)
120             Call .WriteInteger(ObjAlquimista(validIndexes(i)))
            
122         Next i

        End With

        Exit Sub

ErrHandler:

124     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
126         Call FlushBuffer(UserIndex)
128         Resume
        End If

End Sub

Public Sub WriteSastreObjects(ByVal UserIndex As Integer)

        '***************************************************
        On Error GoTo ErrHandler

        Dim i              As Long

        Dim obj            As ObjData

        Dim validIndexes() As Integer

        Dim Count          As Integer
    
100     ReDim validIndexes(1 To UBound(ObjSastre()))
    
102     With UserList(UserIndex).outgoingData
104         Call .WriteByte(ServerPacketID.SastreObj)
        
106         For i = 1 To UBound(ObjSastre())

                ' Can the user create this object? If so add it to the list....
108             If ObjData(ObjSastre(i)).SkMAGOria <= UserList(UserIndex).Stats.UserSkills(eSkill.Sastreria) Then

                    ' Round(UserList(UserIndex).Stats.UserSkills(eSkill.Sastreria) / ModSastre(UserList(UserIndex).clase), 0)
110                 Count = Count + 1
112                 validIndexes(Count) = i

                End If

114         Next i
        
            ' Write the number of objects in the list
116         Call .WriteInteger(Count)
        
            ' Write the needed data of each object
118         For i = 1 To Count
                ' obj = ObjData(ObjSastre(validIndexes(i)))
            
                'Call .WriteASCIIString(obj.name)
120             Call .WriteInteger(ObjSastre(validIndexes(i)))
                ' Call .WriteInteger(obj.PielLobo)
                'Call .WriteInteger(obj.PielOsoPardo)
                'Call .WriteInteger(obj.PielOsoPolaR)
            
                'Call .WriteInteger(ObjSastre(validIndexes(i)))
122         Next i

        End With

        Exit Sub

ErrHandler:

124     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
126         Call FlushBuffer(UserIndex)
128         Resume
        End If

End Sub

''
' Writes the "RestOK" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteRestOK(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "RestOK" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     Call UserList(UserIndex).outgoingData.WriteByte(ServerPacketID.RestOK)
        Exit Sub

ErrHandler:

102     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
104         Call FlushBuffer(UserIndex)
106         Resume
        End If

End Sub

''
' Writes the "ErrorMsg" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @param    message The error message to be displayed.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteErrorMsg(ByVal UserIndex As Integer, ByVal message As String)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "ErrorMsg" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     Call UserList(UserIndex).outgoingData.WriteASCIIStringFixed(PrepareMessageErrorMsg(message))
        Exit Sub

ErrHandler:

102     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
104         Call FlushBuffer(UserIndex)
106         Resume
        End If

End Sub

''
' Writes the "Blind" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteBlind(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "Blind" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     Call UserList(UserIndex).outgoingData.WriteByte(ServerPacketID.Blind)
        Exit Sub

ErrHandler:

102     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
104         Call FlushBuffer(UserIndex)
106         Resume
        End If

End Sub

''
' Writes the "Dumb" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteDumb(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "Dumb" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     Call UserList(UserIndex).outgoingData.WriteByte(ServerPacketID.Dumb)
        Exit Sub

ErrHandler:

102     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
104         Call FlushBuffer(UserIndex)
106         Resume
        End If

End Sub

''
' Writes the "ShowSignal" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @param    objIndex Index of the signal to be displayed.
' @remarks  The data is not actually sent until the buffer is properly flushed.
'Optimizacion de protocolo por Ladder

Public Sub WriteShowSignal(ByVal UserIndex As Integer, ByVal ObjIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "ShowSignal" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     With UserList(UserIndex).outgoingData
102         Call .WriteByte(ServerPacketID.ShowSignal)
104         Call .WriteInteger(ObjIndex)
106         Call .WriteInteger(ObjData(ObjIndex).GrhSecundario)

        End With

        Exit Sub

ErrHandler:

108     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
110         Call FlushBuffer(UserIndex)
112         Resume
        End If

End Sub

''
' Writes the "ChangeNPCInventorySlot" message to the given user's outgoing data buffer.
'
' @param    UserIndex   User to which the message is intended.
' @param    slot        The inventory slot in which this item is to be placed.
' @param    obj         The object to be set in the NPC's inventory window.
' @param    price       The value the NPC asks for the object.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteChangeNPCInventorySlot(ByVal UserIndex As Integer, ByVal slot As Byte, ByRef obj As obj, ByVal price As Single)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Last Modified by: Nicolas Ezequiel Bouhid (NicoNZ)
        'Writes the "ChangeNPCInventorySlot" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

        Dim ObjInfo As ObjData
        Dim PodraUsarlo As Byte
    
100     If obj.ObjIndex >= LBound(ObjData()) And obj.ObjIndex <= UBound(ObjData()) Then
102         ObjInfo = ObjData(obj.ObjIndex)
            PodraUsarlo = PuedeUsarObjeto(UserIndex, obj.ObjIndex)
        End If
        
108     With UserList(UserIndex).outgoingData
110         Call .WriteByte(ServerPacketID.ChangeNPCInventorySlot)
112         Call .WriteByte(slot)
114         Call .WriteInteger(obj.ObjIndex)
116         Call .WriteInteger(obj.Amount)
118         Call .WriteSingle(price)
120         Call .WriteByte(PodraUsarlo)

        End With

        Exit Sub

ErrHandler:

122     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
124         Call FlushBuffer(UserIndex)
126         Resume
        End If

End Sub

''
' Writes the "UpdateHungerAndThirst" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteUpdateHungerAndThirst(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "UpdateHungerAndThirst" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     With UserList(UserIndex).outgoingData
102         Call .WriteByte(ServerPacketID.UpdateHungerAndThirst)
104         Call .WriteByte(UserList(UserIndex).Stats.MaxAGU)
106         Call .WriteByte(UserList(UserIndex).Stats.MinAGU)
108         Call .WriteByte(UserList(UserIndex).Stats.MaxHam)
110         Call .WriteByte(UserList(UserIndex).Stats.MinHam)

        End With

        Exit Sub

ErrHandler:

112     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
114         Call FlushBuffer(UserIndex)
116         Resume
        End If

End Sub

Public Sub WriteLight(ByVal UserIndex As Integer, ByVal Map As Integer)

        On Error GoTo ErrHandler

        Dim light As String
 
100     light = MapInfo(Map).base_light

102     With UserList(UserIndex).outgoingData
104         Call .WriteByte(ServerPacketID.light)
106         Call .WriteASCIIString(light)

        End With

        Exit Sub

ErrHandler:

108     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
110         Call FlushBuffer(UserIndex)
112         Resume
        End If

End Sub

Public Sub WriteFlashScreen(ByVal UserIndex As Integer, ByVal Color As Long, ByVal Time As Long, Optional ByVal Ignorar As Boolean = False)

        On Error GoTo ErrHandler
 
100     With UserList(UserIndex).outgoingData
102         Call .WriteByte(ServerPacketID.FlashScreen)
104         Call .WriteLong(Color)
106         Call .WriteLong(Time)
108         Call .WriteBoolean(Ignorar)

        End With

        Exit Sub

ErrHandler:

110     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
112         Call FlushBuffer(UserIndex)
114         Resume
        End If

End Sub

Public Sub WriteFYA(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "Fame" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     With UserList(UserIndex).outgoingData
102         Call .WriteByte(ServerPacketID.FYA)
104         Call .WriteByte(UserList(UserIndex).Stats.UserAtributos(1))
106         Call .WriteByte(UserList(UserIndex).Stats.UserAtributos(2))
108         Call .WriteInteger(UserList(UserIndex).flags.DuracionEfecto)

        End With

        Exit Sub

ErrHandler:

110     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
112         Call FlushBuffer(UserIndex)
114         Resume
        End If

End Sub

Public Sub WriteCerrarleCliente(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "Fame" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     With UserList(UserIndex).outgoingData
102         Call .WriteByte(ServerPacketID.CerrarleCliente)

        End With

        Exit Sub

ErrHandler:

104     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
106         Call FlushBuffer(UserIndex)
108         Resume
        End If

End Sub

Public Sub WriteOxigeno(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "Fame" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     With UserList(UserIndex).outgoingData
102         Call .WriteByte(ServerPacketID.Oxigeno)
104         Call .WriteInteger(UserList(UserIndex).Counters.Oxigeno)

        End With

        Exit Sub

ErrHandler:

106     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
108         Call FlushBuffer(UserIndex)
110         Resume
        End If

End Sub

Public Sub WriteContadores(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "Fame" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     With UserList(UserIndex).outgoingData
102         Call .WriteByte(ServerPacketID.Contadores)
104         Call .WriteInteger(UserList(UserIndex).Counters.Invisibilidad)
106         Call .WriteInteger(UserList(UserIndex).Counters.ScrollExperiencia)
108         Call .WriteInteger(UserList(UserIndex).Counters.ScrollOro)

110         If UserList(UserIndex).flags.NecesitaOxigeno Then
112             Call .WriteInteger(UserList(UserIndex).Counters.Oxigeno)
            Else
114             Call .WriteInteger(0)

            End If

116         Call .WriteInteger(UserList(UserIndex).flags.DuracionEfecto)

        End With

        Exit Sub

ErrHandler:

118     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
120         Call FlushBuffer(UserIndex)
122         Resume
        End If

End Sub

Public Sub WriteBindKeys(ByVal UserIndex As Integer)

        '***************************************************
        'Envia los macros al cliente!
        'Por Ladder
        '23/09/2014
        'Flor te amo!
        '***************************************************
        On Error GoTo ErrHandler

100     With UserList(UserIndex).outgoingData
102         Call .WriteByte(ServerPacketID.BindKeys)
104         Call .WriteByte(UserList(UserIndex).ChatCombate)
106         Call .WriteByte(UserList(UserIndex).ChatGlobal)
        
        End With

        Exit Sub

ErrHandler:

108     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
110         Call FlushBuffer(UserIndex)
112         Resume
        End If

End Sub

''
' Writes the "MiniStats" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteMiniStats(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "MiniStats" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     With UserList(UserIndex).outgoingData
102         Call .WriteByte(ServerPacketID.MiniStats)
        
104         Call .WriteLong(UserList(UserIndex).Faccion.ciudadanosMatados)
106         Call .WriteLong(UserList(UserIndex).Faccion.CriminalesMatados)
108         Call .WriteByte(UserList(UserIndex).Faccion.Status)
        
            'TODO : Este valor es calculable, no debería NI EXISTIR, ya sea en el servidor ni en el cliente!!!
            'Call .WriteLong(UserList(UserIndex).Stats.UsuariosMatados)
        
110         Call .WriteInteger(UserList(UserIndex).Stats.NPCsMuertos)
        
112         Call .WriteByte(UserList(UserIndex).clase)
114         Call .WriteLong(UserList(UserIndex).Counters.Pena)
        
            'Ladder 31/07/08  Envio mas estadisticas :P
116         Call .WriteLong(UserList(UserIndex).flags.VecesQueMoriste)
118         Call .WriteByte(UserList(UserIndex).genero)
120         Call .WriteByte(UserList(UserIndex).raza)
        
122         Call .WriteByte(UserList(UserIndex).donador.activo)
124         Call .WriteLong(CreditosDonadorCheck(UserList(UserIndex).Cuenta))
            'ARREGLANDO
        
126         Call .WriteInteger(DiasDonadorCheck(UserList(UserIndex).Cuenta))
                
        End With

        Exit Sub

ErrHandler:

130     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
132         Call FlushBuffer(UserIndex)
134         Resume
        End If

End Sub

''
' Writes the "LevelUp" message to the given user's outgoing data buffer.
'
' @param    skillPoints The number of free skill points the player has.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteLevelUp(ByVal UserIndex As Integer, ByVal skillPoints As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "LevelUp" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     With UserList(UserIndex).outgoingData
102         Call .WriteByte(ServerPacketID.LevelUp)
104         Call .WriteInteger(skillPoints)

        End With

        Exit Sub

ErrHandler:

106     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
108         Call FlushBuffer(UserIndex)
110         Resume
        End If

End Sub

''
' Writes the "AddForumMsg" message to the given user's outgoing data buffer.
'
' @param    title The title of the message to display.
' @param    message The message to be displayed.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteAddForumMsg(ByVal UserIndex As Integer, ByVal title As String, ByVal message As String)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "AddForumMsg" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     With UserList(UserIndex).outgoingData
102         Call .WriteByte(ServerPacketID.AddForumMsg)
104         Call .WriteASCIIString(title)
106         Call .WriteASCIIString(message)

        End With

        Exit Sub

ErrHandler:

108     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
110         Call FlushBuffer(UserIndex)
112         Resume
        End If

End Sub

''
' Writes the "ShowForumForm" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteShowForumForm(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "ShowForumForm" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     Call UserList(UserIndex).outgoingData.WriteByte(ServerPacketID.ShowForumForm)
        Exit Sub

ErrHandler:

102     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
104         Call FlushBuffer(UserIndex)
106         Resume
        End If

End Sub

''
' Writes the "SetInvisible" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @param    CharIndex The char turning visible / invisible.
' @param    invisible True if the char is no longer visible, False otherwise.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteSetInvisible(ByVal UserIndex As Integer, ByVal CharIndex As Integer, ByVal invisible As Boolean)
        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "SetInvisible" message to the given user's outgoing data buffer
        '***************************************************

        On Error GoTo ErrHandler

100     Call UserList(UserIndex).outgoingData.WriteASCIIStringFixed(PrepareMessageSetInvisible(CharIndex, invisible))
        Exit Sub

ErrHandler:

102     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
104         Call FlushBuffer(UserIndex)
106         Resume
        End If

End Sub

''
' Writes the "SetInvisible" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @param    CharIndex The char turning visible / invisible.
' @param    invisible True if the char is no longer visible, False otherwise.
' @remarks  The data is not actually sent until the buffer is properly flushed.
''
' Writes the "DiceRoll" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteDiceRoll(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "DiceRoll" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     With UserList(UserIndex).outgoingData
102         Call .WriteByte(ServerPacketID.DiceRoll)
            ' TODO: SACAR ESTE PAQUETE USAR EL DE ATRIBUTOS
104         Call .WriteByte(UserList(UserIndex).Stats.UserAtributos(eAtributos.Fuerza))
106         Call .WriteByte(UserList(UserIndex).Stats.UserAtributos(eAtributos.Agilidad))
108         Call .WriteByte(UserList(UserIndex).Stats.UserAtributos(eAtributos.Inteligencia))
110         Call .WriteByte(UserList(UserIndex).Stats.UserAtributos(eAtributos.Constitucion))
112         Call .WriteByte(UserList(UserIndex).Stats.UserAtributos(eAtributos.Carisma))
        End With

        Exit Sub

ErrHandler:

114     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
116         Call FlushBuffer(UserIndex)
118         Resume
        End If

End Sub

''
' Writes the "MeditateToggle" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteMeditateToggle(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "MeditateToggle" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     Call UserList(UserIndex).outgoingData.WriteByte(ServerPacketID.MeditateToggle)
        Exit Sub

ErrHandler:

102     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
104         Call FlushBuffer(UserIndex)
106         Resume
        End If

End Sub

''
' Writes the "BlindNoMore" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteBlindNoMore(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "BlindNoMore" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     Call UserList(UserIndex).outgoingData.WriteByte(ServerPacketID.BlindNoMore)
        Exit Sub

ErrHandler:

102     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
104         Call FlushBuffer(UserIndex)
106         Resume
        End If

End Sub

''
' Writes the "DumbNoMore" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteDumbNoMore(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "DumbNoMore" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     Call UserList(UserIndex).outgoingData.WriteByte(ServerPacketID.DumbNoMore)
        Exit Sub

ErrHandler:

102     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
104         Call FlushBuffer(UserIndex)
106         Resume
        End If

End Sub

''
' Writes the "SendSkills" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteSendSkills(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "SendSkills" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

        Dim i As Long
    
100     With UserList(UserIndex).outgoingData
102         Call .WriteByte(ServerPacketID.SendSkills)
        
104         For i = 1 To NUMSKILLS
106             Call .WriteByte(UserList(UserIndex).Stats.UserSkills(i))
108         Next i

        End With

        Exit Sub

ErrHandler:

110     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
112         Call FlushBuffer(UserIndex)
114         Resume
        End If

End Sub

''
' Writes the "TrainerCreatureList" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @param    npcIndex The index of the requested trainer.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteTrainerCreatureList(ByVal UserIndex As Integer, ByVal NpcIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "TrainerCreatureList" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

        Dim i   As Long

        Dim str As String
    
100     With UserList(UserIndex).outgoingData
102         Call .WriteByte(ServerPacketID.TrainerCreatureList)
        
104         For i = 1 To NpcList(NpcIndex).NroCriaturas
106             str = str & NpcList(NpcIndex).Criaturas(i).NpcName & SEPARATOR
108         Next i
        
110         If LenB(str) > 0 Then str = Left$(str, Len(str) - 1)
        
112         Call .WriteASCIIString(str)

        End With

        Exit Sub

ErrHandler:

114     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
116         Call FlushBuffer(UserIndex)
118         Resume
        End If

End Sub

''
' Writes the "GuildNews" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @param    guildNews The guild's news.
' @param    enemies The list of the guild's enemies.
' @param    allies The list of the guild's allies.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteGuildNews(ByVal UserIndex As Integer, ByVal guildNews As String, ByRef guildList() As String, ByRef MemberList() As String, ByVal ClanNivel As Byte, ByVal ExpAcu As Integer, ByVal ExpNe As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "GuildNews" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

        Dim i   As Long

        Dim Tmp As String
    
100     With UserList(UserIndex).outgoingData
102         Call .WriteByte(ServerPacketID.guildNews)
104         Call .WriteASCIIString(guildNews)

            ' Prepare guild name's list
106         For i = LBound(guildList()) To UBound(guildList())
108             Tmp = Tmp & guildList(i) & SEPARATOR
110         Next i
        
112         If Len(Tmp) Then Tmp = Left$(Tmp, Len(Tmp) - 1)
        
114         Call .WriteASCIIString(Tmp)
        
            ' Prepare guild member's list
116         Tmp = vbNullString

118         For i = LBound(MemberList()) To UBound(MemberList())
120             Tmp = Tmp & MemberList(i) & SEPARATOR
122         Next i
        
124         If Len(Tmp) Then Tmp = Left$(Tmp, Len(Tmp) - 1)
          
126         Call .WriteASCIIString(Tmp)
128         Call .WriteByte(ClanNivel)
130         Call .WriteInteger(ExpAcu)
132         Call .WriteInteger(ExpNe)
        
        End With

        Exit Sub

ErrHandler:

134     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
136         Call FlushBuffer(UserIndex)
138         Resume
        End If

End Sub

''
' Writes the "OfferDetails" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @param    details Th details of the Peace proposition.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteOfferDetails(ByVal UserIndex As Integer, ByVal details As String)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "OfferDetails" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

        Dim i As Long
    
100     With UserList(UserIndex).outgoingData
102         Call .WriteByte(ServerPacketID.OfferDetails)
        
104         Call .WriteASCIIString(details)

        End With

        Exit Sub

ErrHandler:

106     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
108         Call FlushBuffer(UserIndex)
110         Resume
        End If

End Sub

''
' Writes the "AlianceProposalsList" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @param    guilds The list of guilds which propossed an alliance.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteAlianceProposalsList(ByVal UserIndex As Integer, ByRef guilds() As String)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "AlianceProposalsList" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

        Dim i   As Long

        Dim Tmp As String
    
100     With UserList(UserIndex).outgoingData
102         Call .WriteByte(ServerPacketID.AlianceProposalsList)
        
            ' Prepare guild's list
104         For i = LBound(guilds()) To UBound(guilds())
106             Tmp = Tmp & guilds(i) & SEPARATOR
108         Next i
        
110         If Len(Tmp) Then Tmp = Left$(Tmp, Len(Tmp) - 1)
        
112         Call .WriteASCIIString(Tmp)

        End With

        Exit Sub

ErrHandler:

114     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
116         Call FlushBuffer(UserIndex)
118         Resume
        End If

End Sub

''
' Writes the "PeaceProposalsList" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @param    guilds The list of guilds which propossed peace.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WritePeaceProposalsList(ByVal UserIndex As Integer, ByRef guilds() As String)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "PeaceProposalsList" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

        Dim i   As Long

        Dim Tmp As String
    
100     With UserList(UserIndex).outgoingData
102         Call .WriteByte(ServerPacketID.PeaceProposalsList)
                
            ' Prepare guilds' list
104         For i = LBound(guilds()) To UBound(guilds())
106             Tmp = Tmp & guilds(i) & SEPARATOR
108         Next i
        
110         If Len(Tmp) Then Tmp = Left$(Tmp, Len(Tmp) - 1)
        
112         Call .WriteASCIIString(Tmp)

        End With

        Exit Sub

ErrHandler:

114     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
116         Call FlushBuffer(UserIndex)
118         Resume
        End If

End Sub

''
' Writes the "CharacterInfo" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @param    charName The requested char's name.
' @param    race The requested char's race.
' @param    class The requested char's class.
' @param    gender The requested char's gender.
' @param    level The requested char's level.
' @param    gold The requested char's gold.
' @param    reputation The requested char's reputation.
' @param    previousPetitions The requested char's previous petitions to enter guilds.
' @param    currentGuild The requested char's current guild.
' @param    previousGuilds The requested char's previous guilds.
' @param    RoyalArmy True if tha char belongs to the Royal Army.
' @param    CaosLegion True if tha char belongs to the Caos Legion.
' @param    citicensKilled The number of citicens killed by the requested char.
' @param    criminalsKilled The number of criminals killed by the requested char.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteCharacterInfo(ByVal UserIndex As Integer, ByVal CharName As String, ByVal race As eRaza, ByVal Class As eClass, ByVal gender As eGenero, ByVal level As Byte, ByVal gold As Long, ByVal bank As Long, ByVal previousPetitions As String, ByVal currentGuild As String, ByVal previousGuilds As String, ByVal RoyalArmy As Boolean, ByVal CaosLegion As Boolean, ByVal citicensKilled As Long, ByVal criminalsKilled As Long)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "CharacterInfo" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     With UserList(UserIndex).outgoingData
102         Call .WriteByte(ServerPacketID.CharacterInfo)
        
104         Call .WriteASCIIString(CharName)
106         Call .WriteByte(race)
108         Call .WriteByte(Class)
110         Call .WriteByte(gender)
        
112         Call .WriteByte(level)
114         Call .WriteLong(gold)
116         Call .WriteLong(bank)
        
118         Call .WriteASCIIString(previousPetitions)
120         Call .WriteASCIIString(currentGuild)
122         Call .WriteASCIIString(previousGuilds)
        
124         Call .WriteBoolean(RoyalArmy)
126         Call .WriteBoolean(CaosLegion)
        
128         Call .WriteLong(citicensKilled)
130         Call .WriteLong(criminalsKilled)

        End With

        Exit Sub

ErrHandler:

132     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
134         Call FlushBuffer(UserIndex)
136         Resume
        End If

End Sub

''
' Writes the "GuildLeaderInfo" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @param    guildList The list of guild names.
' @param    memberList The list of the guild's members.
' @param    guildNews The guild's news.
' @param    joinRequests The list of chars which requested to join the clan.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteGuildLeaderInfo(ByVal UserIndex As Integer, ByRef guildList() As String, ByRef MemberList() As String, ByVal guildNews As String, ByRef joinRequests() As String, ByVal NivelDeClan As Byte, ByVal ExpActual As Integer, ByVal ExpNecesaria As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "GuildLeaderInfo" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

        Dim i   As Long

        Dim Tmp As String
    
100     With UserList(UserIndex).outgoingData
102         Call .WriteByte(ServerPacketID.GuildLeaderInfo)
        
            ' Prepare guild name's list
104         For i = LBound(guildList()) To UBound(guildList())
106             Tmp = Tmp & guildList(i) & SEPARATOR
108         Next i
        
110         If Len(Tmp) Then Tmp = Left$(Tmp, Len(Tmp) - 1)
        
112         Call .WriteASCIIString(Tmp)
        
            ' Prepare guild member's list
114         Tmp = vbNullString

116         For i = LBound(MemberList()) To UBound(MemberList())
118             Tmp = Tmp & MemberList(i) & SEPARATOR
120         Next i
        
122         If Len(Tmp) Then Tmp = Left$(Tmp, Len(Tmp) - 1)
        
124         Call .WriteASCIIString(Tmp)
        
            ' Store guild news
126         Call .WriteASCIIString(guildNews)
        
            ' Prepare the join request's list
128         Tmp = vbNullString

130         For i = LBound(joinRequests()) To UBound(joinRequests())
132             Tmp = Tmp & joinRequests(i) & SEPARATOR
134         Next i
        
136         If Len(Tmp) Then Tmp = Left$(Tmp, Len(Tmp) - 1)
        
138         Call .WriteASCIIString(Tmp)
        
140         Call .WriteByte(NivelDeClan)
        
142         Call .WriteInteger(ExpActual)
144         Call .WriteInteger(ExpNecesaria)
        
        End With

        Exit Sub

ErrHandler:

146     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
148         Call FlushBuffer(UserIndex)
150         Resume
        End If

End Sub

''
' Writes the "GuildDetails" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @param    guildName The requested guild's name.
' @param    founder The requested guild's founder.
' @param    foundationDate The requested guild's foundation date.
' @param    leader The requested guild's current leader.
' @param    URL The requested guild's website.
' @param    memberCount The requested guild's member count.
' @param    electionsOpen True if the clan is electing it's new leader.
' @param    alignment The requested guild's alignment.
' @param    enemiesCount The requested guild's enemy count.
' @param    alliesCount The requested guild's ally count.
' @param    antifactionPoints The requested guild's number of antifaction acts commited.
' @param    codex The requested guild's codex.
' @param    guildDesc The requested guild's description.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteGuildDetails(ByVal UserIndex As Integer, ByVal GuildName As String, ByVal founder As String, ByVal foundationDate As String, ByVal leader As String, ByVal memberCount As Integer, ByVal alignment As String, ByVal guildDesc As String, ByVal NivelDeClan As Byte, ByVal ExpActual As Integer, ByVal ExpNecesaria As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "GuildDetails" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

        Dim i    As Long

        Dim temp As String
    
100     With UserList(UserIndex).outgoingData
102         Call .WriteByte(ServerPacketID.GuildDetails)
        
104         Call .WriteASCIIString(GuildName)
106         Call .WriteASCIIString(founder)
108         Call .WriteASCIIString(foundationDate)
110         Call .WriteASCIIString(leader)
        
112         Call .WriteInteger(memberCount)
        
114         Call .WriteASCIIString(alignment)
        
116         Call .WriteASCIIString(guildDesc)
        
118         Call .WriteByte(NivelDeClan)

            ' Call .WriteInteger(ExpActual)
            ' Call .WriteInteger(ExpNecesaria)
        End With

        Exit Sub

ErrHandler:

120     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
122         Call FlushBuffer(UserIndex)
124         Resume
        End If

End Sub

''
' Writes the "ShowGuildFundationForm" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteShowGuildFundationForm(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "ShowGuildFundationForm" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     Call UserList(UserIndex).outgoingData.WriteByte(ServerPacketID.ShowGuildFundationForm)
        Exit Sub

ErrHandler:

102     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
104         Call FlushBuffer(UserIndex)
106         Resume
        End If

End Sub

''
' Writes the "ParalizeOK" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteParalizeOK(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 08/12/07
        'Last Modified By: Lucas Tavolaro Ortiz (Tavo)
        'Writes the "ParalizeOK" message to the given user's outgoing data buffer
        'And updates user position
        '***************************************************
        On Error GoTo ErrHandler

100     Call UserList(UserIndex).outgoingData.WriteByte(ServerPacketID.ParalizeOK)

    
        Exit Sub

ErrHandler:

102     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
104         Call FlushBuffer(UserIndex)
106         Resume
        End If

End Sub

Public Sub WriteInmovilizaOK(ByVal UserIndex As Integer)

        '***************************************************
        'Inmovilizar
        'Por Ladder
        '***************************************************
        On Error GoTo ErrHandler

100     Call UserList(UserIndex).outgoingData.WriteByte(ServerPacketID.InmovilizadoOK)
        '  Call WritePosUpdate(UserIndex)
        Exit Sub

ErrHandler:

102     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
104         Call FlushBuffer(UserIndex)
106         Resume
        End If

End Sub

Public Sub WriteStopped(ByVal UserIndex As Integer, ByVal Stopped As Boolean)

        On Error GoTo ErrHandler

        With UserList(UserIndex).outgoingData
100         Call .WriteByte(ServerPacketID.Stopped)
            Call .WriteBoolean(Stopped)
        End With
    
        Exit Sub

ErrHandler:

102     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
104         Call FlushBuffer(UserIndex)
106         Resume
        End If

End Sub

''
' Writes the "ShowUserRequest" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @param    details DEtails of the char's request.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteShowUserRequest(ByVal UserIndex As Integer, ByVal details As String)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "ShowUserRequest" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     With UserList(UserIndex).outgoingData
102         Call .WriteByte(ServerPacketID.ShowUserRequest)
        
104         Call .WriteASCIIString(details)

        End With

        Exit Sub

ErrHandler:

106     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
108         Call FlushBuffer(UserIndex)
110         Resume
        End If

End Sub

''
' Writes the "ChangeUserTradeSlot" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @param    ObjIndex The object's index.
' @param    Amount The number of objects offered.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteChangeUserTradeSlot(ByVal UserIndex As Integer, ByVal ObjIndex As Integer, ByVal Amount As Long)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "ChangeUserTradeSlot" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     With UserList(UserIndex).outgoingData
102         Call .WriteByte(ServerPacketID.ChangeUserTradeSlot)
        
104         Call .WriteInteger(ObjIndex)
106         Call .WriteASCIIString(ObjData(ObjIndex).name)
108         Call .WriteLong(Amount)
110         Call .WriteInteger(ObjData(ObjIndex).GrhIndex)
112         Call .WriteByte(ObjData(ObjIndex).OBJType)
114         Call .WriteInteger(ObjData(ObjIndex).MaxHit)
116         Call .WriteInteger(ObjData(ObjIndex).MinHIT)
118         Call .WriteInteger(ObjData(ObjIndex).def)
120         Call .WriteLong(SalePrice(ObjIndex))

        End With

        Exit Sub

ErrHandler:

122     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
124         Call FlushBuffer(UserIndex)
126         Resume
        End If

End Sub

''
' Writes the "SpawnList" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @param    npcNames The names of the creatures that can be spawned.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteSpawnList(ByVal UserIndex As Integer, ByRef npcNames() As String)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "SpawnList" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

        Dim i   As Long

        Dim Tmp As String
    
100     With UserList(UserIndex).outgoingData
102         Call .WriteByte(ServerPacketID.SpawnList)
        
104         For i = LBound(npcNames()) To UBound(npcNames())
106             Tmp = Tmp & i & SEPARATOR
            
108         Next i
     
110         If Len(Tmp) Then Tmp = Left$(Tmp, Len(Tmp) - 1)
        
112         Call .WriteASCIIString(Tmp)

        End With

        Exit Sub

ErrHandler:

114     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
116         Call FlushBuffer(UserIndex)
118         Resume
        End If

End Sub

''
' Writes the "ShowSOSForm" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteShowSOSForm(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "ShowSOSForm" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

        Dim i   As Long

        Dim Tmp As String
    
100     With UserList(UserIndex).outgoingData
102         Call .WriteByte(ServerPacketID.ShowSOSForm)
        
104         For i = 1 To Ayuda.Longitud
106             Tmp = Tmp & Ayuda.VerElemento(i) & SEPARATOR
108         Next i
        
110         If LenB(Tmp) <> 0 Then Tmp = Left$(Tmp, Len(Tmp) - 1)
        
112         Call .WriteASCIIString(Tmp)

        End With

        Exit Sub

ErrHandler:

114     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
116         Call FlushBuffer(UserIndex)
118         Resume
        End If

End Sub

''
' Writes the "ShowMOTDEditionForm" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @param    currentMOTD The current Message Of The Day.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteShowMOTDEditionForm(ByVal UserIndex As Integer, ByVal currentMOTD As String)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "ShowMOTDEditionForm" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     With UserList(UserIndex).outgoingData
102         Call .WriteByte(ServerPacketID.ShowMOTDEditionForm)
        
104         Call .WriteASCIIString(currentMOTD)

        End With

        Exit Sub

ErrHandler:

106     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
108         Call FlushBuffer(UserIndex)
110         Resume
        End If

End Sub

''
' Writes the "ShowGMPanelForm" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteShowGMPanelForm(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "ShowGMPanelForm" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     Call UserList(UserIndex).outgoingData.WriteByte(ServerPacketID.ShowGMPanelForm)
        Exit Sub

ErrHandler:

102     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
104         Call FlushBuffer(UserIndex)
106         Resume
        End If

End Sub

Public Sub WriteShowFundarClanForm(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "ShowGMPanelForm" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     Call UserList(UserIndex).outgoingData.WriteByte(ServerPacketID.ShowFundarClanForm)
        Exit Sub

ErrHandler:

102     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
104         Call FlushBuffer(UserIndex)
106         Resume
        End If

End Sub

''
' Writes the "UserNameList" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @param    userNameList List of user names.
' @param    Cant Number of names to send.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WriteUserNameList(ByVal UserIndex As Integer, ByRef userNamesList() As String, ByVal cant As Integer)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06 NIGO:
        'Writes the "UserNameList" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

        Dim i   As Long

        Dim Tmp As String
    
100     With UserList(UserIndex).outgoingData
102         Call .WriteByte(ServerPacketID.UserNameList)
        
            ' Prepare user's names list
104         For i = 1 To cant
106             Tmp = Tmp & userNamesList(i) & SEPARATOR
108         Next i
        
110         If Len(Tmp) Then Tmp = Left$(Tmp, Len(Tmp) - 1)
        
112         Call .WriteASCIIString(Tmp)

        End With

        Exit Sub

ErrHandler:

114     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
116         Call FlushBuffer(UserIndex)
118         Resume
        End If

End Sub

''
' Writes the "Pong" message to the given user's outgoing data buffer.
'
' @param    UserIndex User to which the message is intended.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Sub WritePong(ByVal UserIndex As Integer, ByVal Time As Long)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "Pong" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     Call UserList(UserIndex).outgoingData.WriteByte(ServerPacketID.Pong)
102     Call UserList(UserIndex).outgoingData.WriteLong(Time)
        Exit Sub

ErrHandler:

104     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
106         Call FlushBuffer(UserIndex)
108         Resume
        End If

End Sub

''
' Flushes the outgoing data buffer of the user.
'
' @param    UserIndex User whose outgoing data buffer will be flushed.

Public Sub FlushBuffer(ByVal UserIndex As Integer)
        
        On Error GoTo FlushBuffer_Err
        

        '***************************************************
        'Sends all data existing in the buffer
        '***************************************************
    
100     With UserList(UserIndex).outgoingData

102         If .Length = 0 Then Exit Sub
        
            ' Tratamos de enviar los datos.
104         Dim ret As Long: ret = WsApiEnviar(UserIndex, .ReadASCIIStringFixed(.Length))
    
            ' Si recibimos un error como respuesta de la API, cerramos el socket.
106         If ret <> 0 And ret <> WSAEWOULDBLOCK Then
                ' Close the socket avoiding any critical error
108             Call CloseSocketSL(UserIndex)
110             Call Cerrar_Usuario(UserIndex)
            End If

        End With

        
        Exit Sub

FlushBuffer_Err:
112     Call RegistrarError(Err.Number, Err.Description, "Protocol.FlushBuffer", Erl)
114     Resume Next
        
End Sub

''
' Prepares the "SetInvisible" message and returns it.
'
' @param    CharIndex The char turning visible / invisible.
' @param    invisible True if the char is no longer visible, False otherwise.
' @return   The formated message ready to be writen as is on outgoing buffers.
' @remarks  The message is written to no outgoing buffer, but only prepared in a single string to be easily sent to several clients.

Public Function PrepareMessageSetInvisible(ByVal CharIndex As Integer, ByVal invisible As Boolean) As String
        
        On Error GoTo PrepareMessageSetInvisible_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Prepares the "SetInvisible" message and returns it.
        '***************************************************
        'Call WriteContadores(UserIndex)
100     With auxiliarBuffer
102         Call .WriteByte(ServerPacketID.SetInvisible)
        
104         Call .WriteInteger(CharIndex)
106         Call .WriteBoolean(invisible)
        
108         PrepareMessageSetInvisible = .ReadASCIIStringFixed(.Length)

        End With

        
        Exit Function

PrepareMessageSetInvisible_Err:
110     Call RegistrarError(Err.Number, Err.Description, "Protocol.PrepareMessageSetInvisible", Erl)
112     Resume Next
        
End Function

Public Function PrepareMessageSetEscribiendo(ByVal CharIndex As Integer, ByVal Escribiendo As Boolean) As String
        
        On Error GoTo PrepareMessageSetEscribiendo_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Prepares the "SetInvisible" message and returns it.
        '***************************************************
100     With auxiliarBuffer
102         Call .WriteByte(ServerPacketID.SetEscribiendo)
        
104         Call .WriteInteger(CharIndex)
106         Call .WriteBoolean(Escribiendo)
        
108         PrepareMessageSetEscribiendo = .ReadASCIIStringFixed(.Length)

        End With

        
        Exit Function

PrepareMessageSetEscribiendo_Err:
110     Call RegistrarError(Err.Number, Err.Description, "Protocol.PrepareMessageSetEscribiendo", Erl)
112     Resume Next
        
End Function

''
' Prepares the "ChatOverHead" message and returns it.
'
' @param    Chat Text to be displayed over the char's head.
' @param    CharIndex The character uppon which the chat will be displayed.
' @param    Color The color to be used when displaying the chat.
' @return   The formated message ready to be writen as is on outgoing buffers.
' @remarks  The message is written to no outgoing buffer, but only prepared in a single string to be easily sent to several clients.

Public Function PrepareMessageChatOverHead(ByVal chat As String, ByVal CharIndex As Integer, ByVal Color As Long, Optional ByVal name As String = "") As String
        
        On Error GoTo PrepareMessageChatOverHead_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Prepares the "ChatOverHead" message and returns it.
        '***************************************************
        Dim R, g, b As Byte

100     b = (Color And 16711680) / 65536
102     g = (Color And 65280) / 256
104     R = Color And 255

        'b = color \ 65536
        'g = (color - b * 65536) \ 256
        ' r = color - b * 65536 - g * 256
106     With auxiliarBuffer
108         Call .WriteByte(ServerPacketID.ChatOverHead)
110         Call .WriteASCIIString(chat)
112         Call .WriteInteger(CharIndex)
        
            ' Write rgb channels and save one byte from long :D
114         Call .WriteByte(R)
116         Call .WriteByte(g)
118         Call .WriteByte(b)
120         Call .WriteLong(Color)
        
            'Call .WriteASCIIString(name) Anulado gracias a Optimizacion ^^
        
122         PrepareMessageChatOverHead = .ReadASCIIStringFixed(.Length)

        End With

        
        Exit Function

PrepareMessageChatOverHead_Err:
124     Call RegistrarError(Err.Number, Err.Description, "Protocol.PrepareMessageChatOverHead", Erl)
126     Resume Next
        
End Function

Public Function PrepareMessageTextOverChar(ByVal chat As String, ByVal CharIndex As Integer, ByVal Color As Long) As String
        
        On Error GoTo PrepareMessageTextOverChar_Err

        '***************************************************
100     With auxiliarBuffer
102         Call .WriteByte(ServerPacketID.TextOverChar)
104         Call .WriteASCIIString(chat)
106         Call .WriteInteger(CharIndex)
108         Call .WriteLong(Color)
110         PrepareMessageTextOverChar = .ReadASCIIStringFixed(.Length)
        End With

        
        Exit Function

PrepareMessageTextOverChar_Err:
112     Call RegistrarError(Err.Number, Err.Description, "Protocol.PrepareMessageTextOverChar", Erl)
114     Resume Next
        
End Function

Public Function PrepareMessageTextCharDrop(ByVal chat As String, ByVal CharIndex As Integer, ByVal Color As Long) As String
        
        On Error GoTo PrepareMessageTextCharDrop_Err

        '***************************************************
100     With auxiliarBuffer
102         Call .WriteByte(ServerPacketID.TextCharDrop)
104         Call .WriteASCIIString(chat)
106         Call .WriteInteger(CharIndex)
108         Call .WriteLong(Color)
110         PrepareMessageTextCharDrop = .ReadASCIIStringFixed(.Length)
        End With

        
        Exit Function

PrepareMessageTextCharDrop_Err:
112     Call RegistrarError(Err.Number, Err.Description, "Protocol.PrepareMessageTextCharDrop", Erl)
114     Resume Next
        
End Function

Public Function PrepareMessageTextOverTile(ByVal chat As String, ByVal X As Integer, ByVal Y As Integer, ByVal Color As Long) As String
        
        On Error GoTo PrepareMessageTextOverTile_Err

        '***************************************************
100     With auxiliarBuffer
102         Call .WriteByte(ServerPacketID.TextOverTile)
104         Call .WriteASCIIString(chat)
106         Call .WriteInteger(X)
108         Call .WriteInteger(Y)
110         Call .WriteLong(Color)
112         PrepareMessageTextOverTile = .ReadASCIIStringFixed(.Length)
        End With

        
        Exit Function

PrepareMessageTextOverTile_Err:
114     Call RegistrarError(Err.Number, Err.Description, "Protocol.PrepareMessageTextOverTile", Erl)
116     Resume Next
        
End Function

''
' Prepares the "ConsoleMsg" message and returns it.
'
' @param    Chat Text to be displayed over the char's head.
' @param    FontIndex Index of the FONTTYPE structure to use.
' @return   The formated message ready to be writen as is on outgoing buffers.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Function PrepareMessageConsoleMsg(ByVal chat As String, ByVal FontIndex As FontTypeNames) As String
        
        On Error GoTo PrepareMessageConsoleMsg_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Prepares the "ConsoleMsg" message and returns it.
        '***************************************************
100     With auxiliarBuffer
102         Call .WriteByte(ServerPacketID.ConsoleMsg)
104         Call .WriteASCIIString(chat)
106         Call .WriteByte(FontIndex)
        
108         PrepareMessageConsoleMsg = .ReadASCIIStringFixed(.Length)

        End With

        
        Exit Function

PrepareMessageConsoleMsg_Err:
110     Call RegistrarError(Err.Number, Err.Description, "Protocol.PrepareMessageConsoleMsg", Erl)
112     Resume Next
        
End Function

Public Function PrepareMessageLocaleMsg(ByVal Id As Integer, ByVal chat As String, ByVal FontIndex As FontTypeNames) As String
        
        On Error GoTo PrepareMessageLocaleMsg_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Prepares the "ConsoleMsg" message and returns it.
        '***************************************************
100     With auxiliarBuffer
102         Call .WriteByte(ServerPacketID.LocaleMsg)
104         Call .WriteInteger(Id)
106         Call .WriteASCIIString(chat)
108         Call .WriteByte(FontIndex)
        
110         PrepareMessageLocaleMsg = .ReadASCIIStringFixed(.Length)

        End With

        
        Exit Function

PrepareMessageLocaleMsg_Err:
112     Call RegistrarError(Err.Number, Err.Description, "Protocol.PrepareMessageLocaleMsg", Erl)
114     Resume Next
        
End Function

Public Function PrepareMessageListaCorreo(ByVal UserIndex As Integer, ByVal Actualizar As Boolean) As String
        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Prepares the "ConsoleMsg" message and returns it.
        '***************************************************
        
        On Error GoTo PrepareMessageListaCorreo_Err
        

        Dim cant As Byte

        Dim i    As Byte

100     cant = UserList(UserIndex).Correo.CantCorreo
102     UserList(UserIndex).Correo.NoLeidos = 0

104     With auxiliarBuffer
106         Call .WriteByte(ServerPacketID.ListaCorreo)
108         Call .WriteByte(cant)

110         If cant > 0 Then

112             For i = 1 To cant
114                 Call .WriteASCIIString(UserList(UserIndex).Correo.Mensaje(i).Remitente)
116                 Call .WriteASCIIString(UserList(UserIndex).Correo.Mensaje(i).Mensaje)
118                 Call .WriteByte(UserList(UserIndex).Correo.Mensaje(i).ItemCount)
120                 Call .WriteASCIIString(UserList(UserIndex).Correo.Mensaje(i).Item)

122                 Call .WriteByte(UserList(UserIndex).Correo.Mensaje(i).Leido)
124                 Call .WriteASCIIString(UserList(UserIndex).Correo.Mensaje(i).Fecha)
                    'Call ReadMessageCorreo(UserIndex, i)
126             Next i

            End If

128         Call .WriteBoolean(Actualizar)
        
130         PrepareMessageListaCorreo = .ReadASCIIStringFixed(.Length)

        End With

        
        Exit Function

PrepareMessageListaCorreo_Err:
132     Call RegistrarError(Err.Number, Err.Description, "Protocol.PrepareMessageListaCorreo", Erl)
134     Resume Next
        
End Function

''
' Prepares the "CreateFX" message and returns it.
'
' @param    UserIndex User to which the message is intended.
' @param    CharIndex Character upon which the FX will be created.
' @param    FX FX index to be displayed over the new character.
' @param    FXLoops Number of times the FX should be rendered.
' @return   The formated message ready to be writen as is on outgoing buffers.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Function PrepareMessageCreateFX(ByVal CharIndex As Integer, ByVal FX As Integer, ByVal FXLoops As Integer) As String
        
        On Error GoTo PrepareMessageCreateFX_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Prepares the "CreateFX" message and returns it
        '***************************************************
100     With auxiliarBuffer
102         Call .WriteByte(ServerPacketID.CreateFX)
104         Call .WriteInteger(CharIndex)
106         Call .WriteInteger(FX)
108         Call .WriteInteger(FXLoops)
        
110         PrepareMessageCreateFX = .ReadASCIIStringFixed(.Length)

        End With

        
        Exit Function

PrepareMessageCreateFX_Err:
112     Call RegistrarError(Err.Number, Err.Description, "Protocol.PrepareMessageCreateFX", Erl)
114     Resume Next
        
End Function

Public Function PrepareMessageMeditateToggle(ByVal CharIndex As Integer, ByVal FX As Integer) As String
        '***************************************************
        
        On Error GoTo PrepareMessageMeditateToggle_Err
        
100     With auxiliarBuffer
102         Call .WriteByte(ServerPacketID.MeditateToggle)
104         Call .WriteInteger(CharIndex)
106         Call .WriteInteger(FX)
        
108         PrepareMessageMeditateToggle = .ReadASCIIStringFixed(.Length)
        End With

        
        Exit Function

PrepareMessageMeditateToggle_Err:
110     Call RegistrarError(Err.Number, Err.Description, "Protocol.PrepareMessageMeditateToggle", Erl)
112     Resume Next
        
End Function

Public Function PrepareMessageParticleFX(ByVal CharIndex As Integer, ByVal Particula As Integer, ByVal Time As Long, ByVal Remove As Boolean) As String
        
        On Error GoTo PrepareMessageParticleFX_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Prepares the "CreateFX" message and returns it
        '***************************************************
100     With auxiliarBuffer
102         Call .WriteByte(ServerPacketID.ParticleFX)
104         Call .WriteInteger(CharIndex)
106         Call .WriteInteger(Particula)
108         Call .WriteLong(Time)
110         Call .WriteBoolean(Remove)
        
112         PrepareMessageParticleFX = .ReadASCIIStringFixed(.Length)

        End With

        
        Exit Function

PrepareMessageParticleFX_Err:
114     Call RegistrarError(Err.Number, Err.Description, "Protocol.PrepareMessageParticleFX", Erl)
116     Resume Next
        
End Function

Public Function PrepareMessageParticleFXWithDestino(ByVal Emisor As Integer, ByVal Receptor As Integer, ByVal ParticulaViaje As Integer, ByVal ParticulaFinal As Integer, ByVal Time As Long, ByVal wav As Integer, ByVal FX As Integer) As String
        
        On Error GoTo PrepareMessageParticleFXWithDestino_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Prepares the "CreateFX" message and returns it
        '***************************************************
100     With auxiliarBuffer
102         Call .WriteByte(ServerPacketID.ParticleFXWithDestino)
104         Call .WriteInteger(Emisor)
106         Call .WriteInteger(Receptor)
108         Call .WriteInteger(ParticulaViaje)
110         Call .WriteInteger(ParticulaFinal)
112         Call .WriteLong(Time)
114         Call .WriteInteger(wav)
116         Call .WriteInteger(FX)
        
118         PrepareMessageParticleFXWithDestino = .ReadASCIIStringFixed(.Length)

        End With

        
        Exit Function

PrepareMessageParticleFXWithDestino_Err:
120     Call RegistrarError(Err.Number, Err.Description, "Protocol.PrepareMessageParticleFXWithDestino", Erl)
122     Resume Next
        
End Function

Public Function PrepareMessageParticleFXWithDestinoXY(ByVal Emisor As Integer, ByVal ParticulaViaje As Integer, ByVal ParticulaFinal As Integer, ByVal Time As Long, ByVal wav As Integer, ByVal FX As Integer, ByVal X As Byte, ByVal Y As Byte) As String
        
        On Error GoTo PrepareMessageParticleFXWithDestinoXY_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Prepares the "CreateFX" message and returns it
        '***************************************************
100     With auxiliarBuffer
102         Call .WriteByte(ServerPacketID.ParticleFXWithDestinoXY)
104         Call .WriteInteger(Emisor)
106         Call .WriteInteger(ParticulaViaje)
108         Call .WriteInteger(ParticulaFinal)
110         Call .WriteLong(Time)
112         Call .WriteInteger(wav)
114         Call .WriteInteger(FX)
116         Call .WriteByte(X)
118         Call .WriteByte(Y)
        
120         PrepareMessageParticleFXWithDestinoXY = .ReadASCIIStringFixed(.Length)

        End With

        
        Exit Function

PrepareMessageParticleFXWithDestinoXY_Err:
122     Call RegistrarError(Err.Number, Err.Description, "Protocol.PrepareMessageParticleFXWithDestinoXY", Erl)
124     Resume Next
        
End Function

Public Function PrepareMessageAuraToChar(ByVal CharIndex As Integer, ByVal Aura As String, ByVal Remove As Boolean, ByVal Tipo As Byte) As String
        
        On Error GoTo PrepareMessageAuraToChar_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Prepares the "CreateFX" message and returns it
        '***************************************************
100     With auxiliarBuffer
102         Call .WriteByte(ServerPacketID.AuraToChar)
104         Call .WriteInteger(CharIndex)
106         Call .WriteASCIIString(Aura)
108         Call .WriteBoolean(Remove)
110         Call .WriteByte(Tipo)
112         PrepareMessageAuraToChar = .ReadASCIIStringFixed(.Length)

        End With

        
        Exit Function

PrepareMessageAuraToChar_Err:
114     Call RegistrarError(Err.Number, Err.Description, "Protocol.PrepareMessageAuraToChar", Erl)
116     Resume Next
        
End Function

Public Function PrepareMessageSpeedingACT(ByVal CharIndex As Integer, ByVal speeding As Single) As String
        
        On Error GoTo PrepareMessageSpeedingACT_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Prepares the "CreateFX" message and returns it
        '***************************************************
100     With auxiliarBuffer
102         Call .WriteByte(ServerPacketID.SpeedToChar)
104         Call .WriteInteger(CharIndex)
106         Call .WriteSingle(speeding)
108         PrepareMessageSpeedingACT = .ReadASCIIStringFixed(.Length)

        End With

        
        Exit Function

PrepareMessageSpeedingACT_Err:
110     Call RegistrarError(Err.Number, Err.Description, "Protocol.PrepareMessageSpeedingACT", Erl)
112     Resume Next
        
End Function

Public Function PrepareMessageParticleFXToFloor(ByVal X As Byte, ByVal Y As Byte, ByVal Particula As Integer, ByVal Time As Long) As String
        
        On Error GoTo PrepareMessageParticleFXToFloor_Err
        

        '***************************************************
        '***************************************************
100     With auxiliarBuffer
102         Call .WriteByte(ServerPacketID.ParticleFXToFloor)
104         Call .WriteByte(X)
106         Call .WriteByte(Y)
108         Call .WriteInteger(Particula)
110         Call .WriteLong(Time)
112         PrepareMessageParticleFXToFloor = .ReadASCIIStringFixed(.Length)

        End With

        
        Exit Function

PrepareMessageParticleFXToFloor_Err:
114     Call RegistrarError(Err.Number, Err.Description, "Protocol.PrepareMessageParticleFXToFloor", Erl)
116     Resume Next
        
End Function

Public Function PrepareMessageLightFXToFloor(ByVal X As Byte, ByVal Y As Byte, ByVal LuzColor As Long, ByVal Rango As Byte) As String
        
        On Error GoTo PrepareMessageLightFXToFloor_Err
        

        '***************************************************
        '***************************************************
100     With auxiliarBuffer
102         Call .WriteByte(ServerPacketID.LightToFloor)
104         Call .WriteByte(X)
106         Call .WriteByte(Y)
108         Call .WriteLong(LuzColor)
110         Call .WriteByte(Rango)
112         PrepareMessageLightFXToFloor = .ReadASCIIStringFixed(.Length)

        End With

        
        Exit Function

PrepareMessageLightFXToFloor_Err:
114     Call RegistrarError(Err.Number, Err.Description, "Protocol.PrepareMessageLightFXToFloor", Erl)
116     Resume Next
        
End Function

''
' Prepares the "PlayWave" message and returns it.
'
' @param    wave The wave to be played.
' @param    X The X position in map coordinates from where the sound comes.
' @param    Y The Y position in map coordinates from where the sound comes.
' @return   The formated message ready to be writen as is on outgoing buffers.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Function PrepareMessagePlayWave(ByVal wave As Integer, ByVal X As Byte, ByVal Y As Byte) As String
        
        On Error GoTo PrepareMessagePlayWave_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 08/08/07
        'Last Modified by: Rapsodius
        'Added X and Y positions for 3D Sounds
        '***************************************************
100     With auxiliarBuffer
102         Call .WriteByte(ServerPacketID.PlayWave)
104         Call .WriteInteger(wave)
106         Call .WriteByte(X)
108         Call .WriteByte(Y)
        
110         PrepareMessagePlayWave = .ReadASCIIStringFixed(.Length)

        End With

        
        Exit Function

PrepareMessagePlayWave_Err:
112     Call RegistrarError(Err.Number, Err.Description, "Protocol.PrepareMessagePlayWave", Erl)
114     Resume Next
        
End Function

Public Function PrepareMessageUbicacionLlamada(ByVal Mapa As Integer, ByVal X As Byte, ByVal Y As Byte) As String
        
        On Error GoTo PrepareMessageUbicacionLlamada_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 08/08/07
        'Last Modified by: Rapsodius
        'Added X and Y positions for 3D Sounds
        '***************************************************
100     With auxiliarBuffer
102         Call .WriteByte(ServerPacketID.PosLLamadaDeClan)
104         Call .WriteInteger(Mapa)
106         Call .WriteByte(X)
108         Call .WriteByte(Y)
        
110         PrepareMessageUbicacionLlamada = .ReadASCIIStringFixed(.Length)

        End With

        
        Exit Function

PrepareMessageUbicacionLlamada_Err:
112     Call RegistrarError(Err.Number, Err.Description, "Protocol.PrepareMessageUbicacionLlamada", Erl)
114     Resume Next
        
End Function

Public Function PrepareMessageCharUpdateHP(ByVal UserIndex As Integer) As String
        
        On Error GoTo PrepareMessageCharUpdateHP_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 08/08/07
        'Last Modified by: Rapsodius
        'Added X and Y positions for 3D Sounds
        '***************************************************
100     With auxiliarBuffer
102         Call .WriteByte(ServerPacketID.CharUpdateHP)
104         Call .WriteInteger(UserList(UserIndex).Char.CharIndex)
106         Call .WriteInteger(UserList(UserIndex).Stats.MinHp)
108         Call .WriteInteger(UserList(UserIndex).Stats.MaxHp)
        
110         PrepareMessageCharUpdateHP = .ReadASCIIStringFixed(.Length)

        End With

        
        Exit Function

PrepareMessageCharUpdateHP_Err:
112     Call RegistrarError(Err.Number, Err.Description, "Protocol.PrepareMessageCharUpdateHP", Erl)
114     Resume Next
        
End Function

Public Function PrepareMessageArmaMov(ByVal CharIndex As Integer) As String
        
        On Error GoTo PrepareMessageArmaMov_Err
        

        '***************************************************
100     With auxiliarBuffer
102         Call .WriteByte(ServerPacketID.ArmaMov)
104         Call .WriteInteger(CharIndex)
        
106         PrepareMessageArmaMov = .ReadASCIIStringFixed(.Length)

        End With

        
        Exit Function

PrepareMessageArmaMov_Err:
108     Call RegistrarError(Err.Number, Err.Description, "Protocol.PrepareMessageArmaMov", Erl)
110     Resume Next
        
End Function

Public Function PrepareMessageEscudoMov(ByVal CharIndex As Integer) As String
        
        On Error GoTo PrepareMessageEscudoMov_Err
        

        '***************************************************
100     With auxiliarBuffer
102         Call .WriteByte(ServerPacketID.EscudoMov)
104         Call .WriteInteger(CharIndex)
        
106         PrepareMessageEscudoMov = .ReadASCIIStringFixed(.Length)

        End With

        
        Exit Function

PrepareMessageEscudoMov_Err:
108     Call RegistrarError(Err.Number, Err.Description, "Protocol.PrepareMessageEscudoMov", Erl)
110     Resume Next
        
End Function

Public Function PrepareMessageFlashScreen(ByVal Color As Long, ByVal Duracion As Long, Optional ByVal Ignorar As Boolean = False) As String
        
        On Error GoTo PrepareMessageFlashScreen_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 08/08/07
        'Last Modified by: Rapsodius
        'Added X and Y positions for 3D Sounds
        '***************************************************
100     With auxiliarBuffer
102         Call .WriteByte(ServerPacketID.FlashScreen)
104         Call .WriteLong(Color)
106         Call .WriteLong(Duracion)
108         Call .WriteBoolean(Ignorar)
110         PrepareMessageFlashScreen = .ReadASCIIStringFixed(.Length)

        End With

        
        Exit Function

PrepareMessageFlashScreen_Err:
112     Call RegistrarError(Err.Number, Err.Description, "Protocol.PrepareMessageFlashScreen", Erl)
114     Resume Next
        
End Function

''
' Prepares the "GuildChat" message and returns it.
'
' @param    Chat Text to be displayed over the char's head.
' @return   The formated message ready to be writen as is on outgoing buffers.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Function PrepareMessageGuildChat(ByVal chat As String) As String
        
        On Error GoTo PrepareMessageGuildChat_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Prepares the "GuildChat" message and returns it
        '***************************************************
100     With auxiliarBuffer
102         Call .WriteByte(ServerPacketID.GuildChat)
104         Call .WriteASCIIString(chat)
        
106         PrepareMessageGuildChat = .ReadASCIIStringFixed(.Length)

        End With

        
        Exit Function

PrepareMessageGuildChat_Err:
108     Call RegistrarError(Err.Number, Err.Description, "Protocol.PrepareMessageGuildChat", Erl)
110     Resume Next
        
End Function

''
' Prepares the "ShowMessageBox" message and returns it.
'
' @param    Message Text to be displayed in the message box.
' @return   The formated message ready to be writen as is on outgoing buffers.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Function PrepareMessageShowMessageBox(ByVal chat As String) As String
        
        On Error GoTo PrepareMessageShowMessageBox_Err
        

        '***************************************************
        'Author: Fredy Horacio Treboux (liquid)
        'Last Modification: 01/08/07
        'Prepares the "ShowMessageBox" message and returns it
        '***************************************************
100     With auxiliarBuffer
102         Call .WriteByte(ServerPacketID.ShowMessageBox)
104         Call .WriteASCIIString(chat)
        
106         PrepareMessageShowMessageBox = .ReadASCIIStringFixed(.Length)

        End With

        
        Exit Function

PrepareMessageShowMessageBox_Err:
108     Call RegistrarError(Err.Number, Err.Description, "Protocol.PrepareMessageShowMessageBox", Erl)
110     Resume Next
        
End Function

''
' Prepares the "PlayMidi" message and returns it.
'
' @param    midi The midi to be played.
' @param    loops Number of repets for the midi.
' @return   The formated message ready to be writen as is on outgoing buffers.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Function PrepareMessagePlayMidi(ByVal midi As Byte, Optional ByVal loops As Integer = -1) As String
        
        On Error GoTo PrepareMessagePlayMidi_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Prepares the "GuildChat" message and returns it
        '***************************************************
100     With auxiliarBuffer
102         Call .WriteByte(ServerPacketID.PlayMIDI)
104         Call .WriteByte(midi)
106         Call .WriteInteger(loops)
        
108         PrepareMessagePlayMidi = .ReadASCIIStringFixed(.Length)

        End With

        
        Exit Function

PrepareMessagePlayMidi_Err:
110     Call RegistrarError(Err.Number, Err.Description, "Protocol.PrepareMessagePlayMidi", Erl)
112     Resume Next
        
End Function

Public Function PrepareMessageOnlineUser(ByVal UserOnline As Integer) As String
        '***************************************************
        
        On Error GoTo PrepareMessageOnlineUser_Err
        

        '***************************************************
100     With auxiliarBuffer
102         Call .WriteByte(ServerPacketID.UserOnline)
104         Call .WriteInteger(UserOnline)
        
106         PrepareMessageOnlineUser = .ReadASCIIStringFixed(.Length)

        End With

        
        Exit Function

PrepareMessageOnlineUser_Err:
108     Call RegistrarError(Err.Number, Err.Description, "Protocol.PrepareMessageOnlineUser", Erl)
110     Resume Next
        
End Function

''
' Prepares the "PauseToggle" message and returns it.
'
' @return   The formated message ready to be writen as is on outgoing buffers.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Function PrepareMessagePauseToggle() As String
        
        On Error GoTo PrepareMessagePauseToggle_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Prepares the "PauseToggle" message and returns it
        '***************************************************
100     With auxiliarBuffer
102         Call .WriteByte(ServerPacketID.PauseToggle)
104         PrepareMessagePauseToggle = .ReadASCIIStringFixed(.Length)

        End With

        
        Exit Function

PrepareMessagePauseToggle_Err:
106     Call RegistrarError(Err.Number, Err.Description, "Protocol.PrepareMessagePauseToggle", Erl)
108     Resume Next
        
End Function

''
' Prepares the "RainToggle" message and returns it.
'
' @return   The formated message ready to be writen as is on outgoing buffers.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Function PrepareMessageRainToggle() As String
        
        On Error GoTo PrepareMessageRainToggle_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Prepares the "RainToggle" message and returns it
        '***************************************************
100     With auxiliarBuffer
102         Call .WriteByte(ServerPacketID.RainToggle)
        
104         PrepareMessageRainToggle = .ReadASCIIStringFixed(.Length)

        End With

        
        Exit Function

PrepareMessageRainToggle_Err:
106     Call RegistrarError(Err.Number, Err.Description, "Protocol.PrepareMessageRainToggle", Erl)
108     Resume Next
        
End Function

Public Function PrepareMessageTrofeoToggleOn() As String
        
        On Error GoTo PrepareMessageTrofeoToggleOn_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Prepares the "TrofeoToggle" message and returns it
        '***************************************************
100     With auxiliarBuffer
102         Call .WriteByte(ServerPacketID.TrofeoToggleOn)
        
104         PrepareMessageTrofeoToggleOn = .ReadASCIIStringFixed(.Length)

        End With

        
        Exit Function

PrepareMessageTrofeoToggleOn_Err:
106     Call RegistrarError(Err.Number, Err.Description, "Protocol.PrepareMessageTrofeoToggleOn", Erl)
108     Resume Next
        
End Function

Public Function PrepareMessageTrofeoToggleOff() As String
        
        On Error GoTo PrepareMessageTrofeoToggleOff_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Prepares the "TrofeoToggle" message and returns it
        '***************************************************
100     With auxiliarBuffer
102         Call .WriteByte(ServerPacketID.TrofeoToggleOff)
        
104         PrepareMessageTrofeoToggleOff = .ReadASCIIStringFixed(.Length)

        End With

        
        Exit Function

PrepareMessageTrofeoToggleOff_Err:
106     Call RegistrarError(Err.Number, Err.Description, "Protocol.PrepareMessageTrofeoToggleOff", Erl)
108     Resume Next
        
End Function

Public Function PrepareMessageHora() As String
        
        On Error GoTo PrepareMessageHora_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Prepares the "RainToggle" message and returns it
        '***************************************************
100     With auxiliarBuffer
102         Call .WriteByte(ServerPacketID.Hora)
104         Call .WriteLong((GetTickCount() - HoraMundo) Mod DuracionDia)
106         Call .WriteLong(DuracionDia)
        
108         PrepareMessageHora = .ReadASCIIStringFixed(.Length)

        End With

        
        Exit Function

PrepareMessageHora_Err:
110     Call RegistrarError(Err.Number, Err.Description, "Protocol.PrepareMessageHora", Erl)
112     Resume Next
        
End Function

''
' Prepares the "ObjectDelete" message and returns it.
'
' @param    X X coord of the character's new position.
' @param    Y Y coord of the character's new position.
' @return   The formated message ready to be writen as is on outgoing buffers.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Function PrepareMessageObjectDelete(ByVal X As Byte, ByVal Y As Byte) As String
        
        On Error GoTo PrepareMessageObjectDelete_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Prepares the "ObjectDelete" message and returns it
        '***************************************************
100     With auxiliarBuffer
102         Call .WriteByte(ServerPacketID.ObjectDelete)
104         Call .WriteByte(X)
106         Call .WriteByte(Y)
        
108         PrepareMessageObjectDelete = .ReadASCIIStringFixed(.Length)

        End With

        
        Exit Function

PrepareMessageObjectDelete_Err:
110     Call RegistrarError(Err.Number, Err.Description, "Protocol.PrepareMessageObjectDelete", Erl)
112     Resume Next
        
End Function

''
' Prepares the "BlockPosition" message and returns it.
'
' @param    X X coord of the tile to block/unblock.
' @param    Y Y coord of the tile to block/unblock.
' @param    Blocked Blocked status of the tile
' @return   The formated message ready to be writen as is on outgoing buffers.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Function PrepareMessageBlockPosition(ByVal X As Byte, ByVal Y As Byte, ByVal Blocked As Byte) As String
        
        On Error GoTo PrepareMessageBlockPosition_Err
        

        '***************************************************
        'Author: Fredy Horacio Treboux (liquid)
        'Last Modification: 01/08/07
        'Prepares the "BlockPosition" message and returns it
        '***************************************************
100     With auxiliarBuffer
102         Call .WriteByte(ServerPacketID.BlockPosition)
104         Call .WriteByte(X)
106         Call .WriteByte(Y)
108         Call .WriteByte(Blocked)
        
110         PrepareMessageBlockPosition = .ReadASCIIStringFixed(.Length)

        End With
    
        
        Exit Function

PrepareMessageBlockPosition_Err:
112     Call RegistrarError(Err.Number, Err.Description, "Protocol.PrepareMessageBlockPosition", Erl)
114     Resume Next
        
End Function

''
' Prepares the "ObjectCreate" message and returns it.
'
' @param    GrhIndex Grh of the object.
' @param    X X coord of the character's new position.
' @param    Y Y coord of the character's new position.
' @return   The formated message ready to be writen as is on outgoing buffers.
' @remarks  The data is not actually sent until the buffer is properly flushed.
'Optimizacion por Ladder
Public Function PrepareMessageObjectCreate(ByVal ObjIndex As Integer, ByVal X As Byte, ByVal Y As Byte) As String
        
        On Error GoTo PrepareMessageObjectCreate_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'prepares the "ObjectCreate" message and returns it
        '***************************************************
100     With auxiliarBuffer
102         Call .WriteByte(ServerPacketID.ObjectCreate)
104         Call .WriteByte(X)
106         Call .WriteByte(Y)
108         Call .WriteInteger(ObjIndex)
        
110         PrepareMessageObjectCreate = .ReadASCIIStringFixed(.Length)

        End With

        
        Exit Function

PrepareMessageObjectCreate_Err:
112     Call RegistrarError(Err.Number, Err.Description, "Protocol.PrepareMessageObjectCreate", Erl)
114     Resume Next
        
End Function

Public Function PrepareMessageFxPiso(ByVal GrhIndex As Integer, ByVal X As Byte, ByVal Y As Byte) As String
        
        On Error GoTo PrepareMessageFxPiso_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'prepares the "ObjectCreate" message and returns it
        '***************************************************
100     With auxiliarBuffer
102         Call .WriteByte(ServerPacketID.fxpiso)
104         Call .WriteByte(X)
106         Call .WriteByte(Y)
108         Call .WriteInteger(GrhIndex)
        
110         PrepareMessageFxPiso = .ReadASCIIStringFixed(.Length)

        End With

        
        Exit Function

PrepareMessageFxPiso_Err:
112     Call RegistrarError(Err.Number, Err.Description, "Protocol.PrepareMessageFxPiso", Erl)
114     Resume Next
        
End Function

''
' Prepares the "CharacterRemove" message and returns it.
'
' @param    CharIndex Character to be removed.
' @return   The formated message ready to be writen as is on outgoing buffers.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Function PrepareMessageCharacterRemove(ByVal CharIndex As Integer, ByVal Desvanecido As Boolean) As String
        
        On Error GoTo PrepareMessageCharacterRemove_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Prepares the "CharacterRemove" message and returns it
        '***************************************************
100     With auxiliarBuffer
102         Call .WriteByte(ServerPacketID.CharacterRemove)
104         Call .WriteInteger(CharIndex)
106         Call .WriteBoolean(Desvanecido)
        
108         PrepareMessageCharacterRemove = .ReadASCIIStringFixed(.Length)

        End With

        
        Exit Function

PrepareMessageCharacterRemove_Err:
110     Call RegistrarError(Err.Number, Err.Description, "Protocol.PrepareMessageCharacterRemove", Erl)
112     Resume Next
        
End Function

''
' Prepares the "RemoveCharDialog" message and returns it.
'
' @param    CharIndex Character whose dialog will be removed.
' @return   The formated message ready to be writen as is on outgoing buffers.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Function PrepareMessageRemoveCharDialog(ByVal CharIndex As Integer) As String
        
        On Error GoTo PrepareMessageRemoveCharDialog_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "RemoveCharDialog" message to the given user's outgoing data buffer
        '***************************************************
100     With auxiliarBuffer
102         Call .WriteByte(ServerPacketID.RemoveCharDialog)
104         Call .WriteInteger(CharIndex)
        
106         PrepareMessageRemoveCharDialog = .ReadASCIIStringFixed(.Length)

        End With

        
        Exit Function

PrepareMessageRemoveCharDialog_Err:
108     Call RegistrarError(Err.Number, Err.Description, "Protocol.PrepareMessageRemoveCharDialog", Erl)
110     Resume Next
        
End Function

''
' Writes the "CharacterCreate" message to the given user's outgoing data buffer.
'
' @param    body Body index of the new character.
' @param    head Head index of the new character.
' @param    heading Heading in which the new character is looking.
' @param    CharIndex The index of the new character.
' @param    X X coord of the new character's position.
' @param    Y Y coord of the new character's position.
' @param    weapon Weapon index of the new character.
' @param    shield Shield index of the new character.
' @param    FX FX index to be displayed over the new character.
' @param    FXLoops Number of times the FX should be rendered.
' @param    helmet Helmet index of the new character.
' @param    name Name of the new character.
' @param    criminal Determines if the character is a criminal or not.
' @param    privileges Sets if the character is a normal one or any kind of administrative character.
' @return   The formated message ready to be writen as is on outgoing buffers.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Function PrepareMessageCharacterCreate(ByVal Body As Integer, ByVal Head As Integer, ByVal Heading As eHeading, ByVal CharIndex As Integer, ByVal X As Byte, ByVal Y As Byte, ByVal weapon As Integer, ByVal shield As Integer, ByVal FX As Integer, ByVal FXLoops As Integer, ByVal helmet As Integer, ByVal name As String, ByVal Status As Byte, ByVal privileges As Byte, ByVal ParticulaFx As Byte, ByVal Head_Aura As String, ByVal Arma_Aura As String, ByVal Body_Aura As String, ByVal DM_Aura As String, ByVal RM_Aura As String, ByVal Otra_Aura As String, ByVal Escudo_Aura As String, ByVal speeding As Single, ByVal EsNPC As Byte, ByVal donador As Byte, ByVal appear As Byte, ByVal group_index As Integer, ByVal clan_index As Integer, ByVal clan_nivel As Byte, ByVal UserMinHp As Long, ByVal UserMaxHp As Long, ByVal Simbolo As Byte, ByVal Idle As Boolean, ByVal Navegando As Boolean) As String
        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Prepares the "CharacterCreate" message and returns it
        '***************************************************
        
        On Error GoTo PrepareMessageCharacterCreate_Err
        

100     With auxiliarBuffer
102         Call .WriteByte(ServerPacketID.CharacterCreate)
        
104         Call .WriteInteger(CharIndex)
106         Call .WriteInteger(Body)
108         Call .WriteInteger(Head)
110         Call .WriteByte(Heading)
112         Call .WriteByte(X)
114         Call .WriteByte(Y)
116         Call .WriteInteger(weapon)
118         Call .WriteInteger(shield)
120         Call .WriteInteger(helmet)
122         Call .WriteInteger(FX)
124         Call .WriteInteger(FXLoops)
126         Call .WriteASCIIString(name)
128         Call .WriteByte(Status)
130         Call .WriteByte(privileges)
132         Call .WriteByte(ParticulaFx)
134         Call .WriteASCIIString(Head_Aura)
136         Call .WriteASCIIString(Arma_Aura)
138         Call .WriteASCIIString(Body_Aura)
140         Call .WriteASCIIString(DM_Aura)
142         Call .WriteASCIIString(RM_Aura)
144         Call .WriteASCIIString(Otra_Aura)
146         Call .WriteASCIIString(Escudo_Aura)
148         Call .WriteSingle(speeding)
150         Call .WriteByte(EsNPC)
152         Call .WriteByte(donador)
154         Call .WriteByte(appear)
156         Call .WriteInteger(group_index)
158         Call .WriteInteger(clan_index)
160         Call .WriteByte(clan_nivel)
162         Call .WriteLong(UserMinHp)
164         Call .WriteLong(UserMaxHp)
166         Call .WriteByte(Simbolo)
168         Call .WriteBoolean(Idle)
170         Call .WriteBoolean(Navegando)

172         PrepareMessageCharacterCreate = .ReadASCIIStringFixed(.Length)

        End With

        
        Exit Function

PrepareMessageCharacterCreate_Err:
174     Call RegistrarError(Err.Number, Err.Description, "Protocol.PrepareMessageCharacterCreate", Erl)
176     Resume Next
        
End Function

''
' Prepares the "CharacterChange" message and returns it.
'
' @param    body Body index of the new character.
' @param    head Head index of the new character.
' @param    heading Heading in which the new character is looking.
' @param    CharIndex The index of the new character.
' @param    weapon Weapon index of the new character.
' @param    shield Shield index of the new character.
' @param    FX FX index to be displayed over the new character.
' @param    FXLoops Number of times the FX should be rendered.
' @param    helmet Helmet index of the new character.
' @return   The formated message ready to be writen as is on outgoing buffers.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Function PrepareMessageCharacterChange(ByVal Body As Integer, ByVal Head As Integer, ByVal Heading As eHeading, ByVal CharIndex As Integer, ByVal weapon As Integer, ByVal shield As Integer, ByVal FX As Integer, ByVal FXLoops As Integer, ByVal helmet As Integer, ByVal Idle As Boolean, ByVal Navegando As Boolean) As String
        
        On Error GoTo PrepareMessageCharacterChange_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Prepares the "CharacterChange" message and returns it
        '***************************************************
100     With auxiliarBuffer
102         Call .WriteByte(ServerPacketID.CharacterChange)
        
104         Call .WriteInteger(CharIndex)
106         Call .WriteInteger(Body)
108         Call .WriteInteger(Head)
110         Call .WriteByte(Heading)
112         Call .WriteInteger(weapon)
114         Call .WriteInteger(shield)
116         Call .WriteInteger(helmet)
118         Call .WriteInteger(FX)
120         Call .WriteInteger(FXLoops)
122         Call .WriteBoolean(Idle)
124         Call .WriteBoolean(Navegando)
        
126         PrepareMessageCharacterChange = .ReadASCIIStringFixed(.Length)

        End With

        
        Exit Function

PrepareMessageCharacterChange_Err:
128     Call RegistrarError(Err.Number, Err.Description, "Protocol.PrepareMessageCharacterChange", Erl)
130     Resume Next
        
End Function

''
' Prepares the "CharacterMove" message and returns it.
'
' @param    CharIndex Character which is moving.
' @param    X X coord of the character's new position.
' @param    Y Y coord of the character's new position.
' @return   The formated message ready to be writen as is on outgoing buffers.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Function PrepareMessageCharacterMove(ByVal CharIndex As Integer, ByVal X As Byte, ByVal Y As Byte) As String
        
        On Error GoTo PrepareMessageCharacterMove_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Prepares the "CharacterMove" message and returns it
        '***************************************************
100     With auxiliarBuffer
102         Call .WriteByte(ServerPacketID.CharacterMove)
104         Call .WriteInteger(CharIndex)
106         Call .WriteByte(X)
108         Call .WriteByte(Y)
        
110         PrepareMessageCharacterMove = .ReadASCIIStringFixed(.Length)

        End With

        
        Exit Function

PrepareMessageCharacterMove_Err:
112     Call RegistrarError(Err.Number, Err.Description, "Protocol.PrepareMessageCharacterMove", Erl)
114     Resume Next
        
End Function

Public Function PrepareMessageForceCharMove(ByVal Direccion As eHeading) As String
        
        On Error GoTo PrepareMessageForceCharMove_Err
    
        

        '***************************************************
        'Author: ZaMa
        'Last Modification: 26/03/2009
        'Prepares the "ForceCharMove" message and returns it
        '***************************************************
100     With auxiliarBuffer
102         Call .WriteByte(ServerPacketID.ForceCharMove)
104         Call .WriteByte(Direccion)
        
106         PrepareMessageForceCharMove = .ReadASCIIStringFixed(.Length)

        End With

        
        Exit Function

PrepareMessageForceCharMove_Err:
108     Call RegistrarError(Err.Number, Err.Description, "Protocol.PrepareMessageForceCharMove", Erl)

        
End Function

''
' Prepares the "UpdateTagAndStatus" message and returns it.
'
' @param    CharIndex Character which is moving.
' @param    X X coord of the character's new position.
' @param    Y Y coord of the character's new position.
' @return   The formated message ready to be writen as is on outgoing buffers.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Function PrepareMessageUpdateTagAndStatus(ByVal UserIndex As Integer, Status As Byte, Tag As String) As String
        
        On Error GoTo PrepareMessageUpdateTagAndStatus_Err
        

        '***************************************************
        'Author: Alejandro Salvo (Salvito)
        'Last Modification: 04/07/07
        'Last Modified By: Juan Martín Sotuyo Dodero (Maraxus)
        'Prepares the "UpdateTagAndStatus" message and returns it
        '***************************************************
100     With auxiliarBuffer
102         Call .WriteByte(ServerPacketID.UpdateTagAndStatus)
        
104         Call .WriteInteger(UserList(UserIndex).Char.CharIndex)
106         Call .WriteByte(Status)
108         Call .WriteASCIIString(Tag)
110         Call .WriteInteger(UserList(UserIndex).Grupo.Lider)
        
112         PrepareMessageUpdateTagAndStatus = .ReadASCIIStringFixed(.Length)

        End With

        
        Exit Function

PrepareMessageUpdateTagAndStatus_Err:
114     Call RegistrarError(Err.Number, Err.Description, "Protocol.PrepareMessageUpdateTagAndStatus", Erl)
116     Resume Next
        
End Function

Public Sub WriteUpdateNPCSimbolo(ByVal UserIndex As Integer, ByVal NpcIndex As Integer, ByVal Simbolo As Byte)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "Fame" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     With UserList(UserIndex).outgoingData
102         Call .WriteByte(ServerPacketID.UpdateNPCSimbolo)
104         Call .WriteInteger(NpcList(NpcIndex).Char.CharIndex)
106         Call .WriteByte(Simbolo)

        End With

        Exit Sub

ErrHandler:

108     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
110         Call FlushBuffer(UserIndex)
112         Resume
        End If

End Sub

''
' Prepares the "ErrorMsg" message and returns it.
'
' @param    message The error message to be displayed.
' @remarks  The data is not actually sent until the buffer is properly flushed.

Public Function PrepareMessageErrorMsg(ByVal message As String) As String
        
        On Error GoTo PrepareMessageErrorMsg_Err
        

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Prepares the "ErrorMsg" message and returns it
        '***************************************************
100     With auxiliarBuffer
102         Call .WriteByte(ServerPacketID.ErrorMsg)
104         Call .WriteASCIIString(message)
        
106         PrepareMessageErrorMsg = .ReadASCIIStringFixed(.Length)

        End With

        
        Exit Function

PrepareMessageErrorMsg_Err:
108     Call RegistrarError(Err.Number, Err.Description, "Protocol.PrepareMessageErrorMsg", Erl)
110     Resume Next
        
End Function

Private Sub HandleQuestionGM(ByVal UserIndex As Integer)

        'Author: Pablo Mercavides
100     If UserList(UserIndex).incomingData.Length < 6 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
            'Remove packet ID
108         Call Buffer.ReadInteger
        
            Dim Consulta       As String

            Dim TipoDeConsulta As String

110         Consulta = Buffer.ReadASCIIString()
112         TipoDeConsulta = Buffer.ReadASCIIString()

114         If UserList(UserIndex).donador.activo = 1 Then
116             Call Ayuda.Push(.name, Consulta, TipoDeConsulta & "-Prioritario")
118             Call SendData(SendTarget.ToAdmins, 0, PrepareMessageConsoleMsg("Se ha recibido un nuevo mensaje de soporte de " & UserList(UserIndex).name & "(Prioritario).", FontTypeNames.FONTTYPE_SERVER))
            
            Else
120             Call Ayuda.Push(.name, Consulta, TipoDeConsulta)
122             Call SendData(SendTarget.ToAdmins, 0, PrepareMessageConsoleMsg("Se ha recibido un nuevo mensaje de soporte de " & UserList(UserIndex).name & ".", FontTypeNames.FONTTYPE_SERVER))

            End If

124         Call WriteConsoleMsg(UserIndex, "Tu mensaje fue recibido por el equipo de soporte.", FontTypeNames.FONTTYPE_INFOIAO)
            'Call WriteConsoleMsg(UserIndex, "Tu mensaje fue recibido por el equipo de soporte.", FontTypeNames.FONTTYPE_INFOIAO)
        
126         Call LogConsulta(.name & " (" & TipoDeConsulta & ") " & Consulta)
        
            'If we got here then packet is complete, copy data back to original queue
128         Call .incomingData.CopyBuffer(Buffer)

        End With
    
ErrHandler:

        Dim Error As Long

130     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
132     Set Buffer = Nothing
    
134     If Error <> 0 Then Err.raise Error

End Sub

Private Sub HandleOfertaInicial(ByVal UserIndex As Integer)
        
        On Error GoTo HandleOfertaInicial_Err
        

        'Author: Pablo Mercavides
100     If UserList(UserIndex).incomingData.Length < 6 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
104     With UserList(UserIndex)
            'Remove packet ID
106         Call .incomingData.ReadInteger

            Dim Oferta As Long

108         Oferta = .incomingData.ReadLong()
        
110         If UserList(UserIndex).flags.Muerto = 1 Then
112             Call WriteLocaleMsg(UserIndex, "77", FontTypeNames.FONTTYPE_INFO)
                
                Exit Sub

            End If

114         If .flags.TargetNPC < 1 Then
116             Call WriteConsoleMsg(UserIndex, "Primero tenés que hacer click sobre el subastador.", FontTypeNames.FONTTYPE_INFO)
                Exit Sub

            End If

118         If NpcList(.flags.TargetNPC).NPCtype <> eNPCType.Subastador Then
120             Call WriteConsoleMsg(UserIndex, "Primero tenés que hacer click sobre el subastador.", FontTypeNames.FONTTYPE_INFO)
                Exit Sub

            End If
        
122         If Distancia(NpcList(.flags.TargetNPC).Pos, .Pos) > 2 Then
124             Call WriteLocaleMsg(UserIndex, "8", FontTypeNames.FONTTYPE_INFO)
                'Call WriteConsoleMsg(UserIndex, "Estís demasiado lejos del subastador.", FontTypeNames.FONTTYPE_INFO)
                Exit Sub

            End If
        
126         If .flags.Subastando = False Then
128             Call WriteChatOverHead(UserIndex, "Oye amigo, tu no podés decirme cual es la oferta inicial.", NpcList(UserList(UserIndex).flags.TargetNPC).Char.CharIndex, vbWhite)
                Exit Sub

            End If
        
130         If Subasta.HaySubastaActiva = False And .flags.Subastando = False Then
132             Call WriteConsoleMsg(UserIndex, "No hay ninguna subasta en curso.", FontTypeNames.FONTTYPE_INFO)
                Exit Sub

            End If
        
134         If .flags.Subastando = True Then
136             UserList(UserIndex).Counters.TiempoParaSubastar = 0
138             Subasta.OfertaInicial = Oferta
140             Subasta.MejorOferta = 0
142             Call SendData(SendTarget.ToAll, 0, PrepareMessageConsoleMsg(.name & " está subastando: " & ObjData(Subasta.ObjSubastado).name & " (Cantidad: " & Subasta.ObjSubastadoCantidad & " ) - con un precio inicial de " & PonerPuntos(Subasta.OfertaInicial) & " monedas. Escribe /OFERTAR (cantidad) para participar.", FontTypeNames.FONTTYPE_SUBASTA))
144             .flags.Subastando = False
146             Subasta.HaySubastaActiva = True
148             Subasta.Subastador = .name
150             Subasta.MinutosDeSubasta = 5
152             Subasta.TiempoRestanteSubasta = 300
154             Call LogearEventoDeSubasta("#################################################################################################################################################################################################")
156             Call LogearEventoDeSubasta("El dia: " & Date & " a las " & Time)
158             Call LogearEventoDeSubasta(.name & ": Esta subastando el item numero " & Subasta.ObjSubastado & " con una cantidad de " & Subasta.ObjSubastadoCantidad & " y con un precio inicial de " & PonerPuntos(Subasta.OfertaInicial) & " monedas.")
160             frmMain.SubastaTimer.Enabled = True
162             Call WarpUserChar(UserIndex, 14, 27, 64, True)

                'lalala toda la bola de los timerrr
            End If

        End With

        
        Exit Sub

HandleOfertaInicial_Err:
164     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleOfertaInicial", Erl)
166     Resume Next
        
End Sub

Private Sub HandleOfertaDeSubasta(ByVal UserIndex As Integer)

        'Author: Pablo Mercavides
100     If UserList(UserIndex).incomingData.Length < 6 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
            'Remove packet ID
108         Call Buffer.ReadInteger

            Dim Oferta   As Long

            Dim ExOferta As Long
        
110         Oferta = Buffer.ReadLong()
        
112         If Subasta.HaySubastaActiva = False Then
114             Call WriteConsoleMsg(UserIndex, "No hay ninguna subasta en curso.", FontTypeNames.FONTTYPE_INFOIAO)
116             Call .incomingData.CopyBuffer(Buffer)
                Exit Sub

            End If
               
124         If Oferta < Subasta.MejorOferta + 100 Then
126             Call WriteConsoleMsg(UserIndex, "Debe haber almenos una diferencia de 100 monedas a la ultima oferta!", FontTypeNames.FONTTYPE_INFOIAO)
128             Call .incomingData.CopyBuffer(Buffer)
                Exit Sub

            End If
        
130         If .name = Subasta.Subastador Then
132             Call WriteConsoleMsg(UserIndex, "No podés auto ofertar en tus subastas. La proxima vez iras a la carcel...", FontTypeNames.FONTTYPE_INFOIAO)
134             Call .incomingData.CopyBuffer(Buffer)
                Exit Sub

            End If
        
136         If .Stats.GLD >= Oferta Then

                'revisar que pasa si el usuario que oferto antes esta offline
                'Devolvemos el oro al usuario que oferto antes...(si es que hubo oferta)
138             If Subasta.HuboOferta = True Then
140                 ExOferta = NameIndex(Subasta.Comprador)
142                 UserList(ExOferta).Stats.GLD = UserList(ExOferta).Stats.GLD + Subasta.MejorOferta
144                 Call WriteUpdateGold(ExOferta)

                End If
            
146             Subasta.MejorOferta = Oferta
148             Subasta.Comprador = .name
            
150             .Stats.GLD = .Stats.GLD - Oferta
152             Call WriteUpdateGold(UserIndex)
            
154             If Subasta.TiempoRestanteSubasta < 60 Then
156                 Call SendData(SendTarget.ToAll, 0, PrepareMessageConsoleMsg("Oferta mejorada por: " & .name & " (Ofrece " & PonerPuntos(Oferta) & " monedas de oro) - Tiempo Extendido. Escribe /SUBASTA para mas informaciín.", FontTypeNames.FONTTYPE_SUBASTA))
158                 Call LogearEventoDeSubasta(.name & ": Mejoro la oferta en el ultimo minuto ofreciendo " & PonerPuntos(Oferta) & " monedas.")
160                 Subasta.TiempoRestanteSubasta = Subasta.TiempoRestanteSubasta + 30
                Else
162                 Call SendData(SendTarget.ToAll, 0, PrepareMessageConsoleMsg("Oferta mejorada por: " & .name & " (Ofrece " & PonerPuntos(Oferta) & " monedas de oro). Escribe /SUBASTA para mas informaciín.", FontTypeNames.FONTTYPE_SUBASTA))
164                 Call LogearEventoDeSubasta(.name & ": Mejoro la oferta ofreciendo " & PonerPuntos(Oferta) & " monedas.")
166                 Subasta.HuboOferta = True
168                 Subasta.PosibleCancelo = False

                End If

            Else
170             Call WriteConsoleMsg(UserIndex, "No posees esa cantidad de oro.", FontTypeNames.FONTTYPE_INFOIAO)

            End If

            'If we got here then packet is complete, copy data back to original queue
172         Call .incomingData.CopyBuffer(Buffer)

        End With
    
ErrHandler:

        Dim Error As Long

174     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
176     Set Buffer = Nothing
    
178     If Error <> 0 Then Err.raise Error

End Sub

Private Sub HandleGlobalMessage(ByVal UserIndex As Integer)

        'Author: Pablo Mercavides
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
        
        Dim TActual As Long
        Dim ElapsedTime As Long

        TActual = GetTickCount()
        ElapsedTime = TActual - UserList(UserIndex).Counters.MensajeGlobal
                
        On Error GoTo ErrHandler

        With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadByte
        
            Dim chat As String

110         chat = Buffer.ReadASCIIString()

112         If .flags.Silenciado = 1 Then
114             Call WriteLocaleMsg(UserIndex, "110", FontTypeNames.FONTTYPE_VENENO, .flags.MinutosRestantes)
                'Call WriteConsoleMsg(UserIndex, "Los administradores te han impedido hablar durante los proximos " & .flags.MinutosRestantes & " minutos debido a tu comportamiento.", FontTypeNames.FONTTYPE_VENENO)
            ElseIf ElapsedTime < IntervaloMensajeGlobal Then
                Call WriteConsoleMsg(UserIndex, "No puedes escribir mensajes globales tan rápido.", FontTypeNames.FONTTYPE_WARNING)
            Else
                UserList(UserIndex).Counters.MensajeGlobal = TActual
116                 If EstadoGlobal Then
118                     If LenB(chat) <> 0 Then
                        'Analize chat...
120                         Call Statistics.ParseChat(chat)

                        ' WyroX: Foto-denuncias - Push message
                        Dim i As Integer
                        For i = 1 To UBound(.flags.ChatHistory) - 1
                            .flags.ChatHistory(i) = .flags.ChatHistory(i + 1)
                        Next
                        .flags.ChatHistory(UBound(.flags.ChatHistory)) = chat

122                         Call modSendData.SendData(SendTarget.ToAll, 0, PrepareMessageConsoleMsg("[" & .name & "] " & chat, FontTypeNames.FONTTYPE_GLOBAL))

                        'TODO : Con la 0.12.1 se debe definir si esto vuelve o se borra (/CMSG overhead)
                        'Call SendData(SendTarget.ToPCArea, UserIndex, UserList(UserIndex).Pos.map, "||" & vbBlue & "í< " & rData & " >í" & CStr(UserList(UserIndex).Char.CharIndex))
                    End If

                Else
124                     Call WriteConsoleMsg(UserIndex, "El global se encuentra Desactivado.", FontTypeNames.FONTTYPE_GLOBAL)

                End If

            End If
    
126         Call .incomingData.CopyBuffer(Buffer)

        End With
    
ErrHandler:

        Dim Error As Long

128     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
130     Set Buffer = Nothing
    
132     If Error <> 0 Then Err.raise Error

End Sub

Public Sub HandleGlobalOnOff(ByVal UserIndex As Integer)
        
        On Error GoTo HandleGlobalOnOff_Err
        

        'Author: Pablo Mercavides
100     With UserList(UserIndex)
            'Remove Packet ID
102         Call .incomingData.ReadByte
        
104         If Not EsGM(UserIndex) Then Exit Sub
106         Call LogGM(.name, "/GLOBAL")
        
108         If EstadoGlobal = False Then
110             Call SendData(SendTarget.ToAll, 0, PrepareMessageConsoleMsg("Servidor> Chat general habilitado. Escribe" & Chr(34) & "/CONSOLA" & Chr(34) & " o " & Chr(34) & ";" & Chr(34) & " y su mensaje para utilizarlo.", FontTypeNames.FONTTYPE_SERVER))
112             EstadoGlobal = True
            Else
114             Call SendData(SendTarget.ToAll, 0, PrepareMessageConsoleMsg("Servidor> Chat General deshabilitado.", FontTypeNames.FONTTYPE_SERVER))
116             EstadoGlobal = False

            End If
        
        End With

        
        Exit Sub

HandleGlobalOnOff_Err:
118     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleGlobalOnOff", Erl)
120     Resume Next
        
End Sub

Public Sub SilenciarUserName(ByVal SilencioUserIndex As Integer, ByVal UserName As String, ByVal Time As Byte)
        
        On Error GoTo SilenciarUserName_Err
        

        'Author: Pablo Mercavides
        Dim tUser     As Integer

        Dim userPriv  As Byte

        Dim cantPenas As Byte

        Dim rank      As Integer
    
100     If InStrB(UserName, "+") Then
102         UserName = Replace(UserName, "+", " ")

        End If
    
104     tUser = NameIndex(UserName)
    
106     rank = PlayerType.Admin Or PlayerType.Dios Or PlayerType.SemiDios Or PlayerType.Consejero
    
108     With UserList(SilencioUserIndex)

110         If tUser <= 0 Then
112             Call WriteConsoleMsg(SilencioUserIndex, "El usuario no esta online, pena grabada en el charfile.", FontTypeNames.FONTTYPE_TALK)
            
114             If FileExist(CharPath & UserName & ".chr", vbNormal) Then
116                 userPriv = UserDarPrivilegioLevel(UserName)
                
118                 If (userPriv And rank) > (.flags.Privilegios And rank) Then
120                     Call WriteConsoleMsg(SilencioUserIndex, "No podes silenciar a al alguien de mayor jerarquia.", FontTypeNames.FONTTYPE_INFO)
                    Else
                        
                        'ponemos el flag de silencio a 1 y los minutos
122                     Call WriteVar(CharPath & UserName & ".chr", "FLAGS", "Silenciado", "1")
124                     Call WriteVar(CharPath & UserName & ".chr", "FLAGS", "MinutosRestantes", Time)
126                     Call WriteVar(CharPath & UserName & ".chr", "FLAGS", "SegundosPasados", "0")
                        
                        'ponemos la pena
128                     cantPenas = val(GetVar(CharPath & UserName & ".chr", "PENAS", "Cant"))
130                     Call WriteVar(CharPath & UserName & ".chr", "PENAS", "Cant", cantPenas + 1)
132                     Call WriteVar(CharPath & UserName & ".chr", "PENAS", "P" & cantPenas + 1, LCase$(.name) & ": Silenciado durante " & Time & " minutos. " & Date & " ")

                    End If

                Else
134                 Call WriteConsoleMsg(SilencioUserIndex, "El pj " & UserName & " no existe.", FontTypeNames.FONTTYPE_INFO)

                End If

            Else

136             If (UserList(tUser).flags.Privilegios And rank) > (.flags.Privilegios And rank) Then
138                 Call WriteConsoleMsg(SilencioUserIndex, "No podes silenciar a al alguien de mayor jerarquia.", FontTypeNames.FONTTYPE_INFO)

                End If
            
140             Call SendData(SendTarget.ToAdmins, 0, PrepareMessageConsoleMsg("Servidor> " & .name & " ha silenciado a " & UserList(tUser).name & ", por " & Time & " minutos.", FontTypeNames.FONTTYPE_SERVER))
            
                'Ponemos el flag de ban a 1
142             UserList(tUser).flags.Silenciado = 1
144             UserList(tUser).flags.MinutosRestantes = Time
146             UserList(tUser).flags.SegundosPasados = 0
148             Call LogGM(.name, "Silencio a " & UserName)
            
                'ponemos el flag de silencio
150             Call WriteVar(CharPath & UserName & ".chr", "FLAGS", "Silenciado", "1")
152             Call WriteVar(CharPath & UserName & ".chr", "FLAGS", "MinutosRestantes", Time)
154             Call WriteVar(CharPath & UserName & ".chr", "FLAGS", "SegundosPasados", "0")
                'ponemos la pena
156             cantPenas = val(GetVar(CharPath & UserName & ".chr", "PENAS", "Cant"))
158             Call WriteVar(CharPath & UserName & ".chr", "PENAS", "Cant", cantPenas + 1)
160             Call WriteVar(CharPath & UserName & ".chr", "PENAS", "P" & cantPenas + 1, LCase$(.name) & ": silencio por " & Time & " minutos. " & Date & " " & Time)
                'Call WriteConsoleMsg(tUser, "Has sido silenciado durante " & Time & " minutos.", FontTypeNames.FONTTYPE_INFO)
162             Call WriteLocaleMsg(tUser, "11", FontTypeNames.FONTTYPE_VENENO)

            End If

        End With

        
        Exit Sub

SilenciarUserName_Err:
164     Call RegistrarError(Err.Number, Err.Description, "Protocol.SilenciarUserName", Erl)
166     Resume Next
        
End Sub

Private Sub HandleCrearCuenta(ByVal UserIndex As Integer)

        'Author: Pablo Mercavides
100     If UserList(UserIndex).incomingData.Length < 18 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If

        On Error GoTo ErrHandler

        'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
        Dim Buffer As New clsByteQueue

104     Call Buffer.CopyBuffer(UserList(UserIndex).incomingData)
    
        'Remove packet ID
106     Call Buffer.ReadByte

        Dim CuentaEmail    As String

        Dim CuentaPassword As String
    
108     CuentaEmail = Buffer.ReadASCIIString()
110     CuentaPassword = Buffer.ReadASCIIString()
  
112     If Not CheckMailString(CuentaEmail) Then
114         Call WriteErrorMsg(UserIndex, "Email inválido.")
        
116         Call CloseSocket(UserIndex)
            Exit Sub

        End If

118     If Not CuentaExiste(CuentaEmail) Then

120         Call SaveNewAccount(UserIndex, CuentaEmail, SDesencriptar(CuentaPassword))
    
122         Call EnviarCorreo(CuentaEmail)
124         Call WriteShowFrmLogear(UserIndex)
126         Call WriteShowMessageBox(UserIndex, "Cuenta creada. Se ha enviado un código de validación a su email, debe activar la cuenta antes de poder usarla. Recuerde revisar SPAM en caso de no encontrar el mail.")
        
128         Call UserList(UserIndex).incomingData.CopyBuffer(Buffer)
        Else
130         Call WriteShowMessageBox(UserIndex, "El email ya está en uso.")
        
132         Call CloseSocket(UserIndex)

        End If
    
ErrHandler:

        Dim Error As Long

134     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
136     Set Buffer = Nothing
    
138     If Error <> 0 Then Err.raise Error

End Sub

Private Sub HandleValidarCuenta(ByVal UserIndex As Integer)

        'Author: Pablo Mercavides
100     If UserList(UserIndex).incomingData.Length < 7 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If

        On Error GoTo ErrHandler

        'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
        Dim Buffer As New clsByteQueue

104     Call Buffer.CopyBuffer(UserList(UserIndex).incomingData)
    
        'Remove packet ID
106     Call Buffer.ReadByte

        Dim CuentaEmail    As String

        Dim ValidacionCode As String
    
108     CuentaEmail = Buffer.ReadASCIIString()
110     ValidacionCode = Buffer.ReadASCIIString()

112     If Not CheckMailString(CuentaEmail) Then
114         Call WriteShowFrmLogear(UserIndex)
116         Call WriteShowMessageBox(UserIndex, "Email inválido.")
        
118         Call CloseSocket(UserIndex)
            Exit Sub

        End If
    
120     If CuentaExiste(CuentaEmail) Then
122         If Not ObtenerValidacion(CuentaEmail) Then
124             If UCase$(ObtenerCodigo(CuentaEmail)) = UCase$(ValidacionCode) Then
126                 If Database_Enabled Then
128                     Call ValidarCuentaDatabase(CuentaEmail)
                    Else
130                     Call WriteVar(CuentasPath & LCase$(CuentaEmail) & ".act", "INIT", "Activada", "1")

                    End If

132                 Call WriteShowFrmLogear(UserIndex)
134                 Call WriteShowMessageBox(UserIndex, "Cuenta activada con éxito, ya puede ingresar.")
                Else
136                 Call WriteShowFrmLogear(UserIndex)
138                 Call WriteShowMessageBox(UserIndex, "¡Código de activación inválido!")

                End If

            Else
140             Call WriteShowFrmLogear(UserIndex)
142             Call WriteShowMessageBox(UserIndex, "La cuenta ya ha sido validada anteriormente.")

            End If

        Else
144         Call WriteShowFrmLogear(UserIndex)
146         Call WriteShowMessageBox(UserIndex, "La cuenta no existe.")

        End If
    
        'If we got here then packet is complete, copy data back to original queue
148     Call UserList(UserIndex).incomingData.CopyBuffer(Buffer)
    
ErrHandler:

        Dim Error As Long

150     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
152     Set Buffer = Nothing
    
154     If Error <> 0 Then Err.raise Error

End Sub

Private Sub HandleReValidarCuenta(ByVal UserIndex As Integer)

        'Author: Pablo Mercavides
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If

        On Error GoTo ErrHandler

        'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
        Dim Buffer As New clsByteQueue

104     Call Buffer.CopyBuffer(UserList(UserIndex).incomingData)
    
        'Remove packet ID
106     Call Buffer.ReadByte

        Dim UserCuenta As String

        Dim Useremail  As String
    
108     UserCuenta = Buffer.ReadASCIIString()
    
110     Useremail = Buffer.ReadASCIIString()
    
        'WyroX: TODO:
        'Saco este paquete, por el momento
        Exit Sub
    
112     If Not AsciiValidos(UserCuenta) Then
114         Call WriteShowFrmLogear(UserIndex)
116         Call WriteShowMessageBox(UserIndex, "Nombre invalido.")
        
118         Call CloseSocket(UserIndex)
            Exit Sub

        End If
    
        'If Useremail <> ObtenerEmail(UserCuenta) Then
120     Call WriteShowFrmLogear(UserIndex)
122     Call WriteShowMessageBox(UserIndex, "El email introducido no coincide con el email registrador.")
    
124     Call CloseSocket(UserIndex)
        Exit Sub
        'End If
    
126     If CuentaExiste(UserCuenta) Then
128         If ObtenerValidacion(UserCuenta) = 0 Then
                'Call EnviarCorreo(UserCuenta, ObtenerEmail(UserCuenta))
130             Call WriteShowFrmLogear(UserIndex)
132             Call WriteShowMessageBox(UserIndex, "Se ha enviado el mail de validación a la dirección designada cuando se creo la cuenta.")
                
            Else
134             Call WriteShowFrmLogear(UserIndex)
136             Call WriteShowMessageBox(UserIndex, "La cuenta ya ha sido validada anteriormente.")

            End If

        Else
138         Call WriteShowFrmLogear(UserIndex)
140         Call WriteShowMessageBox(UserIndex, "La cuenta no existe.")

        End If
    
        'If we got here then packet is complete, copy data back to original queue
142     Call UserList(UserIndex).incomingData.CopyBuffer(Buffer)
    
ErrHandler:

        Dim Error As Long

144     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
146     Set Buffer = Nothing
    
148     If Error <> 0 Then Err.raise Error

End Sub

Private Sub HandleIngresarConCuenta(ByVal UserIndex As Integer)

        Dim Version As String

        'Author: Pablo Mercavides
100     If UserList(UserIndex).incomingData.Length < 16 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If

        On Error GoTo ErrHandler

        'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
        Dim Buffer As New clsByteQueue
104     Call Buffer.CopyBuffer(UserList(UserIndex).incomingData)
    
        'Remove packet ID
106     Call Buffer.ReadByte

        Dim CuentaEmail    As String
        Dim CuentaPassword As String
        Dim MacAddress     As String
        Dim HDserial       As Long
        Dim MD5            As String
    
108     CuentaEmail = Buffer.ReadASCIIString()
110     CuentaPassword = Buffer.ReadASCIIString()
112     Version = CStr(Buffer.ReadByte()) & "." & CStr(Buffer.ReadByte()) & "." & CStr(Buffer.ReadByte())
114     MacAddress = Buffer.ReadASCIIString()
116     HDserial = Buffer.ReadLong()
117     MD5 = Buffer.ReadASCIIString()
    
        'If we got here then packet is complete, copy data back to original queue
118     Call UserList(UserIndex).incomingData.CopyBuffer(Buffer)
    
120     If Not VersionOK(Version) Then
122         Call WriteShowMessageBox(UserIndex, "Esta versión del juego es obsoleta, la versión correcta es la " & ULTIMAVERSION & ". Ejecute el launcher por favor.")
124         Call CloseSocket(UserIndex)
            Exit Sub

        End If

126     If EntrarCuenta(UserIndex, CuentaEmail, CuentaPassword, MacAddress, HDserial, MD5) Then
128         Call WritePersonajesDeCuenta(UserIndex)
130         Call WriteMostrarCuenta(UserIndex)
        Else
        
132         Call CloseSocket(UserIndex)
            Exit Sub

        End If
    
        Exit Sub
    
ErrHandler:

        Dim Error As Long

134     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
136     Set Buffer = Nothing
    
138     If Error <> 0 Then Err.raise Error

End Sub

Private Sub HandleBorrarPJ(ByVal UserIndex As Integer)

        'Author: Pablo Mercavides
100     If UserList(UserIndex).incomingData.Length < 17 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If

        On Error GoTo ErrHandler

        'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
        Dim Buffer As New clsByteQueue
104     Call Buffer.CopyBuffer(UserList(UserIndex).incomingData)
    
        'Remove packet ID
106     Call Buffer.ReadByte

        Dim UserDelete     As String
        Dim CuentaEmail    As String
        Dim CuentaPassword As String
        Dim MacAddress     As String
        Dim HDserial       As Long
        Dim MD5            As String
        Dim Version        As String
    
108     UserDelete = Buffer.ReadASCIIString()
110     CuentaEmail = Buffer.ReadASCIIString()
112     CuentaPassword = Buffer.ReadASCIIString()
114     Version = CStr(Buffer.ReadByte()) & "." & CStr(Buffer.ReadByte()) & "." & CStr(Buffer.ReadByte())
116     MacAddress = Buffer.ReadASCIIString()
118     HDserial = Buffer.ReadLong()
120     MD5 = Buffer.ReadASCIIString()
    
        'If we got here then packet is complete, copy data back to original queue
122     Call UserList(UserIndex).incomingData.CopyBuffer(Buffer)
    
124     If Not VersionOK(Version) Then
126         Call WriteShowMessageBox(UserIndex, "Esta versión del juego es obsoleta, la versión correcta es la " & ULTIMAVERSION & ". Ejecute el launcher por favor.")
128         Call CloseSocket(UserIndex)
            Exit Sub
        End If
    
130     If Not EntrarCuenta(UserIndex, CuentaEmail, CuentaPassword, MacAddress, HDserial, MD5) Then
132         Call CloseSocket(UserIndex)
            Exit Sub
        End If
    
134     If Not CheckUserAccount(UserDelete, UserList(UserIndex).AccountId) Then
136         Call LogHackAttemp(CuentaEmail & "[" & UserList(UserIndex).ip & "] intentó borrar el pj " & UserDelete)
138         Call CloseSocket(UserIndex)
            Exit Sub
        End If
    
        ' Si está online el personaje a borrar, lo kickeo para prevenir dupeos.
140     Dim targetUserIndex As Integer: targetUserIndex = NameIndex(UserDelete)
142     If targetUserIndex > 0 Then
144         Call LogHackAttemp("Se trató de eliminar al personaje " & UserDelete & " cuando este estaba conectado desde la IP " & UserList(UserIndex).ip)
146         Call CloseSocket(targetUserIndex)
        End If
    
148     If Database_Enabled Then
150         Call BorrarUsuarioDatabase(UserDelete)
        
        Else

152         If PersonajeExiste(UserDelete) Then
154             Call FileCopy(CharPath & UserDelete & ".chr", DeletePath & UCase$(UserDelete) & ".chr")
156             Call BorrarPJdeCuenta(UserDelete)
        
                'Call WriteShowMessageBox(UserIndex, "El personaje " & UserDelete & " a sido borrado de la cuenta.")
158             Call Kill(CharPath & UserDelete & ".chr")

            End If

        End If
    
160     Call WritePersonajesDeCuenta(UserIndex)
  
        Exit Sub
    
ErrHandler:

        Dim Error As Long

162     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
164     Set Buffer = Nothing
    
166     If Error <> 0 Then Err.raise Error

End Sub

Private Sub HandleBorrandoCuenta(ByVal UserIndex As Integer)

        'Author: Pablo Mercavides
100     If UserList(UserIndex).incomingData.Length < 7 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If

        On Error GoTo ErrHandler

        'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
        Dim Buffer As New clsByteQueue

104     Call Buffer.CopyBuffer(UserList(UserIndex).incomingData)
    
        'Remove packet ID
106     Call Buffer.ReadByte

        Dim AccountDelete As String

        Dim UserMail      As String

        Dim Password      As String
    
108     AccountDelete = Buffer.ReadASCIIString()
110     UserMail = Buffer.ReadASCIIString()
112     Password = Buffer.ReadASCIIString()
    
114     If CuentaExiste(AccountDelete) Then
    
116         If Not AsciiValidos(AccountDelete) Then
118             Call WriteShowFrmLogear(UserIndex)
120             Call WriteShowMessageBox(UserIndex, "Cuenta invalida.")
            
122             Call CloseSocket(UserIndex)
                Exit Sub

            End If
        
124         If UserMail <> ObtenerEmail(AccountDelete) Then
126             Call WriteShowFrmLogear(UserIndex)
128             Call WriteShowMessageBox(UserIndex, "El email introducido no coincide con el email registrador.")
            
130             Call CloseSocket(UserIndex)
                Exit Sub

            End If
        
132         If True Then ' Desactivado
134             Call WriteShowFrmLogear(UserIndex)
136             Call WriteShowMessageBox(UserIndex, "La contraseña introducida no es correcta.")
            
138             Call CloseSocket(UserIndex)
                Exit Sub

            End If

140         Call BorrarCuenta(AccountDelete)
142         Call WriteShowFrmLogear(UserIndex)
144         Call WriteShowMessageBox(UserIndex, "La cuenta ha sido borrada.")
        
        Else
146         Call WriteShowFrmLogear(UserIndex)
148         Call WriteShowMessageBox(UserIndex, "La cuenta ingresada no existe.")
        
150         Call CloseSocket(UserIndex)
            Exit Sub

        End If
    
        'If we got here then packet is complete, copy data back to original queue
152     Call UserList(UserIndex).incomingData.CopyBuffer(Buffer)
    
ErrHandler:

        Dim Error As Long

154     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
156     Set Buffer = Nothing
    
158     If Error <> 0 Then Err.raise Error

End Sub

Private Sub HandleRecuperandoContraseña(ByVal UserIndex As Integer)

        'Author: Pablo Mercavides
100     If UserList(UserIndex).incomingData.Length < 5 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If

        On Error GoTo ErrHandler

        'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
        Dim Buffer As New clsByteQueue

104     Call Buffer.CopyBuffer(UserList(UserIndex).incomingData)
    
        'Remove packet ID
106     Call Buffer.ReadByte

        Dim AcountDelete As String

        Dim UserMail     As String
    
108     AcountDelete = Buffer.ReadASCIIString()
110     UserMail = Buffer.ReadASCIIString()
    
112     If FileExist(CuentasPath & UCase$(AcountDelete) & ".act", vbNormal) Then
    
114         If Not AsciiValidos(AcountDelete) Then
116             Call WriteShowFrmLogear(UserIndex)
118             Call WriteShowMessageBox(UserIndex, "Cuenta invalida.")
            
            
120             Call CloseSocket(UserIndex)
                Exit Sub

            End If

122         If UserMail <> ObtenerEmail(AcountDelete) Then
124             Call WriteShowFrmLogear(UserIndex)
126             Call WriteShowMessageBox(UserIndex, "El email introducido no coincide con el email registrador.")
            
128             Call CloseSocket(UserIndex)
                Exit Sub

            End If
        
130         If EnviarCorreoRecuperacion(AcountDelete, ObtenerEmail(AcountDelete)) Then
132             Call WriteShowFrmLogear(UserIndex)
134             Call WriteShowMessageBox(UserIndex, "La contraseña de la cuenta a sido enviada por email a la direccion registrada.")
            Else
136             Call WriteShowFrmLogear(UserIndex)
138             Call WriteShowMessageBox(UserIndex, "Se ha provocado un error al recuperar la clave, reintente mas tarde.")

            End If

        Else
140         Call WriteShowFrmLogear(UserIndex)
142         Call WriteShowMessageBox(UserIndex, "La cuenta ingresada no existe.")
        
144         Call CloseSocket(UserIndex)
            Exit Sub

        End If
    
        'If we got here then packet is complete, copy data back to original queue
146     Call UserList(UserIndex).incomingData.CopyBuffer(Buffer)
    
ErrHandler:

        Dim Error As Long

148     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
150     Set Buffer = Nothing
    
152     If Error <> 0 Then Err.raise Error

End Sub

Public Sub WritePersonajesDeCuenta(ByVal UserIndex As Integer)
        'Author: Pablo Mercavides
    
        Dim UserCuenta                     As String

        Dim CantPersonajes                 As Byte

        Dim Personaje(1 To MAX_PERSONAJES) As PersonajeCuenta

        Dim donador                        As Boolean

        Dim i                              As Byte
    
100     UserCuenta = UserList(UserIndex).Cuenta
    
102     donador = DonadorCheck(UserCuenta)

104     If Database_Enabled Then
106         CantPersonajes = GetPersonajesCuentaDatabase(UserList(UserIndex).AccountId, Personaje)
        Else
108         CantPersonajes = ObtenerCantidadDePersonajes(UserCuenta)
        
110         For i = 1 To CantPersonajes
112             Personaje(i).nombre = ObtenerNombrePJ(UserCuenta, i)
114             Personaje(i).Cabeza = ObtenerCabeza(Personaje(i).nombre)
116             Personaje(i).clase = ObtenerClase(Personaje(i).nombre)
118             Personaje(i).cuerpo = ObtenerCuerpo(Personaje(i).nombre)
120             Personaje(i).Mapa = ReadField(1, ObtenerMapa(Personaje(i).nombre), Asc("-"))
122             Personaje(i).nivel = ObtenerNivel(Personaje(i).nombre)
124             Personaje(i).Status = ObtenerCriminal(Personaje(i).nombre)
126             Personaje(i).Casco = ObtenerCasco(Personaje(i).nombre)
128             Personaje(i).Escudo = ObtenerEscudo(Personaje(i).nombre)
130             Personaje(i).Arma = ObtenerArma(Personaje(i).nombre)
132             Personaje(i).ClanIndex = GetUserGuildIndexCharfile(Personaje(i).nombre)
134         Next i

        End If
    
        On Error GoTo ErrHandler

136     With UserList(UserIndex).outgoingData
138         Call .WriteByte(ServerPacketID.PersonajesDeCuenta)
140         Call .WriteByte(CantPersonajes)
            
142         For i = 1 To CantPersonajes
144             Call .WriteASCIIString(Personaje(i).nombre)
146             Call .WriteByte(Personaje(i).nivel)
148             Call .WriteInteger(Personaje(i).Mapa)
150             Call .WriteInteger(Personaje(i).cuerpo)
152             Call .WriteInteger(Personaje(i).Cabeza)
154             Call .WriteByte(Personaje(i).Status)
156             Call .WriteByte(Personaje(i).clase)
158             Call .WriteInteger(Personaje(i).Casco)
160             Call .WriteInteger(Personaje(i).Escudo)
162             Call .WriteInteger(Personaje(i).Arma)
164             Call .WriteASCIIString(modGuilds.GuildName(Personaje(i).ClanIndex))
166         Next i
            
168         Call .WriteByte(IIf(donador, 1, 0))

        End With
    
        Exit Sub

ErrHandler:

170     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
172         Call FlushBuffer(UserIndex)
174         Resume
        End If

End Sub

Private Sub HandleCuentaRegresiva(ByVal UserIndex As Integer)

        'Author: Pablo Mercavides
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadInteger
        
            Dim Seconds As Byte
        
110         Seconds = Buffer.ReadByte()

112         If Not .flags.Privilegios And PlayerType.user Then
114             CuentaRegresivaTimer = Seconds
116             Call SendData(SendTarget.ToAll, 0, PrepareMessageConsoleMsg("íEmpezando cuenta regresiva desde: " & Seconds & " segundos...!", FontTypeNames.FONTTYPE_GUILD))
        
                'If we got here then packet is complete, copy data back to original queue
            End If

118         Call .incomingData.CopyBuffer(Buffer)

        End With
    
ErrHandler:

        Dim Error As Long

120     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
122     Set Buffer = Nothing
    
124     If Error <> 0 Then Err.raise Error

End Sub

Private Sub HandlePossUser(ByVal UserIndex As Integer)

        'Author: Pablo Mercavides
100     If UserList(UserIndex).incomingData.Length < 4 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadInteger
        
            Dim UserName As String
        
110         UserName = Buffer.ReadASCIIString()
        
112         If Not .flags.Privilegios And PlayerType.user Then
        
114             If Database_Enabled Then
116                 If Not SetPositionDatabase(UserName, UserList(UserIndex).Pos.Map, UserList(UserIndex).Pos.X, UserList(UserIndex).Pos.Y) Then
118                     Call WriteConsoleMsg(UserIndex, "El usuario " & UserName & " no existe.", FontTypeNames.FONTTYPE_INFO)
                    End If
                Else
120                 Call WriteVar(CharPath & UCase$(UserName) & ".chr", "INIT", "Position", UserList(UserIndex).Pos.Map & "-" & UserList(UserIndex).Pos.X & "-" & UserList(UserIndex).Pos.Y)
                End If

122             Call WriteConsoleMsg(UserIndex, "Servidor> Acción realizada con exito! La nueva posicion de " & UserName & "es: " & UserList(UserIndex).Pos.Map & "-" & UserList(UserIndex).Pos.X & "-" & UserList(UserIndex).Pos.Y & "...", FontTypeNames.FONTTYPE_INFO)

                ' Call SendData(UserIndex, UserIndex, PrepareMessageConsoleMsg("Acciín realizada con exito! La nueva posicion de " & UserName & "es: " & UserList(UserIndex).Pos.Map & "-" & UserList(UserIndex).Pos.X & "-" & UserList(UserIndex).Pos.y & "...", FontTypeNames.FONTTYPE_SERVER))
            End If
        
            'If we got here then packet is complete, copy data back to original queue
124         Call .incomingData.CopyBuffer(Buffer)

        End With
    
ErrHandler:

        Dim Error As Long

126     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
128     Set Buffer = Nothing
    
130     If Error <> 0 Then Err.raise Error

End Sub

Private Sub HandleDuel(ByVal UserIndex As Integer)

100     If UserList(UserIndex).incomingData.Length < 8 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub
        End If
    
        On Error GoTo ErrHandler
        
        Dim Players As String
        Dim Bet As Long

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As clsByteQueue
106         Set Buffer = New clsByteQueue
108         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
110         Call Buffer.ReadInteger

            Players = Buffer.ReadASCIIString
            Bet = Buffer.ReadLong
        
            'If we got here then packet is complete, copy data back to original queue
112         Call .incomingData.CopyBuffer(Buffer)

            Call CrearReto(UserIndex, Players, Bet)

        End With
    
        Exit Sub
    
ErrHandler:

142     Dim Error As Long: Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
144     Set Buffer = Nothing
    
146     If Error <> 0 Then Err.raise Error

End Sub

Private Sub HandleAcceptDuel(ByVal UserIndex As Integer)

100     If UserList(UserIndex).incomingData.Length < 4 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub
        End If
    
        On Error GoTo ErrHandler
        
        Dim Offerer As String

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As clsByteQueue
106         Set Buffer = New clsByteQueue
108         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
110         Call Buffer.ReadInteger

            Offerer = Buffer.ReadASCIIString
        
            'If we got here then packet is complete, copy data back to original queue
112         Call .incomingData.CopyBuffer(Buffer)

            Call AceptarReto(UserIndex, Offerer)

        End With
    
        Exit Sub
    
ErrHandler:

142     Dim Error As Long: Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
144     Set Buffer = Nothing
    
146     If Error <> 0 Then Err.raise Error

End Sub

Private Sub HandleCancelDuel(ByVal UserIndex As Integer)

    With UserList(UserIndex)

        .incomingData.ReadInteger

        If .flags.SolicitudReto.estado <> SolicitudRetoEstado.Libre Then
            Call CancelarSolicitudReto(UserIndex, .name & " ha cancelado la solicitud.")

        ElseIf .flags.AceptoReto > 0 Then
            Call CancelarSolicitudReto(.flags.AceptoReto, .name & " ha cancelado su admisión.")
        End If

    End With

End Sub

Private Sub HandleQuitDuel(ByVal UserIndex As Integer)

    With UserList(UserIndex)

        .incomingData.ReadInteger

        If .flags.EnReto Then
            Call AbandonarReto(UserIndex)
        End If

    End With

End Sub

Public Sub WriteGoliathInit(ByVal UserIndex As Integer)

        'Author: Pablo Mercavides
        On Error GoTo ErrHandler

100     With UserList(UserIndex).outgoingData
102         Call .WriteByte(ServerPacketID.Goliath)
104         Call .WriteLong(UserList(UserIndex).Stats.Banco)
106         Call .WriteByte(UserList(UserIndex).BancoInvent.NroItems)

        End With

        Exit Sub

ErrHandler:

108     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
110         Call FlushBuffer(UserIndex)
112         Resume
        End If

End Sub

Public Sub WriteShowFrmLogear(ByVal UserIndex As Integer)

        'Author: Pablo Mercavides
        On Error GoTo ErrHandler

100     With UserList(UserIndex).outgoingData
102         Call .WriteByte(ServerPacketID.ShowFrmLogear)

        End With

        Exit Sub

ErrHandler:

104     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
106         Call FlushBuffer(UserIndex)
108         Resume
        End If

End Sub

Public Sub WriteShowFrmMapa(ByVal UserIndex As Integer)

        'Author: Pablo Mercavides
        On Error GoTo ErrHandler

100     With UserList(UserIndex).outgoingData
102         Call .WriteByte(ServerPacketID.ShowFrmMapa)
        
104         If UserList(UserIndex).donador.activo = 1 Then
106             Call .WriteInteger(ExpMult * UserList(UserIndex).flags.ScrollExp * 1.1)
            Else
108             Call .WriteInteger(ExpMult * UserList(UserIndex).flags.ScrollExp)

            End If

110         Call .WriteInteger(OroMult * UserList(UserIndex).flags.ScrollOro)

        End With

        Exit Sub

ErrHandler:

112     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
114         Call FlushBuffer(UserIndex)
116         Resume
        End If

End Sub

Private Sub HandleNieveToggle(ByVal UserIndex As Integer)
        
        On Error GoTo HandleNieveToggle_Err
        

        'Author: Pablo Mercavides
100     With UserList(UserIndex)
102         Call .incomingData.ReadInteger 'Remove packet ID
        
104         If .flags.Privilegios And (PlayerType.user Or PlayerType.Consejero) Then Exit Sub
        
106         Call LogGM(.name, "/NIEVE")
108         Nebando = Not Nebando
        
110         Call SendData(SendTarget.ToAll, 0, PrepareMessageNevarToggle())

        End With

        
        Exit Sub

HandleNieveToggle_Err:
112     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleNieveToggle", Erl)
114     Resume Next
        
End Sub

Private Sub HandleNieblaToggle(ByVal UserIndex As Integer)
        
        On Error GoTo HandleNieblaToggle_Err
        

        'Author: Pablo Mercavides
100     With UserList(UserIndex)
102         Call .incomingData.ReadInteger 'Remove packet ID

104         If .flags.Privilegios And (PlayerType.user Or PlayerType.Consejero) Then Exit Sub
        
106         Call LogGM(.name, "/NIEBLA")
108         Call ResetMeteo
            'Nieblando = Not Nieblando
        
            ' Call SendData(SendTarget.ToAll, 0, PrepareMessageNieblandoToggle())
        End With

        
        Exit Sub

HandleNieblaToggle_Err:
110     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleNieblaToggle", Erl)
112     Resume Next
        
End Sub

Private Sub HandleTransFerGold(ByVal UserIndex As Integer)
        'Author: Pablo Mercavides

100     If UserList(UserIndex).incomingData.Length < 8 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
            'Remove packet ID
108         Call Buffer.ReadInteger
        
            Dim UserName As String

            Dim Cantidad As Long

            Dim tUser    As Integer
        
110         Cantidad = Buffer.ReadLong()
112         UserName = Buffer.ReadASCIIString()
        
            'If we got here then packet is complete, copy data back to original queue
114         Call .incomingData.CopyBuffer(Buffer)

            ' WyroX: Chequeos de seguridad... Estos chequeos ya se hacen en el cliente, pero si no se hacen se puede duplicar oro...

            ' Cantidad válida?
            If Cantidad <= 0 Then Exit Sub

            ' Tiene el oro?
            If .Stats.Banco < Cantidad Then Exit Sub
            
            If .flags.Muerto = 1 Then
                Call WriteLocaleMsg(UserIndex, "77", FontTypeNames.FONTTYPE_INFO)
                'Call WriteConsoleMsg(UserIndex, "¡¡Estás muerto!!", FontTypeNames.FONTTYPE_INFO)
                Exit Sub
            End If
        
            'Validate target NPC
            If .flags.TargetNPC = 0 Then
                Call WriteConsoleMsg(UserIndex, "Primero tenés que seleccionar un personaje, haz click izquierdo sobre él.", FontTypeNames.FONTTYPE_INFO)
                Exit Sub
            End If

            If NpcList(.flags.TargetNPC).NPCtype <> eNPCType.Banquero Then Exit Sub
            
            If Distancia(NpcList(.flags.TargetNPC).Pos, .Pos) > 10 Then
                Call WriteLocaleMsg(UserIndex, "8", FontTypeNames.FONTTYPE_INFO)
                'Call WriteConsoleMsg(UserIndex, "Estís demasiado lejos.", FontTypeNames.FONTTYPE_INFO)
                Exit Sub
            End If

116         tUser = NameIndex(UserName)

            ' Enviar a vos mismo?
            If tUser = UserIndex Then
                Call WriteChatOverHead(UserIndex, "¡No puedo enviarte oro a vos mismo!", NpcList(.flags.TargetNPC).Char.CharIndex, vbWhite)
                Exit Sub
            End If
    
118         If Not EsGM(UserIndex) Then

120             If tUser <= 0 Then
122                 If Database_Enabled Then
124                     If Not AddOroBancoDatabase(UserName, Cantidad) Then
126                         Call WriteChatOverHead(UserIndex, "El usuario no existe.", NpcList(.flags.TargetNPC).Char.CharIndex, vbWhite)
                            Exit Sub
                        End If
                    Else
                        Dim FileUser  As String
                        Dim OroenBove As Long
    
128                     FileUser = CharPath & UCase$(UserName) & ".chr"
130                     OroenBove = val(GetVar(FileUser, "STATS", "BANCO"))
132                     OroenBove = OroenBove + val(Cantidad)
    
134                     Call WriteVar(FileUser, "STATS", "BANCO", CLng(OroenBove)) 'Guardamos en bove
                    End If
                Else
140                 UserList(tUser).Stats.Banco = UserList(tUser).Stats.Banco + val(Cantidad) 'Se lo damos al otro.
                End If
                
                UserList(UserIndex).Stats.Banco = UserList(UserIndex).Stats.Banco - val(Cantidad) 'Quitamos el oro al usuario
    
142             Call WriteChatOverHead(UserIndex, "¡El envío se ha realizado con éxito! Gracias por utilizar los servicios de Finanzas Goliath", NpcList(.flags.TargetNPC).Char.CharIndex, vbWhite)
144             Call SendData(SendTarget.ToPCArea, UserIndex, PrepareMessagePlayWave("173", UserList(UserIndex).Pos.X, UserList(UserIndex).Pos.Y))
            Else
146             Call WriteChatOverHead(UserIndex, "Los administradores no pueden transferir oro.", NpcList(.flags.TargetNPC).Char.CharIndex, vbWhite)
148             Call LogGM(.name, "Quizo transferirle oro a: " & UserName)
            
            End If
        End With
    
ErrHandler:

        Dim Error As Long

150     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
152     Set Buffer = Nothing
    
154     If Error <> 0 Then Err.raise Error

End Sub

Private Sub HandleMoveItem(ByVal UserIndex As Integer)
        'Author: Pablo Mercavides

100     If UserList(UserIndex).incomingData.Length < 4 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
            'Remove packet ID
108         Call Buffer.ReadInteger
        
            Dim SlotViejo As Byte

            Dim SlotNuevo As Byte
        
110         SlotViejo = Buffer.ReadByte()
112         SlotNuevo = Buffer.ReadByte()
        
            Dim Objeto    As obj
        
            Dim Equipado  As Boolean

            Dim Equipado2 As Boolean

            Dim Equipado3 As Boolean
        
114         If (SlotViejo > .CurrentInventorySlots) Or (SlotNuevo > .CurrentInventorySlots) Then
116             Call WriteConsoleMsg(UserIndex, "Slot bloqueado.", FontTypeNames.FONTTYPE_INFOIAO)
            Else
    
118             If .Invent.Object(SlotNuevo).ObjIndex <> 0 Then
120                 Objeto.Amount = .Invent.Object(SlotViejo).Amount
122                 Objeto.ObjIndex = .Invent.Object(SlotViejo).ObjIndex
                
124                 If .Invent.Object(SlotViejo).Equipped = 1 Then
126                     Equipado = True

                    End If
                
128                 If .Invent.Object(SlotNuevo).Equipped = 1 Then
130                     Equipado2 = True

                    End If
                
                    '  If .Invent.Object(SlotNuevo).Equipped = 1 And .Invent.Object(SlotViejo).Equipped = 1 Then
                    '     Equipado3 = True
                    ' End If
                
132                 .Invent.Object(SlotViejo).ObjIndex = .Invent.Object(SlotNuevo).ObjIndex
134                 .Invent.Object(SlotViejo).Amount = .Invent.Object(SlotNuevo).Amount
                
136                 .Invent.Object(SlotNuevo).ObjIndex = Objeto.ObjIndex
138                 .Invent.Object(SlotNuevo).Amount = Objeto.Amount
                
140                 If Equipado Then
142                     .Invent.Object(SlotNuevo).Equipped = 1
                    Else
144                     .Invent.Object(SlotNuevo).Equipped = 0

                    End If
                                
146                 If Equipado2 Then
148                     .Invent.Object(SlotViejo).Equipped = 1
                    Else
150                     .Invent.Object(SlotViejo).Equipped = 0

                    End If

                End If

                'Cambiamos si alguno es un anillo
152             If .Invent.DañoMagicoEqpSlot = SlotViejo Then
154                 .Invent.DañoMagicoEqpSlot = SlotNuevo
156             ElseIf .Invent.DañoMagicoEqpSlot = SlotNuevo Then
158                 .Invent.DañoMagicoEqpSlot = SlotViejo
                End If
160             If .Invent.ResistenciaEqpSlot = SlotViejo Then
162                 .Invent.ResistenciaEqpSlot = SlotNuevo
164             ElseIf .Invent.ResistenciaEqpSlot = SlotNuevo Then
166                 .Invent.ResistenciaEqpSlot = SlotViejo
                End If
                
                'Cambiamos si alguno es un armor
168             If .Invent.ArmourEqpSlot = SlotViejo Then
170                 .Invent.ArmourEqpSlot = SlotNuevo
172             ElseIf .Invent.ArmourEqpSlot = SlotNuevo Then
174                 .Invent.ArmourEqpSlot = SlotViejo

                End If
                
                'Cambiamos si alguno es un barco
176             If .Invent.BarcoSlot = SlotViejo Then
178                 .Invent.BarcoSlot = SlotNuevo
180             ElseIf .Invent.BarcoSlot = SlotNuevo Then
182                 .Invent.BarcoSlot = SlotViejo

                End If
                 
                'Cambiamos si alguno es una montura
184             If .Invent.MonturaSlot = SlotViejo Then
186                 .Invent.MonturaSlot = SlotNuevo
188             ElseIf .Invent.MonturaSlot = SlotNuevo Then
190                 .Invent.MonturaSlot = SlotViejo

                End If
                
                'Cambiamos si alguno es un casco
192             If .Invent.CascoEqpSlot = SlotViejo Then
194                 .Invent.CascoEqpSlot = SlotNuevo
196             ElseIf .Invent.CascoEqpSlot = SlotNuevo Then
198                 .Invent.CascoEqpSlot = SlotViejo

                End If
                
                'Cambiamos si alguno es un escudo
200             If .Invent.EscudoEqpSlot = SlotViejo Then
202                 .Invent.EscudoEqpSlot = SlotNuevo
204             ElseIf .Invent.EscudoEqpSlot = SlotNuevo Then
206                 .Invent.EscudoEqpSlot = SlotViejo

                End If
                
                'Cambiamos si alguno es municiín
208             If .Invent.MunicionEqpSlot = SlotViejo Then
210                 .Invent.MunicionEqpSlot = SlotNuevo
212             ElseIf .Invent.MunicionEqpSlot = SlotNuevo Then
214                 .Invent.MunicionEqpSlot = SlotViejo

                End If
                
                'Cambiamos si alguno es un arma
216             If .Invent.WeaponEqpSlot = SlotViejo Then
218                 .Invent.WeaponEqpSlot = SlotNuevo
220             ElseIf .Invent.WeaponEqpSlot = SlotNuevo Then
222                 .Invent.WeaponEqpSlot = SlotViejo

                End If
                 
                'Cambiamos si alguno es un nudillo
224             If .Invent.NudilloSlot = SlotViejo Then
226                 .Invent.NudilloSlot = SlotNuevo
228             ElseIf .Invent.NudilloSlot = SlotNuevo Then
230                 .Invent.NudilloSlot = SlotViejo

                End If
                 
                'Cambiamos si alguno es un magico
232             If .Invent.MagicoSlot = SlotViejo Then
234                 .Invent.MagicoSlot = SlotNuevo
236             ElseIf .Invent.MagicoSlot = SlotNuevo Then
238                 .Invent.MagicoSlot = SlotViejo

                End If
                 
                'Cambiamos si alguno es una herramienta
240             If .Invent.HerramientaEqpSlot = SlotViejo Then
242                 .Invent.HerramientaEqpSlot = SlotNuevo
244             ElseIf .Invent.HerramientaEqpSlot = SlotNuevo Then
246                 .Invent.HerramientaEqpSlot = SlotViejo

                End If
            
248             If Objeto.ObjIndex = 0 Then
250                 .Invent.Object(SlotNuevo).ObjIndex = .Invent.Object(SlotViejo).ObjIndex
252                 .Invent.Object(SlotNuevo).Amount = .Invent.Object(SlotViejo).Amount
254                 .Invent.Object(SlotNuevo).Equipped = .Invent.Object(SlotViejo).Equipped
                        
256                 .Invent.Object(SlotViejo).ObjIndex = 0
258                 .Invent.Object(SlotViejo).Amount = 0
260                 .Invent.Object(SlotViejo).Equipped = 0

                End If
            
262             Call UpdateUserInv(False, UserIndex, SlotViejo)
264             Call UpdateUserInv(False, UserIndex, SlotNuevo)

            End If
    
            'If we got here then packet is complete, copy data back to original queue
266         Call .incomingData.CopyBuffer(Buffer)

        End With
    
ErrHandler:

        Dim Error As Long

268     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
270     Set Buffer = Nothing
    
272     If Error <> 0 Then Err.raise Error

End Sub

Private Sub HandleBovedaMoveItem(ByVal UserIndex As Integer)
        'Author: Pablo Mercavides

100     If UserList(UserIndex).incomingData.Length < 4 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
            'Remove packet ID
108         Call Buffer.ReadInteger
        
            Dim SlotViejo As Byte
            Dim SlotNuevo As Byte
        
110         SlotViejo = Buffer.ReadByte()
112         SlotNuevo = Buffer.ReadByte()
        
            'If we got here then packet is complete, copy data back to original queue
114         Call .incomingData.CopyBuffer(Buffer)
        
            Dim Objeto    As obj
            Dim Equipado  As Boolean
            Dim Equipado2 As Boolean
            Dim Equipado3 As Boolean
        
116         Objeto.ObjIndex = UserList(UserIndex).BancoInvent.Object(SlotViejo).ObjIndex
118         Objeto.Amount = UserList(UserIndex).BancoInvent.Object(SlotViejo).Amount
        
120         UserList(UserIndex).BancoInvent.Object(SlotViejo).ObjIndex = UserList(UserIndex).BancoInvent.Object(SlotNuevo).ObjIndex
122         UserList(UserIndex).BancoInvent.Object(SlotViejo).Amount = UserList(UserIndex).BancoInvent.Object(SlotNuevo).Amount
         
124         UserList(UserIndex).BancoInvent.Object(SlotNuevo).ObjIndex = Objeto.ObjIndex
126         UserList(UserIndex).BancoInvent.Object(SlotNuevo).Amount = Objeto.Amount
    
            'Actualizamos el banco
128         Call UpdateBanUserInv(False, UserIndex, SlotViejo)
130         Call UpdateBanUserInv(False, UserIndex, SlotNuevo)
        

        End With
    
        Exit Sub
    
ErrHandler:

        Dim Error As Long

132     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
134     Set Buffer = Nothing
    
136     If Error <> 0 Then Err.raise Error

End Sub

Private Sub HandleQuieroFundarClan(ByVal UserIndex As Integer)
    'Author: Pablo Mercavides

    If UserList(UserIndex).incomingData.Length < 2 Then
        Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
        Exit Sub

    End If
    
    On Error GoTo ErrHandler

    With UserList(UserIndex)

        'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
        Dim Buffer As New clsByteQueue
        Call Buffer.CopyBuffer(.incomingData)
        
        'Remove packet ID
        Call Buffer.ReadInteger
        
        'If we got here then packet is complete, copy data back to original queue
        Call .incomingData.CopyBuffer(Buffer)

        If UserList(UserIndex).GuildIndex > 0 Then
            Call WriteConsoleMsg(UserIndex, "Ya perteneces a un clan, no podés fundar otro.", FontTypeNames.FONTTYPE_INFOIAO)
            Exit Sub

        End If

        If UserList(UserIndex).Stats.ELV < 35 Or UserList(UserIndex).Stats.UserSkills(eSkill.liderazgo) < 100 Then
            Call WriteConsoleMsg(UserIndex, "Para fundar un clan debes ser nivel 35, tener 100 en liderazgo y tener en tu inventario las 2 gemas: Gema Azul(1), Gema Naranja(1).", FontTypeNames.FONTTYPE_INFOIAO)
            Exit Sub

        End If

        If Not TieneObjetos(407, 1, UserIndex) Or Not TieneObjetos(408, 1, UserIndex) Then
            Call WriteConsoleMsg(UserIndex, "Para fundar un clan debes tener en tu inventario las 2 gemas: Gema Azul(1), Gema Naranja(1).", FontTypeNames.FONTTYPE_INFOIAO)
            Exit Sub

        End If

        Call WriteConsoleMsg(UserIndex, "Servidor> ¡Comenzamos a fundar el clan! Ingresa todos los datos solicitados.", FontTypeNames.FONTTYPE_INFOIAO)
        
        Call WriteShowFundarClanForm(UserIndex)

    End With
    
    Exit Sub
    
ErrHandler:

    Dim Error As Long

    Error = Err.Number

    On Error GoTo 0
    
    'Destroy auxiliar buffer
    Set Buffer = Nothing
    
    If Error <> 0 Then Err.raise Error

End Sub

Private Sub HandleLlamadadeClan(ByVal UserIndex As Integer)
        'Author: Pablo Mercavides

100     If UserList(UserIndex).incomingData.Length < 2 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
            'Remove packet ID
108         Call Buffer.ReadInteger
        
            Dim refError   As String
        
            Dim clan_nivel As Byte
                        
110         If .GuildIndex <> 0 Then
112             clan_nivel = modGuilds.NivelDeClan(.GuildIndex)

114             If clan_nivel > 1 Then
116                 Call SendData(SendTarget.ToGuildMembers, .GuildIndex, PrepareMessageConsoleMsg("Clan> [" & .name & "] solicita apoyo de su clan en " & DarNameMapa(.Pos.Map) & " (" & .Pos.Map & "-" & .Pos.X & "-" & .Pos.Y & "). Puedes ver su ubicación en el mapa del mundo.", FontTypeNames.FONTTYPE_GUILD))
118                 Call SendData(SendTarget.ToGuildMembers, .GuildIndex, PrepareMessagePlayWave("43", NO_3D_SOUND, NO_3D_SOUND))
120                 Call SendData(SendTarget.ToGuildMembers, .GuildIndex, PrepareMessageUbicacionLlamada(.Pos.Map, .Pos.X, .Pos.Y))
                Else
122                 Call WriteConsoleMsg(UserIndex, "Servidor> El nivel de tu clan debe ser 2 para utilizar esta opción.", FontTypeNames.FONTTYPE_INFOIAO)

                End If

            Else
124             Call WriteConsoleMsg(UserIndex, "Servidor> No Perteneces a ningun clan.", FontTypeNames.FONTTYPE_INFOIAO)

            End If

            'If we got here then packet is complete, copy data back to original queue
126         Call .incomingData.CopyBuffer(Buffer)

        End With
    
ErrHandler:

        Dim Error As Long

128     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
130     Set Buffer = Nothing
    
132     If Error <> 0 Then Err.raise Error

End Sub

Public Function PrepareMessageNieblandoToggle(ByVal IntensidadMax As Byte) As String
        
        On Error GoTo PrepareMessageNieblandoToggle_Err
        

        '***************************************************
        'Author: Pablo Mercavides
        '***************************************************
100     With auxiliarBuffer
102         Call .WriteByte(ServerPacketID.NieblaToggle)
104         Call .WriteByte(IntensidadMax)
        
106         PrepareMessageNieblandoToggle = .ReadASCIIStringFixed(.Length)

        End With

        
        Exit Function

PrepareMessageNieblandoToggle_Err:
108     Call RegistrarError(Err.Number, Err.Description, "Protocol.PrepareMessageNieblandoToggle", Erl)
110     Resume Next
        
End Function

Public Function PrepareMessageNevarToggle() As String
        
        On Error GoTo PrepareMessageNevarToggle_Err
        

        '***************************************************
        'Author: Pablo Mercavides
        '***************************************************
100     With auxiliarBuffer
102         Call .WriteByte(ServerPacketID.NieveToggle)
        
104         PrepareMessageNevarToggle = .ReadASCIIStringFixed(.Length)

        End With

        
        Exit Function

PrepareMessageNevarToggle_Err:
106     Call RegistrarError(Err.Number, Err.Description, "Protocol.PrepareMessageNevarToggle", Erl)
108     Resume Next
        
End Function

Private Sub HandleGenio(ByVal UserIndex As Integer)
        'Author: Pablo Mercavides
        
        On Error GoTo HandleGenio_Err
    
        

100     If UserList(UserIndex).incomingData.Length < 2 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If

104     With UserList(UserIndex)
        
            'Remove packet ID
106         Call .incomingData.ReadInteger
        
            'Si no es GM, no pasara nada :P
108         If (.flags.Privilegios And PlayerType.user) <> 0 Then Exit Sub
        
            Dim i As Byte
110         For i = 1 To NUMSKILLS
112             .Stats.UserSkills(i) = 100
114         Next i
        
116         Call WriteConsoleMsg(UserIndex, "Tus skills fueron editados.", FontTypeNames.FONTTYPE_INFOIAO)

        End With

        
        Exit Sub

HandleGenio_Err:
118     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleGenio", Erl)

        
End Sub

Private Sub HandleCasamiento(ByVal UserIndex As Integer)

        'Author: Pablo Mercavides
100     If UserList(UserIndex).incomingData.Length < 4 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            Dim Buffer As New clsByteQueue
106         Call Buffer.CopyBuffer(.incomingData)

            'Remove packet ID
108         Call Buffer.ReadInteger
        
            Dim UserName As String
            Dim tUser    As Integer

110         UserName = Buffer.ReadASCIIString()
112         tUser = NameIndex(UserName)
            
            'If we got here then packet is complete, copy data back to original queue
            Call .incomingData.CopyBuffer(Buffer)
            
114         If .flags.TargetNPC > 0 Then

116             If NpcList(.flags.TargetNPC).NPCtype <> eNPCType.Revividor Then
118                 Call WriteConsoleMsg(UserIndex, "Primero haz click sobre un sacerdote.", FontTypeNames.FONTTYPE_INFO)

                Else

120                 If Distancia(.Pos, NpcList(.flags.TargetNPC).Pos) > 10 Then
122                     Call WriteLocaleMsg(UserIndex, "8", FontTypeNames.FONTTYPE_INFO)
                        'Call WriteConsoleMsg(UserIndex, "El sacerdote no puede casarte debido a que estás demasiado lejos.", FontTypeNames.FONTTYPE_INFO)
                        
                    Else
            
124                     If tUser = UserIndex Then
126                         Call WriteConsoleMsg(UserIndex, "No podés casarte contigo mismo.", FontTypeNames.FONTTYPE_INFO)
                        
                        ElseIf .flags.Casado = 1 Then
                            Call WriteConsoleMsg(UserIndex, "¡Ya estás casado! Debes divorciarte de tu actual pareja para casarte nuevamente.", FontTypeNames.FONTTYPE_INFO)
                            
                        ElseIf UserList(tUser).flags.Casado = 1 Then
                            Call WriteConsoleMsg(UserIndex, "Tu pareja debe divorciarse antes de tomar tu mano en matrimonio.", FontTypeNames.FONTTYPE_INFO)
                            
                        Else

128                         If tUser <= 0 Then
130                             Call WriteConsoleMsg(UserIndex, "El usuario no esta online.", FontTypeNames.FONTTYPE_INFO)

                            Else

132                             If UserList(tUser).flags.Candidato = UserIndex Then

134                                 UserList(tUser).flags.Casado = 1
136                                 UserList(tUser).flags.Pareja = UserList(UserIndex).name
138                                 .flags.Casado = 1
140                                 .flags.Pareja = UserList(tUser).name

142                                 Call SendData(SendTarget.ToAll, 0, PrepareMessagePlayWave(FXSound.Casamiento_sound, NO_3D_SOUND, NO_3D_SOUND))
144                                 Call SendData(SendTarget.ToAll, 0, PrepareMessageConsoleMsg("El sacerdote de " & DarNameMapa(.Pos.Map) & " celebra el casamiento entre " & UserList(UserIndex).name & " y " & UserList(tUser).name & ".", FontTypeNames.FONTTYPE_WARNING))
146                                 Call WriteChatOverHead(UserIndex, "Los declaro unidos en legal matrimonio ¡Felicidades!", NpcList(.flags.TargetNPC).Char.CharIndex, vbWhite)
148                                 Call WriteChatOverHead(tUser, "Los declaro unidos en legal matrimonio ¡Felicidades!", NpcList(UserList(UserIndex).flags.TargetNPC).Char.CharIndex, vbWhite)
                                
                                Else
                                
150                                 Call WriteChatOverHead(UserIndex, "La solicitud de casamiento a sido enviada a " & UserName & ".", NpcList(.flags.TargetNPC).Char.CharIndex, vbWhite)
152                                 Call WriteConsoleMsg(tUser, .name & " desea casarse contigo, para permitirlo haz click en el sacerdote y escribe /PROPONER " & .name & ".", FontTypeNames.FONTTYPE_TALK)

154                                 .flags.Candidato = tUser

                                End If

                            End If

                        End If

                    End If

                End If

            Else
156             Call WriteConsoleMsg(UserIndex, "Primero haz click sobre el sacerdote.", FontTypeNames.FONTTYPE_INFO)

            End If

        End With
    
ErrHandler:

        Dim Error As Long

160     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
162     Set Buffer = Nothing
    
164     If Error <> 0 Then Err.raise Error

End Sub

Private Sub HandleEnviarCodigo(ByVal UserIndex As Integer)

        'Author: Pablo Mercavides
100     If UserList(UserIndex).incomingData.Length < 4 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
            'Remove packet ID
108         Call Buffer.ReadInteger
        
            Dim Codigo As String

110         Codigo = Buffer.ReadASCIIString()

112         Call CheckearCodigo(UserIndex, Codigo)
        
            'If we got here then packet is complete, copy data back to original queue
114         Call .incomingData.CopyBuffer(Buffer)

        End With
    
ErrHandler:

        Dim Error As Long

116     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
118     Set Buffer = Nothing
    
120     If Error <> 0 Then Err.raise Error

End Sub

Private Sub HandleCrearTorneo(ByVal UserIndex As Integer)

        'Author: Pablo Mercavides
100     If UserList(UserIndex).incomingData.Length < 26 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
            'Remove packet ID
108         Call Buffer.ReadInteger
        
            Dim NivelMinimo As Byte

            Dim nivelmaximo As Byte

            Dim cupos       As Byte

            Dim costo       As Long

            Dim mago        As Byte

            Dim clerico     As Byte

            Dim guerrero    As Byte

            Dim asesino     As Byte

            Dim bardo       As Byte

            Dim druido      As Byte

            Dim Paladin     As Byte

            Dim cazador     As Byte

            Dim Trabajador  As Byte

            Dim Mapa        As Integer

            Dim X           As Byte

            Dim Y           As Byte

            Dim nombre      As String

            Dim reglas      As String

110         NivelMinimo = Buffer.ReadByte
112         nivelmaximo = Buffer.ReadByte
114         cupos = Buffer.ReadByte
116         costo = Buffer.ReadLong
118         mago = Buffer.ReadByte
120         clerico = Buffer.ReadByte
122         guerrero = Buffer.ReadByte
124         asesino = Buffer.ReadByte
126         bardo = Buffer.ReadByte
128         druido = Buffer.ReadByte
130         Paladin = Buffer.ReadByte
132         cazador = Buffer.ReadByte
 
134         Trabajador = Buffer.ReadByte

136         Mapa = Buffer.ReadInteger
138         X = Buffer.ReadByte
140         Y = Buffer.ReadByte
142         nombre = Buffer.ReadASCIIString
144         reglas = Buffer.ReadASCIIString
  
146         If EsGM(UserIndex) Then
148             Torneo.NivelMinimo = NivelMinimo
150             Torneo.nivelmaximo = nivelmaximo
152             Torneo.cupos = cupos
154             Torneo.costo = costo
156             Torneo.mago = mago
158             Torneo.clerico = clerico
160             Torneo.guerrero = guerrero
162             Torneo.asesino = asesino
164             Torneo.bardo = bardo
166             Torneo.druido = druido
168             Torneo.Paladin = Paladin
170             Torneo.cazador = cazador
172             Torneo.Trabajador = Trabajador
        
174             Torneo.Mapa = Mapa
176             Torneo.X = X
178             Torneo.Y = Y
180             Torneo.nombre = nombre
182             Torneo.reglas = reglas

184             Call IniciarTorneo

            End If
        
            'If we got here then packet is complete, copy data back to original queue
186         Call .incomingData.CopyBuffer(Buffer)

        End With
    
ErrHandler:

        Dim Error As Long

188     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
190     Set Buffer = Nothing
    
192     If Error <> 0 Then Err.raise Error

End Sub

Private Sub HandleComenzarTorneo(ByVal UserIndex As Integer)

        'Author: Pablo Mercavides
100     If UserList(UserIndex).incomingData.Length < 2 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
            'Remove packet ID
108         Call Buffer.ReadInteger

            'NivelMinimo = buffer.ReadByte
  
110         If EsGM(UserIndex) Then

112             Call ComenzarTorneoOk

            End If
            
            'If we got here then packet is complete, copy data back to original queue
114         Call .incomingData.CopyBuffer(Buffer)

        End With
    
ErrHandler:

        Dim Error As Long

116     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
118     Set Buffer = Nothing
    
120     If Error <> 0 Then Err.raise Error

End Sub

Private Sub HandleCancelarTorneo(ByVal UserIndex As Integer)

        'Author: Pablo Mercavides
100     If UserList(UserIndex).incomingData.Length < 2 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
            'Remove packet ID
108         Call Buffer.ReadInteger
  
110         If EsGM(UserIndex) Then
112             Call ResetearTorneo

            End If
            
            'If we got here then packet is complete, copy data back to original queue
114         Call .incomingData.CopyBuffer(Buffer)

        End With
    
ErrHandler:

        Dim Error As Long

116     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
118     Set Buffer = Nothing
    
120     If Error <> 0 Then Err.raise Error

End Sub

Private Sub HandleBusquedaTesoro(ByVal UserIndex As Integer)

        'Author: Pablo Mercavides
100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
            'Remove packet ID
108         Call Buffer.ReadInteger
        
            Dim Tipo As Byte

110         Tipo = Buffer.ReadByte()
        
            Dim Mapa As Byte
  
112         If EsGM(UserIndex) Then
    
114             If BusquedaTesoroActiva = False And BusquedaRegaloActiva = False Then

116                 Select Case Tipo

                        Case 0
118                         Call PerderTesoro

120                     Case 1
122                         Call PerderRegalo

124                     Case 2
                
                            Dim Pos As WorldPos

126                         Mapa = RandomNumber(1, 8)
                
128                         Select Case Mapa

                                Case 1
130                                 Pos.Map = 187

132                             Case 2
134                                 Pos.Map = 188

136                             Case 3
138                                 Pos.Map = 190

140                             Case 4
142                                 Pos.Map = 191

144                             Case 5
146                                 Pos.Map = 234

148                             Case 6
150                                 Pos.Map = 235

152                             Case 7
154                                 Pos.Map = 30

156                             Case 8
158                                 Pos.Map = 98

160                             Case 8
162                                 Pos.Map = 75

                            End Select

164                         Pos.Y = 50
166                         Pos.X = 50
168                         Call SpawnNpc(RandomNumber(592, 593), Pos, True, False, True)
                
                    End Select
            
                Else
            
170                 If BusquedaTesoroActiva = True Then
172                     Call SendData(SendTarget.ToAll, 0, PrepareMessageConsoleMsg("Eventos> Todavia nadie fue capaz de encontar el tesoro, recorda que se encuentra en " & DarNameMapa(TesoroNumMapa) & "(" & TesoroNumMapa & "). íQuien sera el valiente que lo encuentre?", FontTypeNames.FONTTYPE_TALK))
174                     Call WriteConsoleMsg(UserIndex, "Ya hay una busqueda del tesoro activa. El tesoro se encuentra en: " & TesoroNumMapa & "-" & TesoroX & "-" & TesoroY, FontTypeNames.FONTTYPE_INFO)
                    Else
176                     Call SendData(SendTarget.ToAll, 0, PrepareMessageConsoleMsg("Eventos> Ningun valiente fue capaz de encontrar el item misterioso, recorda que se encuentra en " & DarNameMapa(RegaloNumMapa) & "(" & RegaloNumMapa & "). íTení cuidado!", FontTypeNames.FONTTYPE_TALK))
178                     Call WriteConsoleMsg(UserIndex, "Ya hay una busqueda del tesoro activa. El tesoro se encuentra en: " & RegaloNumMapa & "-" & RegaloX & "-" & RegaloY, FontTypeNames.FONTTYPE_INFO)

                    End If

                End If

            End If
            
            'If we got here then packet is complete, copy data back to original queue
180         Call .incomingData.CopyBuffer(Buffer)

        End With
    
ErrHandler:

        Dim Error As Long

182     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
184     Set Buffer = Nothing
    
186     If Error <> 0 Then Err.raise Error

End Sub

Private Sub HandleFlagTrabajar(ByVal UserIndex As Integer)
        'Author: Pablo Mercavides

100     If UserList(UserIndex).incomingData.Length < 2 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
            'Remove packet ID
108         Call Buffer.ReadInteger
        
110         UserList(UserIndex).Counters.Trabajando = 0
112         UserList(UserIndex).flags.UsandoMacro = False
114         UserList(UserIndex).flags.TargetObj = 0 ' Sacamos el targer del objeto
116         UserList(UserIndex).flags.UltimoMensaje = 0
        
            'If we got here then packet is complete, copy data back to original queue
118         Call .incomingData.CopyBuffer(Buffer)

        End With
    
ErrHandler:

        Dim Error As Long

120     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
122     Set Buffer = Nothing
    
124     If Error <> 0 Then Err.raise Error

End Sub

Private Sub HandleEscribiendo(ByVal UserIndex As Integer)
        'Author: Pablo Mercavides

100     If UserList(UserIndex).incomingData.Length < 2 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
            'Remove packet ID
108         Call Buffer.ReadInteger
        
110         If .flags.Escribiendo = False Then
112             .flags.Escribiendo = True
114             Call SendData(SendTarget.ToPCArea, UserIndex, PrepareMessageSetEscribiendo(.Char.CharIndex, True))
            Else
116             .flags.Escribiendo = False
118             Call SendData(SendTarget.ToPCArea, UserIndex, PrepareMessageSetEscribiendo(.Char.CharIndex, False))

            End If

            'If we got here then packet is complete, copy data back to original queue
120         Call .incomingData.CopyBuffer(Buffer)

        End With
    
ErrHandler:

        Dim Error As Long

122     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
124     Set Buffer = Nothing
    
126     If Error <> 0 Then Err.raise Error

End Sub

Private Sub HandleRequestFamiliar(ByVal UserIndex As Integer)
        'Author: Pablo Mercavides
        'Remove packet ID
        
        On Error GoTo HandleRequestFamiliar_Err
        
100     Call UserList(UserIndex).incomingData.ReadInteger

102     Call WriteFamiliar(UserIndex)

        
        Exit Sub

HandleRequestFamiliar_Err:
104     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleRequestFamiliar", Erl)
106     Resume Next
        
End Sub

Public Sub WriteFamiliar(ByVal UserIndex As Integer)

        'Author: Pablo Mercavides
        On Error GoTo ErrHandler

100     With UserList(UserIndex).outgoingData
102         Call .WriteByte(ServerPacketID.Familiar)
104         Call .WriteByte(UserList(UserIndex).Familiar.Existe)
106         Call .WriteByte(UserList(UserIndex).Familiar.Muerto)
108         Call .WriteASCIIString(UserList(UserIndex).Familiar.nombre)
110         Call .WriteLong(UserList(UserIndex).Familiar.Exp)
112         Call .WriteLong(UserList(UserIndex).Familiar.ELU)
114         Call .WriteByte(UserList(UserIndex).Familiar.nivel)
116         Call .WriteInteger(UserList(UserIndex).Familiar.MinHp)
118         Call .WriteInteger(UserList(UserIndex).Familiar.MaxHp)
120         Call .WriteInteger(UserList(UserIndex).Familiar.MinHIT)
122         Call .WriteInteger(UserList(UserIndex).Familiar.MaxHit)

        End With

        Exit Sub

ErrHandler:

124     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
126         Call FlushBuffer(UserIndex)
128         Resume
        End If

End Sub

Public Function PrepareMessageBarFx(ByVal CharIndex As Integer, ByVal BarTime As Integer, ByVal BarAccion As Byte) As String
        
        On Error GoTo PrepareMessageBarFx_Err
        

        '***************************************************
        'Author: Pablo Mercavides
        'Last Modification: 20/10/2014
        'Envia el Efecto de Barra
        '***************************************************
100     With auxiliarBuffer
102         Call .WriteByte(ServerPacketID.BarFx)
104         Call .WriteInteger(CharIndex)
106         Call .WriteInteger(BarTime)
108         Call .WriteByte(BarAccion)
        
110         PrepareMessageBarFx = .ReadASCIIStringFixed(.Length)

        End With

        
        Exit Function

PrepareMessageBarFx_Err:
112     Call RegistrarError(Err.Number, Err.Description, "Protocol.PrepareMessageBarFx", Erl)
114     Resume Next
        
End Function

Private Sub HandleCompletarAccion(ByVal UserIndex As Integer)
        'Author: Pablo Mercavides

100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
            'Remove packet ID
108         Call Buffer.ReadInteger
        
            Dim Accion As Byte

110         Accion = Buffer.ReadByte()
        
112         If .Accion.AccionPendiente = True Then
114             If .Accion.TipoAccion = Accion Then
116                 Call CompletarAccionFin(UserIndex)
                Else
118                 Call WriteConsoleMsg(UserIndex, "Servidor> La acción que solicitas no se corresponde.", FontTypeNames.FONTTYPE_SERVER)

                End If

            Else
120             Call WriteConsoleMsg(UserIndex, "Servidor> Tu no tenias ninguna acción pendiente. ", FontTypeNames.FONTTYPE_SERVER)

            End If
        
            'If we got here then packet is complete, copy data back to original queue
122         Call .incomingData.CopyBuffer(Buffer)

        End With
    
ErrHandler:

        Dim Error As Long

124     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
126     Set Buffer = Nothing
    
128     If Error <> 0 Then Err.raise Error

End Sub

Private Sub HandleReclamarRecompensa(ByVal UserIndex As Integer)
        'Author: Pablo Mercavides

100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            Dim Buffer As New clsByteQueue

            Dim index  As Byte

106         Call Buffer.CopyBuffer(.incomingData)
            'Remove packet ID
108         Call Buffer.ReadInteger
        
110         index = Buffer.ReadByte()
        
112         Call EntregarRecompensas(UserIndex, index)
        
            'If we got here then packet is complete, copy data back to original queue
114         Call .incomingData.CopyBuffer(Buffer)

        End With
    
ErrHandler:

        Dim Error As Long

116     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
118     Set Buffer = Nothing
    
120     If Error <> 0 Then Err.raise Error

End Sub

Private Sub HandleTraerRecompensas(ByVal UserIndex As Integer)
        'Author: Pablo Mercavides

100     If UserList(UserIndex).incomingData.Length < 2 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
            'Remove packet ID
108         Call Buffer.ReadInteger

110         Call EnviarRecompensaStat(UserIndex)
        
            'If we got here then packet is complete, copy data back to original queue
112         Call .incomingData.CopyBuffer(Buffer)

        End With
    
ErrHandler:

        Dim Error As Long

114     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
116     Set Buffer = Nothing
    
118     If Error <> 0 Then Err.raise Error

End Sub

Public Sub WriteRecompensas(ByVal UserIndex As Integer)
        
        On Error GoTo WriteRecompensas_Err
        

        '***************************************************
        'Envia las recompensas al cliente!
        'Por Ladder
        '22/04/2015
        'Flor te amo!
        '***************************************************

100     With UserList(UserIndex).outgoingData
    
            Dim a, b, c As Byte
 
102         b = UserList(UserIndex).UserLogros + 1
104         a = UserList(UserIndex).NPcLogros + 1
106         c = UserList(UserIndex).LevelLogros + 1
        
108         Call .WriteByte(ServerPacketID.Logros)
            'Logros NPC
110         Call .WriteASCIIString(NPcLogros(a).nombre)
112         Call .WriteASCIIString(NPcLogros(a).Desc)
114         Call .WriteInteger(NPcLogros(a).cant)
116         Call .WriteByte(NPcLogros(a).TipoRecompensa)
        
118         If NPcLogros(a).TipoRecompensa = 1 Then
120             Call .WriteASCIIString(NPcLogros(a).ObjRecompensa)

            End If

122         If NPcLogros(a).TipoRecompensa = 2 Then
124             Call .WriteLong(NPcLogros(a).OroRecompensa)

            End If

126         If NPcLogros(a).TipoRecompensa = 3 Then
128             Call .WriteLong(NPcLogros(a).ExpRecompensa)

            End If
        
130         If NPcLogros(a).TipoRecompensa = 4 Then
132             Call .WriteByte(NPcLogros(a).HechizoRecompensa)

            End If
        
134         Call .WriteInteger(UserList(UserIndex).Stats.NPCsMuertos)
        
136         If UserList(UserIndex).Stats.NPCsMuertos >= NPcLogros(a).cant Then
138             Call .WriteBoolean(True)
            Else
140             Call .WriteBoolean(False)

            End If
        
            'Logros User
142         Call .WriteASCIIString(UserLogros(b).nombre)
144         Call .WriteASCIIString(UserLogros(b).Desc)
146         Call .WriteInteger(UserLogros(b).cant)
148         Call .WriteInteger(UserLogros(b).TipoRecompensa)
150         Call .WriteInteger(UserList(UserIndex).Stats.UsuariosMatados)

152         If UserLogros(a).TipoRecompensa = 1 Then
154             Call .WriteASCIIString(UserLogros(b).ObjRecompensa)

            End If
        
156         If UserLogros(a).TipoRecompensa = 2 Then
158             Call .WriteLong(UserLogros(b).OroRecompensa)

            End If

160         If UserLogros(a).TipoRecompensa = 3 Then
162             Call .WriteLong(UserLogros(b).ExpRecompensa)

            End If
        
164         If UserLogros(a).TipoRecompensa = 4 Then
166             Call .WriteByte(UserLogros(b).HechizoRecompensa)

            End If

168         If UserList(UserIndex).Stats.UsuariosMatados >= UserLogros(b).cant Then
170             Call .WriteBoolean(True)
            Else
172             Call .WriteBoolean(False)

            End If

            'Nivel User
174         Call .WriteASCIIString(LevelLogros(c).nombre)
176         Call .WriteASCIIString(LevelLogros(c).Desc)
178         Call .WriteInteger(LevelLogros(c).cant)
180         Call .WriteInteger(LevelLogros(c).TipoRecompensa)
182         Call .WriteByte(UserList(UserIndex).Stats.ELV)

184         If LevelLogros(c).TipoRecompensa = 1 Then
186             Call .WriteASCIIString(LevelLogros(c).ObjRecompensa)

            End If
        
188         If LevelLogros(c).TipoRecompensa = 2 Then
190             Call .WriteLong(LevelLogros(c).OroRecompensa)

            End If

192         If LevelLogros(c).TipoRecompensa = 3 Then
194             Call .WriteLong(LevelLogros(c).ExpRecompensa)

            End If
        
196         If LevelLogros(c).TipoRecompensa = 4 Then
198             Call .WriteByte(LevelLogros(c).HechizoRecompensa)

            End If

200         If UserList(UserIndex).Stats.ELV >= LevelLogros(c).cant Then
202             Call .WriteBoolean(True)
            Else
204             Call .WriteBoolean(False)

            End If

        End With

        Exit Sub

        
        Exit Sub

WriteRecompensas_Err:
206     Call RegistrarError(Err.Number, Err.Description, "Protocol.WriteRecompensas", Erl)
208     Resume Next
        
End Sub

Private Sub HandleCorreo(ByVal UserIndex As Integer)
        'Author: Pablo Mercavides

100     If UserList(UserIndex).incomingData.Length < 2 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
            'Remove packet ID
108         Call Buffer.ReadInteger
        
            'Call WriteListaCorreo(Userindex, False)
            '    Call EnviarRecompensaStat(UserIndex)
        
            'If we got here then packet is complete, copy data back to original queue
110         Call .incomingData.CopyBuffer(Buffer)

        End With
    
ErrHandler:

        Dim Error As Long

112     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
114     Set Buffer = Nothing
    
116     If Error <> 0 Then Err.raise Error

End Sub

Private Sub HandleSendCorreo(ByVal UserIndex As Integer)
        'Author: Pablo Mercavides

100     If UserList(UserIndex).incomingData.Length < 7 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
            'Remove packet ID
108         Call Buffer.ReadInteger

            Dim Nick               As String

            Dim msg                As String

            Dim ItemCount          As Byte

            Dim cant               As Integer

            Dim IndexReceptor      As Integer

            Dim Itemlista(1 To 10) As obj

110         Nick = Buffer.ReadASCIIString()
112         msg = Buffer.ReadASCIIString()
114         ItemCount = Buffer.ReadByte()
        
            Dim ObjIndex   As Integer

            Dim FinalCount As Byte

            Dim HuboError  As Boolean
                
116         If ItemCount > 0 Then 'Si el correo tiene item

                Dim i As Byte

118             For i = 1 To ItemCount
120                 Itemlista(i).ObjIndex = Buffer.ReadByte
122                 Itemlista(i).Amount = Buffer.ReadInteger
124             Next i

            Else 'Si es solo texto
                'IndexReceptor = NameIndex(Nick)
126             FinalCount = 0
128             AddCorreo UserIndex, Nick, msg, 0, FinalCount

            End If
        
            Dim ObjArray As String
        
            ' WyroX: Deshabilitado
130         If False Then

132             For i = 1 To ItemCount
134                 ObjIndex = UserList(UserIndex).Invent.Object(Itemlista(i).ObjIndex).ObjIndex
                
136                 If ObjData(ObjIndex).Destruye = 1 Then
138                     HuboError = True
                    Else

140                     If ObjData(ObjIndex).Instransferible = 1 Then
142                         HuboError = True
                            '  Call WriteConsoleMsg(UserIndex, "No podes transferir ese item.", FontTypeNames.FONTTYPE_INFO)
                        Else

144                         If ObjData(ObjIndex).Newbie = 1 Then
146                             HuboError = True
                                ' Call WriteConsoleMsg(UserIndex, "No podes transferir ese item.", FontTypeNames.FONTTYPE_INFO)
                            Else

148                             If ObjData(ObjIndex).Intirable = 1 Then
150                                 HuboError = True
                                    ' Call WriteConsoleMsg(UserIndex, "No podes transferir ese item.", FontTypeNames.FONTTYPE_INFO)
                                Else

152                                 If ObjData(ObjIndex).OBJType = eOBJType.otMonturas And UserList(UserIndex).flags.Montado Then
154                                     HuboError = True
                                        '  Call WriteConsoleMsg(UserIndex, "Para transferir tu montura deberias descender de ella.", FontTypeNames.FONTTYPE_INFO)
                                    Else
                                
156                                     Call QuitarUserInvItem(UserIndex, Itemlista(i).ObjIndex, Itemlista(i).Amount)
158                                     Call UpdateUserInv(False, UserIndex, Itemlista(i).ObjIndex)
160                                     FinalCount = FinalCount + 1
162                                     ObjArray = ObjArray & ObjIndex & "-" & Itemlista(i).Amount & "@"

                                    End If

                                End If

                            End If

                        End If

                    End If

164             Next i
                
166             IndexReceptor = NameIndex(Nick)
168             AddCorreo UserIndex, Nick, msg, ObjArray, FinalCount
    
170             If HuboError Then
172                 Call WriteConsoleMsg(UserIndex, "Hubo objetos que no se pudieron enviar.", FontTypeNames.FONTTYPE_INFO)

                End If
            
            Else
174             Call WriteConsoleMsg(UserIndex, "Correo desactivado.", FontTypeNames.FONTTYPE_INFO)

            End If
        
            'If we got here then packet is complete, copy data back to original queue
176         Call .incomingData.CopyBuffer(Buffer)

        End With
    
        Exit Sub
ErrHandler:
178     LogError "Error HandleSendCorreo"

        Dim Error As Long

180     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
182     Set Buffer = Nothing
    
184     If Error <> 0 Then Err.raise Error

End Sub

Private Sub HandleRetirarItemCorreo(ByVal UserIndex As Integer)
        'Author: Pablo Mercavides

100     If UserList(UserIndex).incomingData.Length < 4 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
            'Remove packet ID
108         Call Buffer.ReadInteger

            Dim MsgIndex As Integer

110         MsgIndex = Buffer.ReadInteger()
        
            'Call ExtractItemCorreo(Userindex, MsgIndex)
        
112         Call .incomingData.CopyBuffer(Buffer)

        End With
    
        Exit Sub
    
ErrHandler:
114     LogError "Error handleRetirarItem"

        Dim Error As Long

116     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
118     Set Buffer = Nothing
    
120     If Error <> 0 Then Err.raise Error

End Sub

Private Sub HandleBorrarCorreo(ByVal UserIndex As Integer)
        'Author: Pablo Mercavides

100     If UserList(UserIndex).incomingData.Length < 4 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
            'Remove packet ID
108         Call Buffer.ReadInteger

            Dim MsgIndex As Integer

110         MsgIndex = Buffer.ReadInteger()
        
            'Call BorrarCorreoMail(Userindex, MsgIndex)
        
112         Call .incomingData.CopyBuffer(Buffer)

        End With
    
        Exit Sub
    
ErrHandler:

114     LogError "Error BorrarCorreo"

        Dim Error As Long

116     Error = Err.Number
    
        On Error GoTo 0
    
        'Destroy auxiliar buffer
118     Set Buffer = Nothing
    
120     If Error <> 0 Then Err.raise Error

End Sub

Private Sub HandleInvitarGrupo(ByVal UserIndex As Integer)
        'Author: Pablo Mercavides
        
        On Error GoTo HandleInvitarGrupo_Err
    
        

100     If UserList(UserIndex).incomingData.Length < 2 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If


104     With UserList(UserIndex)
        
            'Remove packet ID
106         Call .incomingData.ReadInteger
        
108         If .flags.Muerto = 1 Then
                'Call WriteConsoleMsg(UserIndex, "¡¡Estás muerto!!.", FontTypeNames.FONTTYPE_INFO)
110             Call WriteLocaleMsg(UserIndex, "77", FontTypeNames.FONTTYPE_INFO)
            
            Else
            
112             If .Grupo.CantidadMiembros <= UBound(.Grupo.Miembros) Then
114                 Call WriteWorkRequestTarget(UserIndex, eSkill.Grupo)
                Else
116                 Call WriteConsoleMsg(UserIndex, "¡No podés invitar a más personas!", FontTypeNames.FONTTYPE_INFO)
                End If

            End If

        End With


        
        Exit Sub

HandleInvitarGrupo_Err:
118     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleInvitarGrupo", Erl)

        
End Sub

Private Sub HandleMarcaDeClan(ByVal UserIndex As Integer)
        'Author: Pablo Mercavides
        
        On Error GoTo HandleMarcaDeClan_Err
    
        

100     With UserList(UserIndex)

            'Remove packet ID
102         Call .incomingData.ReadInteger
        
104         If .flags.Muerto = 1 Then
                'Call WriteConsoleMsg(UserIndex, "¡¡Estás muerto!!.", FontTypeNames.FONTTYPE_INFO)
106             Call WriteLocaleMsg(UserIndex, "77", FontTypeNames.FONTTYPE_INFO)
                Exit Sub

            End If
       
108         Call WriteWorkRequestTarget(UserIndex, eSkill.MarcaDeClan)

        End With

        
        Exit Sub

HandleMarcaDeClan_Err:
110     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleMarcaDeClan", Erl)

        
End Sub

Private Sub HandleMarcaDeGM(ByVal UserIndex As Integer)
        'Author: Pablo Mercavides
        
        On Error GoTo HandleMarcaDeGM_Err


100     With UserList(UserIndex)

102         Call .incomingData.ReadInteger
          
104         Call WriteWorkRequestTarget(UserIndex, eSkill.MarcaDeGM)

        End With

        
        Exit Sub

HandleMarcaDeGM_Err:
106     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleMarcaDeGM", Erl)

        
End Sub

Public Sub WritePreguntaBox(ByVal UserIndex As Integer, ByVal message As String)

        '***************************************************
        'Author: Juan Martín Sotuyo Dodero (Maraxus)
        'Last Modification: 05/17/06
        'Writes the "ShowMessageBox" message to the given user's outgoing data buffer
        '***************************************************
        On Error GoTo ErrHandler

100     With UserList(UserIndex).outgoingData
102         Call .WriteByte(ServerPacketID.ShowPregunta)
104         Call .WriteASCIIString(message)

        End With

        Exit Sub

ErrHandler:

106     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
108         Call FlushBuffer(UserIndex)
110         Resume
        End If

End Sub

Private Sub HandleResponderPregunta(ByVal UserIndex As Integer)
        'Author: Pablo Mercavides

100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
            'Remove packet ID
108         Call Buffer.ReadInteger

            Dim respuesta As Boolean

            Dim DeDonde   As String

110         respuesta = Buffer.ReadBoolean()
        
            Dim Log As String

112         Log = "Repuesta "

114         If respuesta Then
        
116             Select Case UserList(UserIndex).flags.pregunta

                    Case 1
118                     Log = "Repuesta Afirmativa 1"

                        'Call WriteConsoleMsg(UserIndex, "El usuario desea unirse al grupo.", FontTypeNames.FONTTYPE_SUBASTA)
                        ' UserList(UserIndex).Grupo.PropuestaDe = 0
120                     If UserList(UserIndex).Grupo.PropuestaDe <> 0 Then
                
122                         If UserList(UserList(UserIndex).Grupo.PropuestaDe).Grupo.Lider <> UserList(UserIndex).Grupo.PropuestaDe Then
124                             Call WriteConsoleMsg(UserIndex, "íEl lider del grupo a cambiado, imposible unirse!", FontTypeNames.FONTTYPE_INFOIAO)
                            Else
                        
126                             Log = "Repuesta Afirmativa 1-1 "
                        
128                             If UserList(UserList(UserIndex).Grupo.PropuestaDe).Grupo.Lider = 0 Then
130                                 Call WriteConsoleMsg(UserIndex, "íEl grupo ya no existe!", FontTypeNames.FONTTYPE_INFOIAO)
                                Else
                            
132                                 Log = "Repuesta Afirmativa 1-2 "
                            
134                                 If UserList(UserList(UserIndex).Grupo.PropuestaDe).Grupo.CantidadMiembros = 1 Then
136                                     Call WriteLocaleMsg(UserList(UserIndex).Grupo.PropuestaDe, "36", FontTypeNames.FONTTYPE_INFOIAO)
                                        'Call WriteConsoleMsg(UserList(UserIndex).Grupo.PropuestaDe, "íEl grupo a sido creado!", FontTypeNames.FONTTYPE_INFOIAO)
138                                     UserList(UserList(UserIndex).Grupo.PropuestaDe).Grupo.EnGrupo = True
140                                     Log = "Repuesta Afirmativa 1-3 "

                                    End If
                                
142                                 Log = "Repuesta Afirmativa 1-4"
144                                 UserList(UserList(UserIndex).Grupo.PropuestaDe).Grupo.CantidadMiembros = UserList(UserList(UserIndex).Grupo.PropuestaDe).Grupo.CantidadMiembros + 1
146                                 UserList(UserList(UserIndex).Grupo.PropuestaDe).Grupo.Miembros(UserList(UserList(UserIndex).Grupo.PropuestaDe).Grupo.CantidadMiembros) = UserIndex
148                                 UserList(UserIndex).Grupo.EnGrupo = True
                                
                                    Dim index As Byte
                                
150                                 Log = "Repuesta Afirmativa 1-5 "
                                
152                                 For index = 2 To UserList(UserList(UserIndex).Grupo.PropuestaDe).Grupo.CantidadMiembros - 1
154                                     Call WriteLocaleMsg(UserList(UserList(UserIndex).Grupo.PropuestaDe).Grupo.Miembros(index), "40", FontTypeNames.FONTTYPE_INFOIAO, UserList(UserIndex).name)
                                
156                                 Next index
                                
158                                 Log = "Repuesta Afirmativa 1-6 "
                                    'Call WriteConsoleMsg(UserList(UserIndex).Grupo.PropuestaDe, "í" & UserList(UserIndex).name & " a sido aíadido al grupo!", FontTypeNames.FONTTYPE_INFOIAO)
160                                 Call WriteLocaleMsg(UserList(UserIndex).Grupo.PropuestaDe, "40", FontTypeNames.FONTTYPE_INFOIAO, UserList(UserIndex).name)
                                
162                                 Call WriteConsoleMsg(UserIndex, "¡Has sido aíadido al grupo!", FontTypeNames.FONTTYPE_INFOIAO)
                                
164                                 Log = "Repuesta Afirmativa 1-7 "
                                
166                                 Call RefreshCharStatus(UserList(UserIndex).Grupo.PropuestaDe)
168                                 Call RefreshCharStatus(UserIndex)
                                 
170                                 Log = "Repuesta Afirmativa 1-8"

                                End If

                            End If

                        Else
                    
172                         Call WriteConsoleMsg(UserIndex, "Servidor> Solicitud de grupo invalida, reintente...", FontTypeNames.FONTTYPE_SERVER)
                    
                        End If

                        'unirlo
174                 Case 2
176                     Log = "Repuesta Afirmativa 2"
180                     Call WriteConsoleMsg(UserIndex, "¡Ahora sos un ciudadano!", FontTypeNames.FONTTYPE_INFOIAO)
182                     Call VolverCiudadano(UserIndex)
                    
184                 Case 3
186                     Log = "Repuesta Afirmativa 3"
                    
188                     UserList(UserIndex).Hogar = UserList(UserIndex).PosibleHogar

190                     Select Case UserList(UserIndex).Hogar

                            Case eCiudad.cUllathorpe
192                             DeDonde = "Ullathorpe"
                            
194                         Case eCiudad.cNix
196                             DeDonde = "Nix"
                
198                         Case eCiudad.cBanderbill
200                             DeDonde = "Banderbill"
                        
202                         Case eCiudad.cLindos 'Vamos a tener que ir por todo el desierto... uff!
204                             DeDonde = "Lindos"
                            
206                         Case eCiudad.cArghal
208                             DeDonde = " Arghal"
                            
210                         Case eCiudad.cArkhein
212                             DeDonde = " Arkhein"
                            
214                         Case Else
216                             DeDonde = "Ullathorpe"

                        End Select
                    
218                     If UserList(UserIndex).flags.TargetNPC <> 0 Then
                    
220                         Call WriteChatOverHead(UserIndex, "¡Gracias " & UserList(UserIndex).name & "! Ahora perteneces a la ciudad de " & DeDonde & ".", NpcList(UserList(UserIndex).flags.TargetNPC).Char.CharIndex, vbWhite)
                        Else
222                         Call WriteConsoleMsg(UserIndex, "¡Gracias " & UserList(UserIndex).name & "! Ahora perteneces a la ciudad de " & DeDonde & ".", FontTypeNames.FONTTYPE_INFOIAO)

                        End If
                    
224                 Case 4
226                     Log = "Repuesta Afirmativa 4"
                
228                     If UserList(UserIndex).flags.TargetUser <> 0 Then
                
234                         UserList(UserIndex).ComUsu.DestUsu = UserList(UserIndex).flags.TargetUser
236                         UserList(UserIndex).ComUsu.DestNick = UserList(UserList(UserIndex).flags.TargetUser).name
238                         UserList(UserIndex).ComUsu.cant = 0
240                         UserList(UserIndex).ComUsu.Objeto = 0
242                         UserList(UserIndex).ComUsu.Acepto = False
                    
                            'Rutina para comerciar con otro usuario
244                         Call IniciarComercioConUsuario(UserIndex, UserList(UserIndex).flags.TargetUser)

                        Else
246                         Call WriteConsoleMsg(UserIndex, "Servidor> Solicitud de comercio invalida, reintente...", FontTypeNames.FONTTYPE_SERVER)
                
                        End If
                
248                 Case 5
250                     Log = "Repuesta Afirmativa 5"
                
252                     If MapInfo(UserList(UserIndex).Pos.Map).Newbie Then
254                         Call WarpToLegalPos(UserIndex, 140, 53, 58)
                    
256                         If UserList(UserIndex).donador.activo = 0 Then ' Donador no espera tiempo
258                             Call SendData(SendTarget.ToPCArea, UserIndex, PrepareMessageParticleFX(UserList(UserIndex).Char.CharIndex, ParticulasIndex.Resucitar, 400, False))
260                             Call SendData(SendTarget.ToPCArea, UserIndex, PrepareMessageBarFx(UserList(UserIndex).Char.CharIndex, 400, Accion_Barra.Resucitar))
                            Else
262                             Call SendData(SendTarget.ToPCArea, UserIndex, PrepareMessageParticleFX(UserList(UserIndex).Char.CharIndex, ParticulasIndex.Resucitar, 10, False))
264                             Call SendData(SendTarget.ToPCArea, UserIndex, PrepareMessageBarFx(UserList(UserIndex).Char.CharIndex, 10, Accion_Barra.Resucitar))

                            End If
                    
266                         UserList(UserIndex).Accion.AccionPendiente = True
268                         UserList(UserIndex).Accion.Particula = ParticulasIndex.Resucitar
270                         UserList(UserIndex).Accion.TipoAccion = Accion_Barra.Resucitar
    
272                         Call SendData(SendTarget.ToPCArea, UserIndex, PrepareMessagePlayWave("104", UserList(UserIndex).Pos.X, UserList(UserIndex).Pos.Y))
                            'Call WriteConsoleMsg(UserIndex, "El Cura lanza unas palabras al aire. Comienzas a sentir como tu cuerpo se vuelve a formar...", FontTypeNames.FONTTYPE_INFO)
274                         Call WriteLocaleMsg(UserIndex, "82", FontTypeNames.FONTTYPE_INFOIAO)
                        Else
276                         Call WriteConsoleMsg(UserIndex, "Ya no te encuentras en un mapa newbie.", FontTypeNames.FONTTYPE_INFOIAO)

                        End If
                
278                 Case Else
280                     Call WriteConsoleMsg(UserIndex, "No tienes preguntas pendientes.", FontTypeNames.FONTTYPE_INFOIAO)
                    
                End Select
        
            Else
282             Log = "Repuesta negativa"
        
284             Select Case UserList(UserIndex).flags.pregunta

                    Case 1
286                     Log = "Repuesta negativa 1"

288                     If UserList(UserIndex).Grupo.PropuestaDe <> 0 Then
290                         Call WriteConsoleMsg(UserList(UserIndex).Grupo.PropuestaDe, "El usuario no esta interesado en formar parte del grupo.", FontTypeNames.FONTTYPE_INFOIAO)

                        End If

292                     UserList(UserIndex).Grupo.PropuestaDe = 0
294                     Call WriteConsoleMsg(UserIndex, "Has rechazado la propuesta.", FontTypeNames.FONTTYPE_INFOIAO)
                
296                 Case 2
298                     Log = "Repuesta negativa 2"
302                     Call WriteConsoleMsg(UserIndex, "¡Continuas siendo neutral!", FontTypeNames.FONTTYPE_INFOIAO)
304                     Call VolverCriminal(UserIndex)

306                 Case 3
308                     Log = "Repuesta negativa 3"
                    
310                     Select Case UserList(UserIndex).PosibleHogar

                            Case eCiudad.cUllathorpe
312                             DeDonde = "Ullathorpe"
                            
314                         Case eCiudad.cNix
316                             DeDonde = "Nix"
                
318                         Case eCiudad.cBanderbill
320                             DeDonde = "Banderbill"
                        
322                         Case eCiudad.cLindos 'Vamos a tener que ir por todo el desierto... uff!
324                             DeDonde = "Lindos"
                            
326                         Case eCiudad.cArghal
328                             DeDonde = " Arghal"
                            
330                         Case eCiudad.cArkhein
332                             DeDonde = " Arkhein"
                            
334                         Case Else
336                             DeDonde = "Ullathorpe"

                        End Select
                    
338                     If UserList(UserIndex).flags.TargetNPC <> 0 Then
340                         Call WriteChatOverHead(UserIndex, "¡No hay problema " & UserList(UserIndex).name & "! Sos bienvenido en " & DeDonde & " cuando gustes.", NpcList(UserList(UserIndex).flags.TargetNPC).Char.CharIndex, vbWhite)

                        End If

342                     UserList(UserIndex).PosibleHogar = UserList(UserIndex).Hogar
                    
344                 Case 4
346                     Log = "Repuesta negativa 4"
                    
348                     If UserList(UserIndex).flags.TargetUser <> 0 Then
350                         Call WriteConsoleMsg(UserList(UserIndex).flags.TargetUser, "El usuario no desea comerciar en este momento.", FontTypeNames.FONTTYPE_INFO)

                        End If

352                 Case 5
354                     Log = "Repuesta negativa 5"
                        'No hago nada. dijo que no lo resucite
                        
356                 Case Else
358                     Call WriteConsoleMsg(UserIndex, "No tienes preguntas pendientes.", FontTypeNames.FONTTYPE_INFOIAO)

                End Select
            
            End If
        
            'If we got here then packet is complete, copy data back to original queue
360         Call .incomingData.CopyBuffer(Buffer)

        End With
    
        Exit Sub
    
ErrHandler:

362     LogError "Error ResponderPregunta " & Log

        Dim Error As Long

364     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
366     Set Buffer = Nothing
    
368     If Error <> 0 Then Err.raise Error

End Sub

Private Sub HandleRequestGrupo(ByVal UserIndex As Integer)

        On Error GoTo hErr

        'Author: Pablo Mercavides
        'Remove packet ID
100     Call UserList(UserIndex).incomingData.ReadInteger

102     Call WriteDatosGrupo(UserIndex)
    
        Exit Sub
    
hErr:
104     LogError "Error HandleRequestGrupo"

End Sub

Public Sub WriteDatosGrupo(ByVal UserIndex As Integer)

        Dim i As Byte

        'Author: Pablo Mercavides
        On Error GoTo ErrHandler

100     With UserList(UserIndex).outgoingData
102         Call .WriteByte(ServerPacketID.DatosGrupo)
104         Call .WriteBoolean(UserList(UserIndex).Grupo.EnGrupo)
        
106         If UserList(UserIndex).Grupo.EnGrupo = True Then
108             Call .WriteByte(UserList(UserList(UserIndex).Grupo.Lider).Grupo.CantidadMiembros)
                'Call .WriteByte(UserList(UserList(UserIndex).Grupo.Lider).name)
   
110             If UserList(UserIndex).Grupo.Lider = UserIndex Then
             
112                 For i = 1 To UserList(UserList(UserIndex).Grupo.Lider).Grupo.CantidadMiembros

114                     If i = 1 Then
116                         Call .WriteASCIIString(UserList(UserList(UserIndex).Grupo.Miembros(i)).name & "(Lider)")
                        Else
118                         Call .WriteASCIIString(UserList(UserList(UserIndex).Grupo.Miembros(i)).name)

                        End If

120                 Next i

                Else
          
122                 For i = 1 To UserList(UserList(UserIndex).Grupo.Lider).Grupo.CantidadMiembros
                
124                     If i = 1 Then
126                         Call .WriteASCIIString(UserList(UserList(UserList(UserIndex).Grupo.Lider).Grupo.Miembros(i)).name & "(Lider)")
                        Else
128                         Call .WriteASCIIString(UserList(UserList(UserList(UserIndex).Grupo.Lider).Grupo.Miembros(i)).name)

                        End If

130                 Next i

                End If

            End If
   
        End With

        Exit Sub

ErrHandler:

132     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
134         Call FlushBuffer(UserIndex)
136         Resume
        End If

End Sub

Private Sub HandleAbandonarGrupo(ByVal UserIndex As Integer)
        'Author: Pablo Mercavides
        
        On Error GoTo HandleAbandonarGrupo_Err
    
        

100     With UserList(UserIndex)

            'Remove packet ID
102         Call .incomingData.ReadInteger
        
104         If UserList(UserIndex).Grupo.Lider = UserIndex Then
            
106             Call FinalizarGrupo(UserIndex)

                Dim i As Byte
            
108             For i = 2 To UserList(UserIndex).Grupo.CantidadMiembros
110                 Call WriteUbicacion(UserIndex, i, 0)
112             Next i

114             UserList(UserIndex).Grupo.CantidadMiembros = 0
116             UserList(UserIndex).Grupo.EnGrupo = False
118             UserList(UserIndex).Grupo.Lider = 0
120             UserList(UserIndex).Grupo.PropuestaDe = 0
122             Call WriteConsoleMsg(UserIndex, "Has disuelto el grupo.", FontTypeNames.FONTTYPE_INFOIAO)
124             Call RefreshCharStatus(UserIndex)
            Else
126             Call SalirDeGrupo(UserIndex)

            End If

        End With

        
        Exit Sub

HandleAbandonarGrupo_Err:
128     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleAbandonarGrupo", Erl)

        
End Sub

Public Sub WriteUbicacion(ByVal UserIndex As Integer, ByVal Miembro As Byte, ByVal GPS As Integer)

        Dim i   As Byte

        Dim X   As Byte

        Dim Y   As Byte

        Dim Map As Integer

        'Author: Pablo Mercavides
        On Error GoTo ErrHandler

100     With UserList(UserIndex).outgoingData
    
102         Call .WriteByte(ServerPacketID.ubicacion)
104         Call .WriteByte(Miembro)

106         If GPS > 0 Then
        
108             Call .WriteByte(UserList(GPS).Pos.X)
110             Call .WriteByte(UserList(GPS).Pos.Y)
112             Call .WriteInteger(UserList(GPS).Pos.Map)
            Else
114             Call .WriteByte(0)
116             Call .WriteByte(0)
118             Call .WriteInteger(0)

            End If
   
        End With

        Exit Sub

ErrHandler:

120     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
122         Call FlushBuffer(UserIndex)
124         Resume
        End If

End Sub

Private Sub HandleHecharDeGrupo(ByVal UserIndex As Integer)
        'Author: Pablo Mercavides
        
        On Error GoTo HandleHecharDeGrupo_Err
    
        

100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If

104     With UserList(UserIndex)

            'Remove packet ID
106         Call .incomingData.ReadInteger
        
            Dim Indice As Byte

108         Indice = .incomingData.ReadByte()
        
110         Call EcharMiembro(UserIndex, Indice)

        End With

        
        Exit Sub

HandleHecharDeGrupo_Err:
112     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleHecharDeGrupo", Erl)

        
End Sub

Private Sub HandleMacroPos(ByVal UserIndex As Integer)
        'Author: Pablo Mercavides
        
        On Error GoTo HandleMacroPos_Err
    
        

100     If UserList(UserIndex).incomingData.Length < 4 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub
        End If

104     With UserList(UserIndex)
            'Remove packet ID
106         Call .incomingData.ReadInteger

108         UserList(UserIndex).ChatCombate = .incomingData.ReadByte()
110         UserList(UserIndex).ChatGlobal = .incomingData.ReadByte()

        End With

        
        Exit Sub

HandleMacroPos_Err:
112     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleMacroPos", Erl)

        
End Sub

Public Sub WriteCorreoPicOn(ByVal UserIndex As Integer)

        '***************************************************
        '***************************************************
        On Error GoTo ErrHandler

100     Call UserList(UserIndex).outgoingData.WriteByte(ServerPacketID.CorreoPicOn)
        Exit Sub

ErrHandler:

102     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
104         Call FlushBuffer(UserIndex)
106         Resume
        End If

End Sub

Private Sub HandleSubastaInfo(ByVal UserIndex As Integer)
        'Author: Pablo Mercavides
        
        On Error GoTo HandleSubastaInfo_Err
    
        

100     With UserList(UserIndex)

            'Remove packet ID
102         Call .incomingData.ReadInteger
        
104         If Subasta.HaySubastaActiva Then

106             Call WriteConsoleMsg(UserIndex, "Subastador: " & Subasta.Subastador, FontTypeNames.FONTTYPE_SUBASTA)
108             Call WriteConsoleMsg(UserIndex, "Objeto: " & ObjData(Subasta.ObjSubastado).name & " (" & Subasta.ObjSubastadoCantidad & ")", FontTypeNames.FONTTYPE_SUBASTA)

110             If Subasta.HuboOferta Then
112                 Call WriteConsoleMsg(UserIndex, "Mejor oferta: " & PonerPuntos(Subasta.MejorOferta) & " monedas de oro por " & Subasta.Comprador & ".", FontTypeNames.FONTTYPE_SUBASTA)
114                 Call WriteConsoleMsg(UserIndex, "Podes realizar una oferta escribiendo /OFERTAR " & PonerPuntos(Subasta.MejorOferta + 100), FontTypeNames.FONTTYPE_SUBASTA)
                Else
116                 Call WriteConsoleMsg(UserIndex, "Oferta inicial: " & PonerPuntos(Subasta.OfertaInicial) & " monedas de oro.", FontTypeNames.FONTTYPE_SUBASTA)
118                 Call WriteConsoleMsg(UserIndex, "Podes realizar una oferta escribiendo /OFERTAR " & PonerPuntos(Subasta.OfertaInicial + 100), FontTypeNames.FONTTYPE_SUBASTA)

                End If

120             Call WriteConsoleMsg(UserIndex, "Tiempo Restante de subasta:  " & SumarTiempo(Subasta.TiempoRestanteSubasta), FontTypeNames.FONTTYPE_SUBASTA)
            
            Else
122             Call WriteConsoleMsg(UserIndex, "No hay ninguna subasta activa en este momento.", FontTypeNames.FONTTYPE_SUBASTA)

            End If

        End With
        
        Exit Sub

HandleSubastaInfo_Err:
124     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleSubastaInfo", Erl)

        
End Sub

Private Sub HandleScrollInfo(ByVal UserIndex As Integer)
        'Author: Pablo Mercavides

100     If UserList(UserIndex).incomingData.Length < 2 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
            'Remove packet ID
108         Call Buffer.ReadInteger
        
            Dim activo As Boolean

            Dim HR     As Integer

            Dim MS     As Integer

            Dim SS     As Integer

            Dim secs   As Integer
        
110         If UserList(UserIndex).flags.ScrollExp > 1 Then
112             secs = UserList(UserIndex).Counters.ScrollExperiencia
114             HR = secs \ 3600
116             MS = (secs Mod 3600) \ 60
118             SS = (secs Mod 3600) Mod 60

120             If SS > 9 Then
122                 Call WriteConsoleMsg(UserIndex, "Scroll de experiencia activo. Tiempo restante: " & MS & ":" & SS & " minuto(s).", FontTypeNames.FONTTYPE_INFOIAO)
                Else
124                 Call WriteConsoleMsg(UserIndex, "Scroll de experiencia activo. Tiempo restante: " & MS & ":0" & SS & " minuto(s).", FontTypeNames.FONTTYPE_INFOIAO)

                End If

126             activo = True

            End If

128         If UserList(UserIndex).flags.ScrollOro > 1 Then
130             secs = UserList(UserIndex).Counters.ScrollOro
132             HR = secs \ 3600
134             MS = (secs Mod 3600) \ 60
136             SS = (secs Mod 3600) Mod 60

138             If SS > 9 Then
140                 Call WriteConsoleMsg(UserIndex, "Scroll de oro activo. Tiempo restante: " & MS & ":" & SS & " minuto(s).", FontTypeNames.FONTTYPE_INFOIAO)
                Else
142                 Call WriteConsoleMsg(UserIndex, "Scroll de oro activo. Tiempo restante: " & MS & ":0" & SS & " minuto(s).", FontTypeNames.FONTTYPE_INFOIAO)

                End If

144             activo = True

            End If

146         If Not activo Then
148             Call WriteConsoleMsg(UserIndex, "No tenes ningun scroll activo.", FontTypeNames.FONTTYPE_INFOIAO)

            End If
                
150         Call .incomingData.CopyBuffer(Buffer)

        End With
    
ErrHandler:

        Dim Error As Long

152     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
154     Set Buffer = Nothing
    
156     If Error <> 0 Then Err.raise Error

End Sub

Private Sub HandleCancelarExit(ByVal UserIndex As Integer)
        'Author: Pablo Mercavides
        
        On Error GoTo HandleCancelarExit_Err
        

100     With UserList(UserIndex)
            'Remove Packet ID
102         Call .incomingData.ReadInteger
    
            'If .flags.Privilegios And (PlayerType.User Or PlayerType.Consejero Or PlayerType.SemiDios) Then Exit Sub

104         Call CancelExit(UserIndex)

        End With
        
        
        Exit Sub

HandleCancelarExit_Err:
106     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleCancelarExit", Erl)
108     Resume Next
        
End Sub

Private Sub HandleBanCuenta(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Nicolas Matias Gonzalez (NIGO)
        'Last Modification: 12/29/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 6 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadInteger
        
            Dim UserName As String

            Dim Reason   As String
        
110         UserName = Buffer.ReadASCIIString()
112         Reason = Buffer.ReadASCIIString()
        
114         If (Not .flags.Privilegios And PlayerType.RoleMaster) <> 0 And (.flags.Privilegios And (PlayerType.Admin Or PlayerType.Dios Or PlayerType.SemiDios)) <> 0 Then
116             Call BanAccount(UserIndex, UserName, Reason)

            End If
        
            'If we got here then packet is complete, copy data back to original queue
118         Call .incomingData.CopyBuffer(Buffer)

        End With

ErrHandler:

        Dim Error As Long

120     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
122     Set Buffer = Nothing
    
124     If Error <> 0 Then Err.raise Error

End Sub

Private Sub HandleUnBanCuenta(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Nicolas Matias Gonzalez (NIGO)
        'Last Modification: 12/29/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 4 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadInteger
        
            Dim UserName As String
        
110         UserName = Buffer.ReadASCIIString()
        
112         If (Not .flags.Privilegios And PlayerType.RoleMaster) <> 0 And (.flags.Privilegios And (PlayerType.Admin Or PlayerType.Dios Or PlayerType.SemiDios)) <> 0 Then
114             Call UnBanAccount(UserIndex, UserName)

            End If
        
            'If we got here then packet is complete, copy data back to original queue
116         Call .incomingData.CopyBuffer(Buffer)

        End With

ErrHandler:

        Dim Error As Long

118     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
120     Set Buffer = Nothing
    
122     If Error <> 0 Then Err.raise Error

End Sub

Private Sub HandleBanSerial(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Nicolas Matias Gonzalez (NIGO)
        'Last Modification: 12/29/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 4 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadInteger
        
            Dim UserName As String
         
110         UserName = Buffer.ReadASCIIString()
        
112         If (Not .flags.Privilegios And PlayerType.RoleMaster) <> 0 And (.flags.Privilegios And (PlayerType.Admin Or PlayerType.Dios Or PlayerType.SemiDios)) <> 0 Then
114             Call BanSerialOK(UserIndex, UserName)

            End If
        
            'If we got here then packet is complete, copy data back to original queue
116         Call .incomingData.CopyBuffer(Buffer)

        End With

ErrHandler:

        Dim Error As Long

118     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
120     Set Buffer = Nothing
    
122     If Error <> 0 Then Err.raise Error

End Sub

Private Sub HandleUnBanSerial(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Nicolas Matias Gonzalez (NIGO)
        'Last Modification: 12/29/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 4 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadInteger
        
            Dim UserName As String
         
110         UserName = Buffer.ReadASCIIString()
        
112         If (Not .flags.Privilegios And PlayerType.RoleMaster) <> 0 And (.flags.Privilegios And (PlayerType.Admin Or PlayerType.Dios Or PlayerType.SemiDios)) <> 0 Then
114             Call UnBanSerialOK(UserIndex, UserName)
            
            End If
        
            'If we got here then packet is complete, copy data back to original queue
116         Call .incomingData.CopyBuffer(Buffer)

        End With

ErrHandler:

        Dim Error As Long

118     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
120     Set Buffer = Nothing
    
122     If Error <> 0 Then Err.raise Error

End Sub

Private Sub HandleCerrarCliente(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Nicolas Matias Gonzalez (NIGO)
        'Last Modification: 12/29/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 4 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadInteger
        
            Dim UserName As String
            Dim tUser    As Integer
         
110         UserName = Buffer.ReadASCIIString()
        
            ' Solo administradores pueden cerrar clientes ajenos
112         If (.flags.Privilegios And PlayerType.Admin) <> 0 Then

114             tUser = NameIndex(UserName)
            
116             If tUser <= 0 Then
118                 Call WriteConsoleMsg(UserIndex, "El usuario no esta online.", FontTypeNames.FONTTYPE_INFO)
                Else
120                 Call SendData(SendTarget.ToAll, 0, PrepareMessageConsoleMsg(.name & " cerro el cliente de " & UserName & ".", FontTypeNames.FONTTYPE_INFO))
                    
122                 Call WriteCerrarleCliente(tUser)
                    'Call CloseSocket(tUser)
124                 Call LogGM(.name, "Cerro el cliene de:" & UserName)

                End If

            End If
        
            'If we got here then packet is complete, copy data back to original queue
126         Call .incomingData.CopyBuffer(Buffer)

        End With

ErrHandler:

        Dim Error As Long

128     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
130     Set Buffer = Nothing
    
132     If Error <> 0 Then Err.raise Error

End Sub

Private Sub HandleEventoInfo(ByVal UserIndex As Integer)
        'Author: Pablo Mercavides
        
        On Error GoTo HandleEventoInfo_Err
    
        

100     With UserList(UserIndex)

            'Remove packet ID
102         Call .incomingData.ReadInteger

104         If EventoActivo Then
106             Call WriteConsoleMsg(UserIndex, PublicidadEvento & ". Tiempo restante: " & TiempoRestanteEvento & " minuto(s).", FontTypeNames.FONTTYPE_New_Eventos)
            Else
108             Call WriteConsoleMsg(UserIndex, "Eventos> Actualmente no hay ningun evento en curso.", FontTypeNames.FONTTYPE_New_Eventos)

            End If
        
            Dim i           As Byte

            Dim encontre    As Boolean

            Dim HoraProximo As Byte
   
110         If Not HoraEvento + 1 >= 24 Then
   
112             For i = HoraEvento + 1 To 23

114                 If Evento(i).Tipo <> 0 Then
116                     encontre = True
118                     HoraProximo = i
                        Exit For

                    End If

120             Next i

            End If
        
122         If encontre = False Then

124             For i = 0 To HoraEvento

126                 If Evento(i).Tipo <> 0 Then
128                     encontre = True
130                     HoraProximo = i
                        Exit For

                    End If

132             Next i

            End If
        
134         If encontre Then
136             Call WriteConsoleMsg(UserIndex, "Eventos> El proximo evento " & DescribirEvento(HoraProximo) & " iniciara a las " & HoraProximo & ":00 horas.", FontTypeNames.FONTTYPE_New_Eventos)
            Else
138             Call WriteConsoleMsg(UserIndex, "Eventos> No hay eventos proximos.", FontTypeNames.FONTTYPE_New_Eventos)

            End If

        End With

        
        Exit Sub

HandleEventoInfo_Err:
140     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleEventoInfo", Erl)

        
End Sub

Private Sub HandleCrearEvento(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Pablo Mercavides
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 5 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadInteger
        
            Dim Tipo           As Byte

            Dim Duracion       As Byte

            Dim multiplicacion As Byte
        
110         Tipo = Buffer.ReadByte()
112         Duracion = Buffer.ReadByte()
114         multiplicacion = Buffer.ReadByte()
        
            '/
116         If .flags.Privilegios >= PlayerType.Admin Then
118             If EventoActivo = False Then
120                 If LenB(Tipo) = 0 Or LenB(Duracion) = 0 Or LenB(multiplicacion) = 0 Then
122                     Call WriteConsoleMsg(UserIndex, "Utilice /CREAREVENTO TIPO@DURACION@MULTIPLICACION.", FontTypeNames.FONTTYPE_New_Eventos)
                    Else
                
124                     Call ForzarEvento(Tipo, Duracion, multiplicacion, UserList(UserIndex).name)
                  
                    End If

                Else
126                 Call WriteConsoleMsg(UserIndex, "Ya hay un evento en curso. Finalicelo con /FINEVENTO primero.", FontTypeNames.FONTTYPE_New_Eventos)

                End If

            End If
        
            'If we got here then packet is complete, copy data back to original queue
128         Call .incomingData.CopyBuffer(Buffer)

        End With
    
ErrHandler:

        Dim Error As Long

130     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
132     Set Buffer = Nothing
    
134     If Error <> 0 Then Err.raise Error

End Sub

Private Sub HandleBanTemporal(ByVal UserIndex As Integer)

        '***************************************************
        'Author: Nicolas Matias Gonzalez (NIGO)
        'Last Modification: 12/29/06
        '
        '***************************************************
100     If UserList(UserIndex).incomingData.Length < 7 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
108         Call Buffer.ReadInteger
        
            Dim UserName As String

            Dim Reason   As String

            Dim dias     As Byte
        
110         UserName = Buffer.ReadASCIIString()
112         Reason = Buffer.ReadASCIIString()
114         dias = Buffer.ReadByte()
        
116         If (Not .flags.Privilegios And PlayerType.RoleMaster) <> 0 And (.flags.Privilegios And (PlayerType.Admin Or PlayerType.Dios Or PlayerType.SemiDios)) <> 0 Then
118             Call Admin.BanTemporal(UserName, dias, Reason, UserList(UserIndex).name)

            End If
        
            'If we got here then packet is complete, copy data back to original queue
120         Call .incomingData.CopyBuffer(Buffer)

        End With

ErrHandler:

        Dim Error As Long

122     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
124     Set Buffer = Nothing
    
126     If Error <> 0 Then Err.raise Error

End Sub

Private Sub HandleTraerShop(ByVal UserIndex As Integer)
        'Author: Pablo Mercavides
        
        On Error GoTo HandleTraerShop_Err
    

        'Remove packet ID
100     Call UserList(UserIndex).incomingData.ReadInteger
    
106     Call WriteShop(UserIndex)
        
        Exit Sub

HandleTraerShop_Err:
108     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleTraerShop", Erl)

        
End Sub

Private Sub HandleTraerRanking(ByVal UserIndex As Integer)
        'Author: Pablo Mercavides
        
        On Error GoTo HandleTraerRanking_Err
    
        

        'Remove packet ID
100     Call UserList(UserIndex).incomingData.ReadInteger
    
102     Call WriteRanking(UserIndex)
        
        
        Exit Sub

HandleTraerRanking_Err:
104     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleTraerRanking", Erl)

        
End Sub

Public Sub WriteShop(ByVal UserIndex As Integer)

        '***************************************************
        On Error GoTo ErrHandler

        Dim i              As Long

        Dim obj            As ObjData

        Dim validIndexes() As Integer

        Dim Count          As Integer
    
100     ReDim validIndexes(1 To UBound(ObjDonador()))
    
102     With UserList(UserIndex).outgoingData
104         Call .WriteByte(ServerPacketID.DonadorObj)
        
106         For i = 1 To UBound(ObjDonador())
108             Count = Count + 1
110             validIndexes(Count) = i
112         Next i
        
            ' Write the number of objects in the list
114         Call .WriteInteger(Count)
        
            ' Write the needed data of each object
116         For i = 1 To Count
118             Call .WriteInteger(ObjDonador(validIndexes(i)).ObjIndex)
120             Call .WriteInteger(ObjDonador(validIndexes(i)).Valor)
122         Next i
        
124         Call .WriteLong(CreditosDonadorCheck(UserList(UserIndex).Cuenta))
126         Call .WriteInteger(DiasDonadorCheck(UserList(UserIndex).Cuenta))

        End With

        Exit Sub

ErrHandler:

128     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
130         Call FlushBuffer(UserIndex)
132         Resume
        End If

End Sub

Public Sub WriteRanking(ByVal UserIndex As Integer)

        '***************************************************
        On Error GoTo ErrHandler

        Dim i As Byte
    
100     With UserList(UserIndex).outgoingData
102         Call .WriteByte(ServerPacketID.Ranking)

104         For i = 1 To 10
106             Call .WriteASCIIString(Rankings(1).user(i).Nick)
108             Call .WriteInteger(Rankings(1).user(i).Value)
110         Next i
        
        End With

        Exit Sub

ErrHandler:

112     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
114         Call FlushBuffer(UserIndex)
116         Resume
        End If

End Sub

Private Sub HandleComprarItem(ByVal UserIndex As Integer)
        'Author: Pablo Mercavides

100     If UserList(UserIndex).incomingData.Length < 3 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
            'Remove packet ID
108         Call Buffer.ReadInteger

            Dim ItemIndex    As Byte
        
            Dim ObjComprado  As obj

            Dim LogeoDonador As String

110         ItemIndex = Buffer.ReadByte()
        
            Dim i              As Byte

            Dim InvSlotsLibres As Byte
        
112         For i = 1 To UserList(UserIndex).CurrentInventorySlots

114             If UserList(UserIndex).Invent.Object(i).ObjIndex = 0 Then InvSlotsLibres = InvSlotsLibres + 1
116         Next i
    
            'Nos fijamos si entra
118         If InvSlotsLibres = 0 Then
120             Call WriteConsoleMsg(UserIndex, "Donación> Sin espacio en el inventario.", FontTypeNames.FONTTYPE_WARNING)
            Else

122             If CreditosDonadorCheck(UserList(UserIndex).Cuenta) - ObjDonador(ItemIndex).Valor >= 0 Then
124                 ObjComprado.Amount = ObjDonador(ItemIndex).Cantidad
126                 ObjComprado.ObjIndex = ObjDonador(ItemIndex).ObjIndex
            
128                 LogeoDonador = LogeoDonador & vbCrLf & "****************************************************" & vbCrLf
130                 LogeoDonador = LogeoDonador & "Compra iniciada. Balance de la cuenta " & CreditosDonadorCheck(UserList(UserIndex).Cuenta) & " creditos." & vbCrLf
132                 LogeoDonador = LogeoDonador & "El personaje " & UserList(UserIndex).name & "(" & UserList(UserIndex).Cuenta & ") Compro el item " & ObjData(ObjDonador(ItemIndex).ObjIndex).name & vbCrLf
134                 LogeoDonador = LogeoDonador & "Se descontaron " & CLng(ObjDonador(ItemIndex).Valor) & " creditos de la cuenta " & UserList(UserIndex).Cuenta & "." & vbCrLf
            
136                 If Not MeterItemEnInventario(UserIndex, ObjComprado) Then
138                     LogeoDonador = LogeoDonador & "El item se tiro al piso" & vbCrLf
140                     Call TirarItemAlPiso(UserList(UserIndex).Pos, ObjComprado)

                    End If
                
142                 LogeoDonador = LogeoDonador & "****************************************************" & vbCrLf
             
144                 Call RestarCreditosDonador(UserList(UserIndex).Cuenta, CLng(ObjDonador(ItemIndex).Valor))
146                 Call WriteConsoleMsg(UserIndex, "Donación> Gracias por tu compra. Tu saldo es de " & CreditosDonadorCheck(UserList(UserIndex).Cuenta) & " creditos.", FontTypeNames.FONTTYPE_WARNING)
148                 Call LogearEventoDeDonador(LogeoDonador)
150                 Call SaveUser(UserIndex)
152                 Call WriteActShop(UserIndex)
                Else
154                 Call WriteConsoleMsg(UserIndex, "Donación> Tu saldo es insuficiente. Actualmente tu saldo es de " & CreditosDonadorCheck(UserList(UserIndex).Cuenta) & " creditos.", FontTypeNames.FONTTYPE_WARNING)
156                 Call WriteActShop(UserIndex)

                End If

            End If
    
            'If we got here then packet is complete, copy data back to original queue
158         Call .incomingData.CopyBuffer(Buffer)

        End With
    
ErrHandler:

        Dim Error As Long

160     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
162     Set Buffer = Nothing
    
164     If Error <> 0 Then Err.raise Error

End Sub

Private Sub HandleCompletarViaje(ByVal UserIndex As Integer)
        'Author: Pablo Mercavides

100     If UserList(UserIndex).incomingData.Length < 7 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
        On Error GoTo ErrHandler

104     With UserList(UserIndex)

            Dim Buffer As New clsByteQueue

106         Call Buffer.CopyBuffer(.incomingData)
            'Remove packet ID
108         Call Buffer.ReadInteger

            Dim Destino As Byte

            Dim costo   As Long

110         Destino = Buffer.ReadByte()
112         costo = Buffer.ReadLong()

            'If we got here then packet is complete, copy data back to original queue
206         Call .incomingData.CopyBuffer(Buffer)

            ' WyroX: WTF el costo lo decide el cliente... Desactivo....
            Exit Sub

            If costo <= 0 Then Exit Sub

            Dim DeDonde As CityWorldPos

114         If UserList(UserIndex).Stats.GLD < costo Then
116             Call WriteConsoleMsg(UserIndex, "No tienes suficiente dinero.", FontTypeNames.FONTTYPE_INFO)
            
            Else

118             Select Case Destino

                    Case eCiudad.cUllathorpe
120                     DeDonde = CityUllathorpe
                        
122                 Case eCiudad.cNix
124                     DeDonde = CityNix
            
126                 Case eCiudad.cBanderbill
128                     DeDonde = CityBanderbill
                    
130                 Case eCiudad.cLindos 'Vamos a tener que ir por todo el desierto... uff!
132                     DeDonde = CityLindos
                        
134                 Case eCiudad.cArghal
136                     DeDonde = CityArghal
                        
138                 Case eCiudad.cArkhein
140                     DeDonde = CityArkhein
                        
142                 Case Else
144                     DeDonde = CityUllathorpe

                End Select
        
146             If DeDonde.NecesitaNave > 0 Then
148                 If UserList(UserIndex).Stats.UserSkills(eSkill.Navegacion) < 80 Then
                        Rem Call WriteConsoleMsg(UserIndex, "Debido a la peligrosidad del viaje, no puedo llevarte, ya que al menos necesitas saber manejar una barca.", FontTypeNames.FONTTYPE_INFO)
150                     Call WriteConsoleMsg(UserIndex, "Debido a la peligrosidad del viaje, no puedo llevarte, ya que al menos necesitas saber manejar una barca.", FontTypeNames.FONTTYPE_WARNING)
                    Else

152                     If UserList(UserIndex).flags.TargetNPC <> 0 Then
154                         If NpcList(UserList(UserIndex).flags.TargetNPC).SoundClose <> 0 Then
156                             Call WritePlayWave(UserIndex, NpcList(UserList(UserIndex).flags.TargetNPC).SoundClose, NO_3D_SOUND, NO_3D_SOUND)

                            End If

                        End If

158                     Call WarpToLegalPos(UserIndex, DeDonde.MapaViaje, DeDonde.ViajeX, DeDonde.ViajeY, True)
160                     Call WriteConsoleMsg(UserIndex, "Has viajado por varios días, te sientes exhausto!", FontTypeNames.FONTTYPE_WARNING)
162                     UserList(UserIndex).Stats.MinAGU = 0
164                     UserList(UserIndex).Stats.MinHam = 0
166                     UserList(UserIndex).flags.Sed = 1
168                     UserList(UserIndex).flags.Hambre = 1
                    
170                     UserList(UserIndex).Stats.GLD = UserList(UserIndex).Stats.GLD - costo
172                     Call WriteUpdateHungerAndThirst(UserIndex)
174                     Call WriteUpdateUserStats(UserIndex)

                    End If

                Else
            
                    Dim Map As Integer

                    Dim X   As Byte

                    Dim Y   As Byte
            
176                 Map = DeDonde.MapaViaje
178                 X = DeDonde.ViajeX
180                 Y = DeDonde.ViajeY

182                 If UserList(UserIndex).flags.TargetNPC <> 0 Then
184                     If NpcList(UserList(UserIndex).flags.TargetNPC).SoundClose <> 0 Then
186                         Call WritePlayWave(UserIndex, NpcList(UserList(UserIndex).flags.TargetNPC).SoundClose, NO_3D_SOUND, NO_3D_SOUND)

                        End If

                    End If
                
188                 Call WarpUserChar(UserIndex, Map, X, Y, True)
190                 Call WriteConsoleMsg(UserIndex, "Has viajado por varios días, te sientes exhausto!", FontTypeNames.FONTTYPE_WARNING)
192                 UserList(UserIndex).Stats.MinAGU = 0
194                 UserList(UserIndex).Stats.MinHam = 0
196                 UserList(UserIndex).flags.Sed = 1
198                 UserList(UserIndex).flags.Hambre = 1
                
200                 UserList(UserIndex).Stats.GLD = UserList(UserIndex).Stats.GLD - costo
202                 Call WriteUpdateHungerAndThirst(UserIndex)
204                 Call WriteUpdateUserStats(UserIndex)
        
                End If

            End If

        End With
    
ErrHandler:

        Dim Error As Long

208     Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
210     Set Buffer = Nothing
    
212     If Error <> 0 Then Err.raise Error

End Sub

Public Sub WriteActShop(ByVal UserIndex As Integer)

        'Author: Pablo Mercavides
        On Error GoTo ErrHandler

100     With UserList(UserIndex).outgoingData
    
102         Call .WriteByte(ServerPacketID.ActShop)
104         Call .WriteLong(CreditosDonadorCheck(UserList(UserIndex).Cuenta))
        
106         Call .WriteInteger(DiasDonadorCheck(UserList(UserIndex).Cuenta))

        End With

        Exit Sub

ErrHandler:

108     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
110         Call FlushBuffer(UserIndex)
112         Resume
        End If

End Sub

Public Sub WriteViajarForm(ByVal UserIndex As Integer, ByVal NpcIndex As Integer)

        'Author: Pablo Mercavides
        On Error GoTo ErrHandler

100     With UserList(UserIndex).outgoingData
    
102         Call .WriteByte(ServerPacketID.ViajarForm)
        
            Dim destinos As Byte

            Dim i        As Byte

104         destinos = NpcList(NpcIndex).NumDestinos
        
106         Call .WriteByte(destinos)
        
108         For i = 1 To destinos
110             Call .WriteASCIIString(NpcList(NpcIndex).Dest(i))
112         Next i
        
114         Call .WriteByte(NpcList(NpcIndex).Interface)

        End With

        Exit Sub

ErrHandler:

116     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
118         Call FlushBuffer(UserIndex)
120         Resume
        End If

End Sub

Public Sub HandleQuest(ByVal UserIndex As Integer)
        
        On Error GoTo HandleQuest_Err
        

        '$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
        'Maneja el paquete Quest.
        'Last modified: 28/01/2010 by Amraphen
        '$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
        Dim NpcIndex As Integer

        Dim tmpByte  As Byte
 
        'Leemos el paquete
    
100     Call UserList(UserIndex).incomingData.ReadInteger
 
102     NpcIndex = UserList(UserIndex).flags.TargetNPC
    
104     If NpcIndex = 0 Then Exit Sub
    
        'Esta el personaje en la distancia correcta?
106     If Distancia(UserList(UserIndex).Pos, NpcList(NpcIndex).Pos) > 5 Then
108         Call WriteConsoleMsg(UserIndex, "Estas demasiado lejos.", FontTypeNames.FONTTYPE_INFO)
            Exit Sub

        End If
    
        'El NPC hace quests?
110     If NpcList(NpcIndex).NumQuest = 0 Then
112         Call SendData(SendTarget.ToPCArea, UserIndex, PrepareMessageChatOverHead("No tengo ninguna mision para ti.", NpcList(NpcIndex).Char.CharIndex, vbWhite))
            Exit Sub

        End If
    
        'El personaje ya hizo la quest?
      '  If UserDoneQuest(UserIndex, NpcList(NpcIndex).QuestNumber) Then
        '    Call SendData(SendTarget.ToPCArea, UserIndex, PrepareMessageChatOverHead("Ya has hecho una mision para mi.", NpcList(NpcIndex).Char.CharIndex, vbWhite))
         '   Exit Sub

       ' End If
        
        
        
        
        
        
 
        'El personaje tiene suficiente nivel?
       ' If UserList(UserIndex).Stats.ELV < QuestList(NpcList(NpcIndex).QuestNumber).RequiredLevel Then
          '  Call SendData(SendTarget.ToPCArea, UserIndex, PrepareMessageChatOverHead("Debes ser por lo menos nivel " & QuestList(NpcList(NpcIndex).QuestNumber).RequiredLevel & " para emprender esta mision.", NpcList(NpcIndex).Char.CharIndex, vbWhite))
         '   Exit Sub

        'End If
    
        'A esta altura ya analizo todas las restricciones y esta preparado para el handle propiamente dicho
 
       ' tmpByte = TieneQuest(UserIndex, NpcList(NpcIndex).QuestNumber)
    
      '  If tmpByte Then
            'El usuario esta haciendo la quest, entonces va a hablar con el NPC para recibir la recompensa.
         '   Call FinishQuest(UserIndex, NpcList(NpcIndex).QuestNumber, tmpByte)
      '  Else
            'El usuario no esta haciendo la quest, entonces primero recibe un informe con los detalles de la mision.
         '   tmpByte = FreeQuestSlot(UserIndex)
        
            'El personaje tiene algun slot de quest para la nueva quest?
         '   If tmpByte = 0 Then
114             Call SendData(SendTarget.ToPCArea, UserIndex, PrepareMessageChatOverHead("Estas haciendo demasiadas misiones. Vuelve cuando hayas completado alguna.", NpcList(NpcIndex).Char.CharIndex, vbWhite))
         ''       Exit Sub

       '     End If
        
            'Enviamos los detalles de la quest
         '   Call WriteQuestDetails(UserIndex, NpcList(NpcIndex).QuestNumber)

       ' End If

        
        Exit Sub

HandleQuest_Err:
116     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleQuest", Erl)
118     Resume Next
        
End Sub

Public Sub HandleQuestAccept(ByVal UserIndex As Integer)
        
        On Error GoTo HandleQuestAccept_Err
        

        '$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
        'Maneja el evento de aceptar una quest.
        'Last modified: 31/01/2010 by Amraphen
        '$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
        Dim NpcIndex  As Integer

        Dim QuestSlot As Byte
        
        Dim Indice As Byte
 
100     Call UserList(UserIndex).incomingData.ReadInteger

102     Indice = UserList(UserIndex).incomingData.ReadByte
 
104     NpcIndex = UserList(UserIndex).flags.TargetNPC
    
106     If NpcIndex = 0 Then Exit Sub
108     If Indice = 0 Then Exit Sub
    
        'Esta el personaje en la distancia correcta?
110     If Distancia(UserList(UserIndex).Pos, NpcList(NpcIndex).Pos) > 5 Then
112         Call WriteConsoleMsg(UserIndex, "Estas demasiado lejos.", FontTypeNames.FONTTYPE_INFO)
            Exit Sub

        End If
        
114     If TieneQuest(UserIndex, NpcList(NpcIndex).QuestNumber(Indice)) Then
116         Call WriteConsoleMsg(UserIndex, "La quest ya esta en curso.", FontTypeNames.FONTTYPE_INFOIAO)
            Exit Sub
        End If
        
        
        
        'El personaje completo la quest que requiere?
118     If QuestList(NpcList(NpcIndex).QuestNumber(Indice)).RequiredQuest > 0 Then
120         If Not UserDoneQuest(UserIndex, QuestList(NpcList(NpcIndex).QuestNumber(Indice)).RequiredQuest) Then
122             Call WriteChatOverHead(UserIndex, "Debes completas la quest " & QuestList(QuestList(NpcList(NpcIndex).QuestNumber(Indice)).RequiredQuest).nombre & " para emprender esta mision.", NpcList(NpcIndex).Char.CharIndex, vbYellow)
                Exit Sub
            End If
        End If
        

        'El personaje tiene suficiente nivel?
124     If UserList(UserIndex).Stats.ELV < QuestList(NpcList(NpcIndex).QuestNumber(Indice)).RequiredLevel Then
126         Call WriteChatOverHead(UserIndex, "Debes ser por lo menos nivel " & QuestList(NpcList(NpcIndex).QuestNumber(Indice)).RequiredLevel & " para emprender esta mision.", NpcList(NpcIndex).Char.CharIndex, vbYellow)
            Exit Sub
        End If
        
        
        'El personaje ya hizo la quest?
128     If UserDoneQuest(UserIndex, NpcList(NpcIndex).QuestNumber(Indice)) Then
130         Call WriteChatOverHead(UserIndex, "QUESTNEXT*" & NpcList(NpcIndex).QuestNumber(Indice), NpcList(NpcIndex).Char.CharIndex, vbYellow)
            Exit Sub
        End If
    
132     QuestSlot = FreeQuestSlot(UserIndex)


134     If QuestSlot = 0 Then
136         Call WriteChatOverHead(UserIndex, "Debes completar las misiones en curso para poder aceptar más misiones.", NpcList(NpcIndex).Char.CharIndex, vbYellow)
            Exit Sub
        End If
        
        
        



    
        'Agregamos la quest.
138     With UserList(UserIndex).QuestStats.Quests(QuestSlot)
140         .QuestIndex = NpcList(NpcIndex).QuestNumber(Indice)
        
142         If QuestList(.QuestIndex).RequiredNPCs Then ReDim .NPCsKilled(1 To QuestList(.QuestIndex).RequiredNPCs)
144         If QuestList(.QuestIndex).RequiredTargetNPCs Then ReDim .NPCsTarget(1 To QuestList(.QuestIndex).RequiredTargetNPCs)
146         Call WriteConsoleMsg(UserIndex, "Has aceptado la mision " & Chr(34) & QuestList(.QuestIndex).nombre & Chr(34) & ".", FontTypeNames.FONTTYPE_INFOIAO)
148         Call WriteUpdateNPCSimbolo(UserIndex, NpcIndex, 4)
        
        End With

        
        Exit Sub

HandleQuestAccept_Err:
150     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleQuestAccept", Erl)
152     Resume Next
        
End Sub

Public Sub HandleQuestDetailsRequest(ByVal UserIndex As Integer)
        
        On Error GoTo HandleQuestDetailsRequest_Err
        

        '$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
        'Maneja el paquete QuestInfoRequest.
        'Last modified: 30/01/2010 by Amraphen
        '$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
        Dim QuestSlot As Byte
 
        'Leemos el paquete
100     Call UserList(UserIndex).incomingData.ReadInteger
    
102     QuestSlot = UserList(UserIndex).incomingData.ReadByte
    
104     Call WriteQuestDetails(UserIndex, UserList(UserIndex).QuestStats.Quests(QuestSlot).QuestIndex, QuestSlot)

        
        Exit Sub

HandleQuestDetailsRequest_Err:
106     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleQuestDetailsRequest", Erl)
108     Resume Next
        
End Sub
 
Public Sub HandleQuestAbandon(ByVal UserIndex As Integer)
        '$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
        'Maneja el paquete QuestAbandon.
        'Last modified: 31/01/2010 by Amraphen
        '$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
        'Leemos el paquete.
        
        On Error GoTo HandleQuestAbandon_Err
        
100     Call UserList(UserIndex).incomingData.ReadInteger
    
        'Borramos la quest.
102     Call CleanQuestSlot(UserIndex, UserList(UserIndex).incomingData.ReadByte)
    
        'Ordenamos la lista de quests del usuario.
104     Call ArrangeUserQuests(UserIndex)
    
        'Enviamos la lista de quests actualizada.
106     Call WriteQuestListSend(UserIndex)

        
        Exit Sub

HandleQuestAbandon_Err:
108     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleQuestAbandon", Erl)
110     Resume Next
        
End Sub

Public Sub HandleQuestListRequest(ByVal UserIndex As Integer)
        '$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
        'Maneja el paquete QuestListRequest.
        'Last modified: 30/01/2010 by Amraphen
        '$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
        
        On Error GoTo HandleQuestListRequest_Err
        
        'Leemos el paquete
100     Call UserList(UserIndex).incomingData.ReadInteger

104     Call WriteQuestListSend(UserIndex)
        
        Exit Sub

HandleQuestListRequest_Err:
108     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleQuestListRequest", Erl)
110     Resume Next
        
End Sub

Public Sub WriteQuestDetails(ByVal UserIndex As Integer, ByVal QuestIndex As Integer, Optional QuestSlot As Byte = 0)

        '$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
        'Envía el paquete QuestDetails y la informaciín correspondiente.
        'Last modified: 30/01/2010 by Amraphen
        '$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
        Dim i As Integer
 
        On Error GoTo ErrHandler

100     With UserList(UserIndex).outgoingData
            'ID del paquete
102         Call .WriteByte(ServerPacketID.QuestDetails)
        
            'Se usa la variable QuestSlot para saber si enviamos la info de una quest ya empezada o la info de una quest que no se aceptí todavía (1 para el primer caso y 0 para el segundo)
104         Call .WriteByte(IIf(QuestSlot, 1, 0))
        
            'Enviamos nombre, descripciín y nivel requerido de la quest
            'Call .WriteASCIIString(QuestList(QuestIndex).Nombre)
            'Call .WriteASCIIString(QuestList(QuestIndex).Desc)
106         Call .WriteInteger(QuestIndex)
108         Call .WriteByte(QuestList(QuestIndex).RequiredLevel)
        
110         Call .WriteInteger(QuestList(QuestIndex).RequiredQuest)
        
            'Enviamos la cantidad de npcs requeridos
112         Call .WriteByte(QuestList(QuestIndex).RequiredNPCs)

114         If QuestList(QuestIndex).RequiredNPCs Then

                'Si hay npcs entonces enviamos la lista
116             For i = 1 To QuestList(QuestIndex).RequiredNPCs
118                 Call .WriteInteger(QuestList(QuestIndex).RequiredNPC(i).Amount)
120                 Call .WriteInteger(QuestList(QuestIndex).RequiredNPC(i).NpcIndex)

                    'Si es una quest ya empezada, entonces mandamos los NPCs que matí.
122                 If QuestSlot Then
124                     Call .WriteInteger(UserList(UserIndex).QuestStats.Quests(QuestSlot).NPCsKilled(i))

                    End If

126             Next i

            End If
        
            'Enviamos la cantidad de objs requeridos
128         Call .WriteByte(QuestList(QuestIndex).RequiredOBJs)

130         If QuestList(QuestIndex).RequiredOBJs Then

                'Si hay objs entonces enviamos la lista
132             For i = 1 To QuestList(QuestIndex).RequiredOBJs
134                 Call .WriteInteger(QuestList(QuestIndex).RequiredOBJ(i).Amount)
136                 Call .WriteInteger(QuestList(QuestIndex).RequiredOBJ(i).ObjIndex)
                
                    'escribe si tiene ese objeto en el inventario y que cantidad
138                 Call .WriteInteger(CantidadObjEnInv(UserIndex, QuestList(QuestIndex).RequiredOBJ(i).ObjIndex))
                   ' Call .WriteInteger(0)
                
140             Next i

            End If
    
            'Enviamos la recompensa de oro y experiencia.
142         Call .WriteLong((QuestList(QuestIndex).RewardGLD * OroMult))
144         Call .WriteLong((QuestList(QuestIndex).RewardEXP * ExpMult))
        
            'Enviamos la cantidad de objs de recompensa
146         Call .WriteByte(QuestList(QuestIndex).RewardOBJs)

148         If QuestList(QuestIndex).RewardOBJs Then

                'si hay objs entonces enviamos la lista
150             For i = 1 To QuestList(QuestIndex).RewardOBJs
152                 Call .WriteInteger(QuestList(QuestIndex).RewardOBJ(i).Amount)
154                 Call .WriteInteger(QuestList(QuestIndex).RewardOBJ(i).ObjIndex)
156             Next i

            End If

        End With

        Exit Sub
 
ErrHandler:

158     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
160         Call FlushBuffer(UserIndex)
162         Resume
        End If

End Sub
 
Public Sub WriteQuestListSend(ByVal UserIndex As Integer)

        '$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
        'Envía el paquete QuestList y la informaciín correspondiente.
        'Last modified: 30/01/2010 by Amraphen
        '$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
        Dim i       As Integer

        Dim tmpStr  As String

        Dim tmpByte As Byte
 
        On Error GoTo ErrHandler
 
100     With UserList(UserIndex)
102         .outgoingData.WriteByte ServerPacketID.QuestListSend
    
104         For i = 1 To MAXUSERQUESTS

106             If .QuestStats.Quests(i).QuestIndex Then
108                 tmpByte = tmpByte + 1
110                 tmpStr = tmpStr & QuestList(.QuestStats.Quests(i).QuestIndex).nombre & "-"

                End If

112         Next i
        
            'Escribimos la cantidad de quests
114         Call .outgoingData.WriteByte(tmpByte)
        
            'Escribimos la lista de quests (sacamos el íltimo caracter)
116         If tmpByte Then
118             Call .outgoingData.WriteASCIIString(Left$(tmpStr, Len(tmpStr) - 1))

            End If

        End With

        Exit Sub
 
ErrHandler:

120     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
122         Call FlushBuffer(UserIndex)
124         Resume
        End If

End Sub

Public Sub WriteNpcQuestListSend(ByVal UserIndex As Integer, ByVal NpcIndex As Integer)

        '$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
        'Envía el paquete QuestList y la informaciín correspondiente.
        'Last modified: 30/01/2010 by Amraphen
        '$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
        Dim i       As Integer
        Dim j       As Integer

        Dim tmpStr  As String

        Dim tmpByte As Byte
 
        On Error GoTo ErrHandler
    
        Dim QuestIndex As Integer
    
    
    
 
100     With UserList(UserIndex).outgoingData
102         .WriteByte ServerPacketID.NpcQuestListSend
        
        
104         Call .WriteByte(NpcList(NpcIndex).NumQuest) 'Escribimos primero cuantas quest tiene el NPC
    
106         For j = 1 To NpcList(NpcIndex).NumQuest
        
108         QuestIndex = NpcList(NpcIndex).QuestNumber(j)
            
110         Call .WriteInteger(QuestIndex)
112         Call .WriteByte(QuestList(QuestIndex).RequiredLevel)
        
        
114         Call .WriteInteger(QuestList(QuestIndex).RequiredQuest)
        
            'Enviamos la cantidad de npcs requeridos
116         Call .WriteByte(QuestList(QuestIndex).RequiredNPCs)

118         If QuestList(QuestIndex).RequiredNPCs Then

                'Si hay npcs entonces enviamos la lista
120             For i = 1 To QuestList(QuestIndex).RequiredNPCs
122                 Call .WriteInteger(QuestList(QuestIndex).RequiredNPC(i).Amount)
124                 Call .WriteInteger(QuestList(QuestIndex).RequiredNPC(i).NpcIndex)

                    'Si es una quest ya empezada, entonces mandamos los NPCs que matí.
                    'If QuestSlot Then
                       ' Call .WriteInteger(UserList(UserIndex).QuestStats.Quests(QuestSlot).NPCsKilled(i))

                   ' End If

126             Next i

            End If
        
            'Enviamos la cantidad de objs requeridos
128         Call .WriteByte(QuestList(QuestIndex).RequiredOBJs)

130         If QuestList(QuestIndex).RequiredOBJs Then

                'Si hay objs entonces enviamos la lista
132             For i = 1 To QuestList(QuestIndex).RequiredOBJs
134                 Call .WriteInteger(QuestList(QuestIndex).RequiredOBJ(i).Amount)
136                 Call .WriteInteger(QuestList(QuestIndex).RequiredOBJ(i).ObjIndex)
138             Next i

            End If
    
            'Enviamos la recompensa de oro y experiencia.
140         Call .WriteLong(QuestList(QuestIndex).RewardGLD * OroMult)
142         Call .WriteLong(QuestList(QuestIndex).RewardEXP * ExpMult)
        
            'Enviamos la cantidad de objs de recompensa
144         Call .WriteByte(QuestList(QuestIndex).RewardOBJs)

146         If QuestList(QuestIndex).RewardOBJs Then

                'si hay objs entonces enviamos la lista
148             For i = 1 To QuestList(QuestIndex).RewardOBJs
150                 Call .WriteInteger(QuestList(QuestIndex).RewardOBJ(i).Amount)
152                 Call .WriteInteger(QuestList(QuestIndex).RewardOBJ(i).ObjIndex)
154             Next i

            End If
        
        
            'Enviamos el estado de la QUEST
            '0 Disponible
            '1 EN CURSO
            '2 REALIZADA
            '3 no puede hacerla
        
            Dim PuedeHacerla As Boolean
        
            'La tiene aceptada el usuario?
156         If TieneQuest(UserIndex, QuestIndex) Then
158             Call .WriteByte(1)
            Else
160             If UserDoneQuest(UserIndex, QuestIndex) Then
162                 Call .WriteByte(2)
                Else
164                 PuedeHacerla = True
166                 If QuestList(QuestIndex).RequiredQuest > 0 Then
168                     If Not UserDoneQuest(UserIndex, QuestList(QuestIndex).RequiredQuest) Then
170                         PuedeHacerla = False
                        End If
                    End If
                
172                 If UserList(UserIndex).Stats.ELV < QuestList(QuestIndex).RequiredLevel Then
174                     PuedeHacerla = False
                    End If
                
176                 If PuedeHacerla Then
178                     Call .WriteByte(0)
                    Else
180                     Call .WriteByte(3)
                    End If
                
                End If
                
            End If
                 

182         Next j
        
            'Escribimos la cantidad de quests
           ' Call .WriteByte(tmpByte)
        
            'Escribimos la lista de quests (sacamos el íltimo caracter)
           ' If tmpByte Then
             '   Call .WriteASCIIString(Left$(tmpStr, Len(tmpStr) - 1))

           ' End If

        End With

        Exit Sub
 
ErrHandler:

184     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
186         Call FlushBuffer(UserIndex)
188         Resume
        End If

End Sub

''
' Handle the "CreatePretorianClan" message
'
' @param userIndex The index of the user sending the message

Public Sub HandleCreatePretorianClan(ByVal UserIndex As Integer)
        '***************************************************
        'Author: ZaMa
        'Last Modification: 29/10/2010
        '***************************************************

        On Error GoTo ErrHandler

        Dim Map   As Integer
        Dim X     As Byte
        Dim Y     As Byte
        Dim index As Long
    
100     With UserList(UserIndex)
        
            'Remove packet ID
102         Call .incomingData.ReadInteger
        
104         Map = .incomingData.ReadInteger()
106         X = .incomingData.ReadByte()
108         Y = .incomingData.ReadByte()
        
            ' User Admin?
110         If .flags.Privilegios And (PlayerType.Admin Or PlayerType.Dios) = 0 Then Exit Sub
        
            ' Valid pos?
112         If Not InMapBounds(Map, X, Y) Then
114             Call WriteConsoleMsg(UserIndex, "Posicion invalida.", FontTypeNames.FONTTYPE_INFO)
                Exit Sub

            End If
        
            ' Choose pretorian clan index
116         If Map = MAPA_PRETORIANO Then
118             index = ePretorianType.Default ' Default clan
            Else
120             index = ePretorianType.Custom ' Custom Clan
            End If
            
            ' Is already active any clan?
122         If Not ClanPretoriano(index).Active Then
            
124             If Not ClanPretoriano(index).SpawnClan(Map, X, Y, index) Then
126                 Call WriteConsoleMsg(UserIndex, "La posicion no es apropiada para crear el clan", FontTypeNames.FONTTYPE_INFO)

                End If
        
            Else
128             Call WriteConsoleMsg(UserIndex, "El clan pretoriano se encuentra activo en el mapa " & ClanPretoriano(index).ClanMap & ". Utilice /EliminarPretorianos MAPA y reintente.", FontTypeNames.FONTTYPE_INFO)

            End If
    
        End With

        Exit Sub

ErrHandler:
130     Call LogError("Error en HandleCreatePretorianClan. Error: " & Err.Number & " - " & Err.Description)

End Sub

''
' Handle the "CreatePretorianClan" message
'
' @param userIndex The index of the user sending the message

Public Sub HandleDeletePretorianClan(ByVal UserIndex As Integer)
        '***************************************************
        'Author: ZaMa
        'Last Modification: 29/10/2010
        '***************************************************

        On Error GoTo ErrHandler
    
        Dim Map   As Integer
        Dim index As Long
    
100     With UserList(UserIndex)
        
            'Remove packet ID
102         Call .incomingData.ReadInteger
        
104         Map = .incomingData.ReadInteger()
        
            ' User Admin?
106         If .flags.Privilegios And (PlayerType.Admin Or PlayerType.Dios) = 0 Then Exit Sub
        
            ' Valid map?
108         If Map < 1 Or Map > NumMaps Then
110             Call WriteConsoleMsg(UserIndex, "Mapa invalido.", FontTypeNames.FONTTYPE_INFO)
                Exit Sub

            End If
        
            'Los sacamos correctamente.
112         Call EliminarPretorianos(Map)
    
        End With

        Exit Sub

ErrHandler:
114     Call LogError("Error en HandleDeletePretorianClan. Error: " & Err.Number & " - " & Err.Description)

End Sub

''
' Handles the "Consulta" message.
'
' @param    userIndex The index of the user sending the message.

Private Sub HandleConsulta(ByVal UserIndex As Integer)
        '***************************************************
        'Author: ZaMa
        'Last Modification: 01/05/2010
        'Habilita/Deshabilita el modo consulta.
        '01/05/2010: ZaMa - Agrego validaciones.
        '16/09/2010: ZaMa - No se hace visible en los clientes si estaba navegando (porque ya lo estaba).
        '***************************************************
    
100     If UserList(UserIndex).incomingData.Length < 4 Then
102         Call Err.raise(UserList(UserIndex).incomingData.NotEnoughDataErrCode)
            Exit Sub

        End If
    
        Dim UserConsulta As Integer
    
104     With UserList(UserIndex)

            Dim Buffer As clsByteQueue
106         Set Buffer = New clsByteQueue
108         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
110         Call Buffer.ReadInteger
        
112         Dim Nick As String: Nick = Buffer.ReadASCIIString
        
            ' De aca en adelante podes meter Exit Sub sin q esplote todo alv. ;)
114         Call .incomingData.CopyBuffer(Buffer)
        
            ' Comando exclusivo para gms
116         If Not EsGM(UserIndex) Then Exit Sub
        
118         If Len(Nick) <> 0 Then
120             UserConsulta = NameIndex(Nick)
            
                'Se asegura que el target exista
122             If UserConsulta <= 0 Then
124                 Call WriteConsoleMsg(UserIndex, "El usuario se encuentra offline.", FontTypeNames.FONTTYPE_INFO)
                    Exit Sub
    
                End If
            
            Else
        
126             UserConsulta = .flags.TargetUser
            
                'Se asegura que el target exista
128             If UserConsulta <= 0 Then
130                 Call WriteConsoleMsg(UserIndex, "Primero tienes que seleccionar un usuario, haz click izquierdo sobre el.", FontTypeNames.FONTTYPE_INFO)
                    Exit Sub
    
                End If
            
            End If

            ' No podes ponerte a vos mismo en modo consulta.
132         If UserConsulta = UserIndex Then Exit Sub
        
            ' No podes estra en consulta con otro gm
134         If EsGM(UserConsulta) Then
136             Call WriteConsoleMsg(UserIndex, "No puedes iniciar el modo consulta con otro administrador.", FontTypeNames.FONTTYPE_INFO)
                Exit Sub

            End If

            ' Si ya estaba en consulta, termina la consulta
138         If UserList(UserConsulta).flags.EnConsulta Then
140             Call WriteConsoleMsg(UserIndex, "Has terminado el modo consulta con " & UserList(UserConsulta).name & ".", FontTypeNames.FONTTYPE_INFOBOLD)
142             Call WriteConsoleMsg(UserConsulta, "Has terminado el modo consulta.", FontTypeNames.FONTTYPE_INFOBOLD)
            
144             Call LogGM(.name, "Termino consulta con " & UserList(UserConsulta).name)
            
146             UserList(UserConsulta).flags.EnConsulta = False
        
                ' Sino la inicia
            Else
        
148             Call WriteConsoleMsg(UserIndex, "Has iniciado el modo consulta con " & UserList(UserConsulta).name & ".", FontTypeNames.FONTTYPE_INFOBOLD)
150             Call WriteConsoleMsg(UserConsulta, "Has iniciado el modo consulta.", FontTypeNames.FONTTYPE_INFOBOLD)
            
152             Call LogGM(.name, "Inicio consulta con " & UserList(UserConsulta).name)
            
154             With UserList(UserConsulta)
156                 If Not EstaPCarea(UserIndex, UserConsulta) Then
158                     Call WarpUserChar(UserIndex, .Pos.Map, .Pos.X, .Pos.Y, True)
                    End If
            
160                 .flags.EnConsulta = True
                
                    ' Pierde invi u ocu
162                 If .flags.invisible = 1 Or .flags.Oculto = 1 Then
                
164                     .flags.Oculto = 0
166                     .flags.invisible = 0
168                     .Counters.TiempoOculto = 0
170                     .Counters.Invisibilidad = 0
                    
172                     If UserList(UserConsulta).flags.Navegando = 0 Then
                            
174                         Call SendData(SendTarget.ToPCArea, UserIndex, PrepareMessageSetInvisible(.Char.CharIndex, False))

                        End If

                    End If

                End With

            End If
        
176         Call SetModoConsulta(UserConsulta)

        End With
    
        Exit Sub
    
ErrHandler:

178     Dim Error As Long: Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
180     Set Buffer = Nothing
    
182     If Error <> 0 Then Err.raise Error

End Sub

Private Sub HandleRequestProcesses(ByVal UserIndex As Integer)

100     If UserList(UserIndex).incomingData.Length < 4 Then
102         Call Err.raise(UserList(UserIndex).incomingData.NotEnoughDataErrCode)
            Exit Sub
        End If

104     With UserList(UserIndex)

            Dim Buffer As clsByteQueue
106         Set Buffer = New clsByteQueue
108         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
110         Call Buffer.ReadInteger
        
112         Dim Nick As String: Nick = Buffer.ReadASCIIString
        
            ' De aca en adelante podes meter Exit Sub sin q esplote todo alv. ;)
114         Call .incomingData.CopyBuffer(Buffer)
116         Set Buffer = Nothing
        
            ' Comando exclusivo para gms
118         If Not EsGM(UserIndex) Then Exit Sub
        
            Dim tUser As Integer

120         If Len(Nick) <> 0 Then
122             tUser = NameIndex(Nick)
            
                'Se asegura que el target exista
124             If tUser <= 0 Then
126                 Call WriteConsoleMsg(UserIndex, "El usuario se encuentra offline.", FontTypeNames.FONTTYPE_INFO)
                    Exit Sub
                End If
            
            Else
        
128             tUser = .flags.TargetUser
            
                'Se asegura que el target exista
130             If tUser <= 0 Then
132                 Call WriteConsoleMsg(UserIndex, "Primero tienes que seleccionar un usuario, haz click izquierdo sobre el.", FontTypeNames.FONTTYPE_INFO)
                    Exit Sub
                End If

            End If

134         If tUser <> UserIndex Then
135             If AdministratorAccounts.Exists(UCase$(UserList(tUser).Cuenta)) Then
136                 Call WriteConsoleMsg(UserIndex, "No podés invadir la privacidad de otro administrador.", FontTypeNames.FONTTYPE_INFO)
                    Exit Sub
                End If
            End If
        
138         If LenB(UserList(tUser).flags.ProcesosPara) = 0 Then
140             Call WriteRequestProcesses(tUser)
            End If

142         UserList(tUser).flags.ProcesosPara = UserList(tUser).flags.ProcesosPara & ":" & .name

        End With
    
        Exit Sub
    
ErrHandler:

144     Dim Error As Long: Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
146     Set Buffer = Nothing
    
148     If Error <> 0 Then Err.raise Error

End Sub

Private Sub HandleRequestScreenShot(ByVal UserIndex As Integer)

100     If UserList(UserIndex).incomingData.Length < 4 Then
102         Call Err.raise(UserList(UserIndex).incomingData.NotEnoughDataErrCode)
            Exit Sub
        End If

104     With UserList(UserIndex)

            Dim Buffer As clsByteQueue
106         Set Buffer = New clsByteQueue
108         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
110         Call Buffer.ReadInteger
        
112         Dim Nick As String: Nick = Buffer.ReadASCIIString
        
            ' De aca en adelante podes meter Exit Sub sin q esplote todo alv. ;)
114         Call .incomingData.CopyBuffer(Buffer)
116         Set Buffer = Nothing
        
            ' Comando exclusivo para gms
118         If Not EsGM(UserIndex) Then Exit Sub
        
            Dim tUser As Integer

120         If Len(Nick) <> 0 Then
122             tUser = NameIndex(Nick)
            
                'Se asegura que el target exista
124             If tUser <= 0 Then
126                 Call WriteConsoleMsg(UserIndex, "El usuario se encuentra offline.", FontTypeNames.FONTTYPE_INFO)
                    Exit Sub
                End If
            
            Else
        
128             tUser = .flags.TargetUser
            
                'Se asegura que el target exista
130             If tUser <= 0 Then
132                 Call WriteConsoleMsg(UserIndex, "Primero tienes que seleccionar un usuario, haz click izquierdo sobre el.", FontTypeNames.FONTTYPE_INFO)
                    Exit Sub
                End If

            End If

134         If tUser <> UserIndex Then
135             If AdministratorAccounts.Exists(UCase$(UserList(tUser).Cuenta)) Then
136                 Call WriteConsoleMsg(UserIndex, "No podés invadir la privacidad de otro administrador.", FontTypeNames.FONTTYPE_INFO)
                    Exit Sub
                End If
            End If
        
138         If LenB(UserList(tUser).flags.ScreenShotPara) = 0 Then
                ' Creo un buffer de 2mb para la screenshot
140             Set UserList(tUser).flags.ScreenShot = New clsByteQueue
142             UserList(tUser).flags.ScreenShot.Capacity = 2097152
            
144             Call WriteRequestScreenShot(tUser)
            End If

146         UserList(tUser).flags.ScreenShotPara = UserList(tUser).flags.ScreenShotPara & ":" & .name

        End With
    
        Exit Sub
    
ErrHandler:

148     Dim Error As Long: Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
150     Set Buffer = Nothing
    
152     If Error <> 0 Then Err.raise Error

End Sub

Private Sub HandleTolerancia0(ByVal UserIndex As Integer)

100     If UserList(UserIndex).incomingData.Length < 4 Then
102         Call Err.raise(UserList(UserIndex).incomingData.NotEnoughDataErrCode)
            Exit Sub
        End If

104     With UserList(UserIndex)

            Dim Buffer As clsByteQueue
106         Set Buffer = New clsByteQueue
108         Call Buffer.CopyBuffer(.incomingData)
        
            'Remove packet ID
110         Call Buffer.ReadInteger
        
112         Dim Nick As String: Nick = Buffer.ReadASCIIString
        
            ' De aca en adelante podes meter Exit Sub sin q esplote todo alv. ;)
114         Call .incomingData.CopyBuffer(Buffer)
116         Set Buffer = Nothing
        
            ' Comando exclusivo para admins
118         If (UserList(UserIndex).flags.Privilegios And PlayerType.Admin) = 0 Then Exit Sub
        
            Dim tUser As Integer

122         tUser = NameIndex(Nick)
        
            'Se asegura que el target exista
124         If tUser <= 0 Then
126             Call WriteConsoleMsg(UserIndex, "El usuario se encuentra offline.", FontTypeNames.FONTTYPE_INFO)
                Exit Sub
            End If
        
            Call WriteTolerancia0(tUser)
138         Call BanIpAgrega(UserList(tUser).ip)
            Call BanSerialOK(UserIndex, Nick)
            Call BanAccount(UserIndex, Nick, "Tolerancia cero")

        End With
    
        Exit Sub
    
ErrHandler:

144     Dim Error As Long: Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
146     Set Buffer = Nothing
    
148     If Error <> 0 Then Err.raise Error

End Sub

Private Sub WriteRequestScreenShot(ByVal UserIndex As Integer)

        On Error GoTo ErrHandler
    
100     Call UserList(UserIndex).outgoingData.WriteByte(ServerPacketID.RequestScreenShot)
    
        Exit Sub
    
ErrHandler:
102     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
104         Call FlushBuffer(UserIndex)
106         Resume
        End If
End Sub

Private Sub WriteRequestProcesses(ByVal UserIndex As Integer)

        On Error GoTo ErrHandler
    
100     Call UserList(UserIndex).outgoingData.WriteByte(ServerPacketID.RequestProcesses)
    
        Exit Sub
    
ErrHandler:
102     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
104         Call FlushBuffer(UserIndex)
106         Resume
        End If
End Sub

Private Sub HandleScreenShot(ByVal UserIndex As Integer)

100     With UserList(UserIndex)
    
102         If .incomingData.Length < 4 Then
104             Call Err.raise(.incomingData.NotEnoughDataErrCode)
                Exit Sub
            End If
        
            On Error GoTo ErrHandler

            Dim Buffer As clsByteQueue
106         Set Buffer = New clsByteQueue
108         Call Buffer.CopyBuffer(.incomingData)
        
            ' Remove packet ID
110         Call Buffer.ReadInteger
        
112         Dim data As String: data = Buffer.ReadASCIIString

114         Call .incomingData.CopyBuffer(Buffer)
116         Set Buffer = Nothing

            ' Si nadie requirió esto, salimos
118         If LenB(.flags.ScreenShotPara) = 0 Then Exit Sub
        
            Dim Finished As Boolean
        
            ' Por seguridad, limito a 10Kb de datos (dejo margen para el nombre y el resto del paquete)
120         If LenB(data) = 0 Or Len(data) > 10000 Then
122             data = "ERROR"
124             Finished = True
        
            ' Si envió menos de 10Kb y termina con ~~~
126         ElseIf Len(data) <= 10000 And Right$(data, 3) = "~~~" Then
                ' Damos la screenshot por terminada
128             Finished = True
            End If

            ' Lo guardo en la cola
130         Call .flags.ScreenShot.WriteASCIIStringFixed(data)
        
132         If Finished Then
                Dim ListaGMs() As String
134             ListaGMs = Split(.flags.ScreenShotPara, ":")
            
                Dim i As Integer, tGM As Integer, Offset As Long
    
136             For i = LBound(ListaGMs) To UBound(ListaGMs)
138                 tGM = NameIndex(ListaGMs(i))
                
140                 If tGM > 0 Then
                    
142                     For Offset = 0 To .flags.ScreenShot.Length - 1 Step 10000
144                         Call WriteScreenShotData(tGM, .flags.ScreenShot, Offset, min(.flags.ScreenShot.Length - Offset, 10000))
                        Next
                        
146                     Call WriteShowScreenShot(tGM, .name)
                    End If
                Next

148             .flags.ScreenShotPara = vbNullString
150             Set .flags.ScreenShot = Nothing
            End If

        End With
    
        Exit Sub
    
ErrHandler:

152     Dim Error As Long: Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
154     Set Buffer = Nothing
    
156     If Error <> 0 Then Err.raise Error

End Sub

Private Sub HandleProcesses(ByVal UserIndex As Integer)

100     With UserList(UserIndex)
    
102         If .incomingData.Length < 4 Then
104             Call Err.raise(.incomingData.NotEnoughDataErrCode)
                Exit Sub
            End If
        
            On Error GoTo ErrHandler

            Dim Buffer As clsByteQueue
106         Set Buffer = New clsByteQueue
108         Call Buffer.CopyBuffer(.incomingData)
        
            ' Remove packet ID
110         Call Buffer.ReadInteger
        
112         Dim data As String: data = Buffer.ReadASCIIString
        
            ' Por seguridad, limito a 10kb de datos (con margen para el nombre)
114         If Len(data) > 10000 Then
116             data = Left$(data, 10000) & vbNewLine & "[...Demasiado largo]"
            End If

118         Call .incomingData.CopyBuffer(Buffer)
120         Set Buffer = Nothing
        
            ' Si nadie requirió esto, salimos
122         If LenB(.flags.ProcesosPara) = 0 Then Exit Sub
        
            ' Prevengo avivadas
124         data = Replace$(data, "*:*", vbNullString)
        
            ' Anteponemos el nombre del user
126         data = .name & "*:*" & data

            Dim ListaGMs() As String
128         ListaGMs = Split(.flags.ProcesosPara, ":")
        
            Dim i As Integer, tGM As Integer

130         For i = LBound(ListaGMs) To UBound(ListaGMs)
132             tGM = NameIndex(ListaGMs(i))
            
134             If tGM > 0 Then
136                 Call WriteShowProcesses(tGM, data)
                End If
            Next
        
138         .flags.ProcesosPara = vbNullString

        End With
    
        Exit Sub
    
ErrHandler:

140     Dim Error As Long: Error = Err.Number

        On Error GoTo 0
    
        'Destroy auxiliar buffer
142     Set Buffer = Nothing
    
144     If Error <> 0 Then Err.raise Error

End Sub

Private Sub WriteShowScreenShot(ByVal UserIndex As Integer, name As String)

        On Error GoTo ErrHandler

100     With UserList(UserIndex).outgoingData

102         Call .WriteByte(ServerPacketID.ShowScreenShot)
        
104         Call .WriteASCIIString(name)

        End With

        Exit Sub

ErrHandler:
106     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
108         Call FlushBuffer(UserIndex)
110         Resume
        End If
End Sub

Private Sub WriteShowProcesses(ByVal UserIndex As Integer, data As String)

        On Error GoTo ErrHandler

100     With UserList(UserIndex).outgoingData

102         Call .WriteByte(ServerPacketID.ShowProcesses)

104         Call .WriteASCIIString(data)

        End With

        Exit Sub

ErrHandler:
106     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
108         Call FlushBuffer(UserIndex)
110         Resume
        End If
End Sub

Private Sub WriteScreenShotData(ByVal UserIndex As Integer, Buffer As clsByteQueue, ByVal Offset As Long, ByVal Size As Long)

        On Error GoTo ErrHandler

100     With UserList(UserIndex).outgoingData

102         Call .WriteByte(ServerPacketID.ScreenShotData)

104         Call .WriteSubBuffer(Buffer, Offset, Size)

        End With

        Exit Sub

ErrHandler:
106     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
108         Call FlushBuffer(UserIndex)
110         Resume
        End If
End Sub

Private Sub WriteTolerancia0(ByVal UserIndex As Integer)
    On Error GoTo ErrHandler

100     With UserList(UserIndex).outgoingData

102         Call .WriteByte(ServerPacketID.Tolerancia0)

        End With

        Exit Sub

ErrHandler:
106     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
108         Call FlushBuffer(UserIndex)
110         Resume
        End If
End Sub

Private Sub WriteRedundancia(ByVal UserIndex As Integer)
    On Error GoTo ErrHandler

100     With UserList(UserIndex).outgoingData

102         Call .WriteByte(ServerPacketID.Redundancia)
            Call .WriteByte(UserList(UserIndex).Redundance)

        End With

        Exit Sub

ErrHandler:
106     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
108         Call FlushBuffer(UserIndex)
110         Resume
        End If
End Sub

Private Sub HandleGetMapInfo(ByVal UserIndex As Integer)

    With UserList(UserIndex)
    
        .incomingData.ReadInteger
        
        If EsGM(UserIndex) Then
        
            Call WriteConsoleMsg(UserIndex, "[Info de mapa " & .Pos.Map & "]", FontTypeNames.FONTTYPE_INFO)
            Call WriteConsoleMsg(UserIndex, "Nombre = " & MapInfo(.Pos.Map).map_name, FontTypeNames.FONTTYPE_INFO)
            Call WriteConsoleMsg(UserIndex, "Seguro = " & MapInfo(.Pos.Map).Seguro, FontTypeNames.FONTTYPE_INFO)
            Call WriteConsoleMsg(UserIndex, "Newbie = " & MapInfo(.Pos.Map).Newbie, FontTypeNames.FONTTYPE_INFO)
            Call WriteConsoleMsg(UserIndex, "Nivel = " & MapInfo(.Pos.Map).MinLevel & "/" & MapInfo(.Pos.Map).MaxLevel, FontTypeNames.FONTTYPE_INFO)
            Call WriteConsoleMsg(UserIndex, "SinInviOcul = " & MapInfo(.Pos.Map).SinInviOcul, FontTypeNames.FONTTYPE_INFO)
            Call WriteConsoleMsg(UserIndex, "SinMagia = " & MapInfo(.Pos.Map).SinMagia, FontTypeNames.FONTTYPE_INFO)
            Call WriteConsoleMsg(UserIndex, "SoloClanes = " & MapInfo(.Pos.Map).SoloClanes, FontTypeNames.FONTTYPE_INFO)
            Call WriteConsoleMsg(UserIndex, "NoPKs = " & MapInfo(.Pos.Map).NoPKs, FontTypeNames.FONTTYPE_INFO)
            Call WriteConsoleMsg(UserIndex, "NoCiudadanos = " & MapInfo(.Pos.Map).NoCiudadanos, FontTypeNames.FONTTYPE_INFO)
            Call WriteConsoleMsg(UserIndex, "Salida = " & MapInfo(.Pos.Map).Salida.Map & "-" & MapInfo(.Pos.Map).Salida.X & "-" & MapInfo(.Pos.Map).Salida.Y, FontTypeNames.FONTTYPE_INFO)
            Call WriteConsoleMsg(UserIndex, "Terreno = " & MapInfo(.Pos.Map).terrain, FontTypeNames.FONTTYPE_INFO)
            Call WriteConsoleMsg(UserIndex, "Zona = " & MapInfo(.Pos.Map).zone, FontTypeNames.FONTTYPE_INFO)
        
        End If
    
    End With

End Sub

''
' Handles the "Denounce" message.
'
' @param    UserIndex The index of the user sending the message.

Private Sub HandleDenounce(ByVal UserIndex As Integer)
    '***************************************************
    If UserList(UserIndex).incomingData.Length < 3 Then
        Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
        Exit Sub
    End If
    
    On Error GoTo ErrHandler

    With UserList(UserIndex)

        'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
        Dim Buffer As New clsByteQueue
        Call Buffer.CopyBuffer(.incomingData)
        
        'Remove packet ID
        Call Buffer.ReadByte
        
        Dim name As String
        name = Buffer.ReadASCIIString()
        
        'If we got here then packet is complete, copy data back to original queue
        Call .incomingData.CopyBuffer(Buffer)

        If LenB(name) = 0 Then Exit Sub

        If EsGmChar(name) Then
            Call WriteConsoleMsg(UserIndex, "No podés denunciar a un administrador.", FontTypeNames.FONTTYPE_INFO)
            Exit Sub
        End If
        
        Dim tUser As Integer
        tUser = NameIndex(name)
        
        If tUser <= 0 Then
            Call WriteConsoleMsg(UserIndex, "El usuario no está online.", FontTypeNames.FONTTYPE_INFO)
            Exit Sub
        End If
        
        Dim Denuncia As String, HayChat As Boolean
        Denuncia = "[Últimos mensajes de " & UserList(tUser).name & "]" & vbNewLine
        
        Dim i As Integer
        For i = 1 To UBound(UserList(tUser).flags.ChatHistory)
            If LenB(UserList(tUser).flags.ChatHistory(i)) <> 0 Then
                Denuncia = Denuncia & UserList(tUser).flags.ChatHistory(i) & vbNewLine
                HayChat = True
            End If
        Next
        
        If Not HayChat Then
            Call WriteConsoleMsg(UserIndex, "El usuario no ha escrito nada. Recordá que las denuncias inválidas pueden ser motivo de advertencia.", FontTypeNames.FONTTYPE_INFO)
            Exit Sub
        End If

        If UserList(UserIndex).donador.activo = 1 Then
            Call Ayuda.Push(.name, Denuncia, "Denuncia a " & UserList(tUser).name & "-Prioritario")
            Call SendData(SendTarget.ToAdmins, 0, PrepareMessageConsoleMsg("Se ha recibido una nueva denuncia de parte de " & .name & "(Prioritario).", FontTypeNames.FONTTYPE_SERVER))
        
        Else
            Call Ayuda.Push(.name, Denuncia, "Denuncia a " & UserList(tUser).name)
            Call SendData(SendTarget.ToAdmins, 0, PrepareMessageConsoleMsg("Se ha recibido una nueva denuncia de parte de " & .name & ".", FontTypeNames.FONTTYPE_SERVER))
        End If

        Call WriteConsoleMsg(UserIndex, "Tu denuncia fue recibida por el equipo de soporte.", FontTypeNames.FONTTYPE_INFOIAO)

        Call LogConsulta(.name & " (Denuncia a " & UserList(tUser).name & ")" & vbNewLine & Denuncia)

    End With
    
    Exit Sub
    
ErrHandler:

    Dim Error As Long

    Error = Err.Number

    On Error GoTo 0
    
    'Destroy auxiliar buffer
    Set Buffer = Nothing
    
    If Error <> 0 Then Err.raise Error

End Sub

Private Sub HandleSeguroResu(ByVal UserIndex As Integer)

    With UserList(UserIndex)
    
        .incomingData.ReadInteger
        
        .flags.SeguroResu = Not .flags.SeguroResu
        
        Call WriteSeguroResu(UserIndex, .flags.SeguroResu)
    
    End With

End Sub

Private Sub HandleCuentaExtractItem(ByVal UserIndex As Integer)
        
        On Error GoTo HandleCuentaExtractItem_Err
    '***************************************************
    'Author: Ladder
    'Last Modification: 22/11/21
    'Retirar item de cuenta
    '***************************************************
100     If UserList(UserIndex).incomingData.Length < 5 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
104     With UserList(UserIndex)

106         Call .incomingData.ReadInteger
        
            Dim slot        As Byte

            Dim slotdestino As Byte

            Dim Amount      As Integer
        
108         slot = .incomingData.ReadByte()
110         Amount = .incomingData.ReadInteger()
        
112         slotdestino = .incomingData.ReadByte()
        
114         If .flags.Muerto = 1 Then
116             Call WriteConsoleMsg(UserIndex, "¡¡Estás muerto!!", FontTypeNames.FONTTYPE_INFO)
                Exit Sub

            End If
        
118         If .flags.TargetNPC < 1 Then Exit Sub
        
120         If NpcList(.flags.TargetNPC).NPCtype <> eNPCType.Banquero Then
                Exit Sub

            End If
        
            'acá va el guardado en memoria
        
        
            'User retira el item del slot
122         'Call UserRetiraItem(UserIndex, slot, Amount, slotdestino)

        End With

        
        Exit Sub

HandleCuentaExtractItem_Err:
124     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleCuentaExtractItem", Erl)
126     Resume Next
        
End Sub


Private Sub HandleCuentaDeposit(ByVal UserIndex As Integer)
        
        On Error GoTo HandleCuentaDeposit_Err
    '***************************************************
    'Author: Ladder
    'Last Modification: 22/11/21
    'Depositar item en cuenta
    '***************************************************
100     If UserList(UserIndex).incomingData.Length < 5 Then
102         Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
            Exit Sub

        End If
    
104     With UserList(UserIndex)
            'Remove packet ID
106         Call .incomingData.ReadInteger
        
            Dim slot        As Byte

            Dim slotdestino As Byte

            Dim Amount      As Integer
        
108         slot = .incomingData.ReadByte()
110         Amount = .incomingData.ReadInteger()
112         slotdestino = .incomingData.ReadByte()
        
            'Dead people can't commerce...
114         If .flags.Muerto = 1 Then
116             Call WriteConsoleMsg(UserIndex, "¡¡Estás muerto!!", FontTypeNames.FONTTYPE_INFO)
                Exit Sub

            End If
        
            'íEl target es un NPC valido?
118         If .flags.TargetNPC < 1 Then Exit Sub
        
            'íEl NPC puede comerciar?
120         If NpcList(.flags.TargetNPC).NPCtype <> eNPCType.Banquero Then
                Exit Sub
            End If
            
            If Distancia(NpcList(.flags.TargetNPC).Pos, .Pos) > 10 Then
                Call WriteLocaleMsg(UserIndex, "8", FontTypeNames.FONTTYPE_INFO)
                'Call WriteConsoleMsg(UserIndex, "Estís demasiado lejos.", FontTypeNames.FONTTYPE_INFO)
                Exit Sub
            End If
        

        
            'acá va el guardado en memoria
            
            
            
            'User deposita el item del slot rdata
122         'Call UserDepositaItem(UserIndex, slot, Amount, slotdestino)

        End With

        
        Exit Sub

HandleCuentaDeposit_Err:
124     Call RegistrarError(Err.Number, Err.Description, "Protocol.HandleCuentaDeposit", Erl)
126     Resume Next
        
End Sub

Private Sub HandleCreateEvent(ByVal UserIndex As Integer)
        
    If UserList(UserIndex).incomingData.Length < 4 Then
        Err.raise UserList(UserIndex).incomingData.NotEnoughDataErrCode
        Exit Sub
    End If
    
    On Error GoTo ErrHandler

    With UserList(UserIndex)

        'This packet contains strings, make a copy of the data to prevent losses if it's not complete yet...
        Dim Buffer As New clsByteQueue
        Call Buffer.CopyBuffer(.incomingData)
        
        'Remove packet ID
        Call Buffer.ReadInteger
        
        Dim name As String
        name = Buffer.ReadASCIIString()
        
        'If we got here then packet is complete, copy data back to original queue
        Call .incomingData.CopyBuffer(Buffer)

        If LenB(name) = 0 Then Exit Sub

        If Not EsGM(UserIndex) Then Exit Sub

        If (.flags.Privilegios And (PlayerType.Admin Or PlayerType.Dios)) = 0 Then Exit Sub
        
        Select Case UCase$(name)
            Case "INVASION BANDER"
                Call IniciarEvento(TipoEvento.Invasion, 1)
                Call LogGM(.name, "Forzó el evento Invasión en Banderville.")

            Case Else
                Call WriteConsoleMsg(UserIndex, "No existe el evento """ & name & """.", FontTypeNames.FONTTYPE_INFO)
        End Select

    End With
    
    Exit Sub
    
ErrHandler:

    Dim Error As Long

    Error = Err.Number

    On Error GoTo 0
    
    'Destroy auxiliar buffer
    Set Buffer = Nothing
    
    If Error <> 0 Then Err.raise Error
        
End Sub

Sub WriteInvasionInfo(ByVal UserIndex As Integer, ByVal Invasion As Integer, ByVal PorcentajeVida As Byte, ByVal PorcentajeTiempo As Byte)
    
        On Error GoTo ErrHandler

100     With UserList(UserIndex).outgoingData

102         Call .WriteByte(ServerPacketID.InvasionInfo)
        
104         Call .WriteByte(Invasion)

106         Call .WriteByte(PorcentajeVida)

108         Call .WriteByte(PorcentajeTiempo)

        End With

        Exit Sub

ErrHandler:
110     If Err.Number = UserList(UserIndex).outgoingData.NotEnoughSpaceErrCode Then
112         Call FlushBuffer(UserIndex)
114         Resume
        End If
    
End Sub
